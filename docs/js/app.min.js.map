{"version":3,"file":"app.min.js","sources":["../../src/js/_helpers.js","../../src/js/_queries.js","../../src/js/_scales.js","../../src/js/_icons.js","../../src/js/_conversions.js","../../src/js/_datetime.js","../../src/js/_strings.js","../../src/js/components/_hud.js","../../src/js/components/_forecast.js","../../src/js/components/_details.js","../../src/js/_moonPhases.js","../../src/js/_ThemeToggle.js","../../src/js/app.js","../../src/js/components/_errors.js"],"sourcesContent":["/**\n * Sanitise incoming API data\n *\n * @param {string} [sDirty='']\n * @returns {string} sanitised text\n */\nexport const fClean = function (sDirty = '') {\n  if (typeof sDirty === 'number') return sDirty\n  if (!sDirty) return\n\n  const temp = document.createElement('div')\n  temp.innerHTML = sDirty\n  return temp.innerText\n}\n","import { fClean } from './_helpers'\n\n/**\n * IP address based location API\n *\n * @returns {object} coordiantes object\n */\nexport const fIPapi = async function (sIpapiLocationApi) {\n  const pResp = await window.fetch(sIpapiLocationApi).then(function (pResp) {\n    if (pResp.ok) {\n      return pResp.json()\n    } else {\n      return Promise.reject(pResp)\n    }\n  })\n  return await pResp\n}\n\n/**\n * Assembles the formatted query string for CF API requests\n *\n * @param {string} urlBase\n * @param {obj} oLoc Response from oLocation API\n * @returns {string} Assembled url with query (cleaned)\n */\nexport const fAssembledQuery = function (urlBase, oLoc, _oSettings) {\n  if (!oLoc) return\n\n  let sApiQuery = `${urlBase}&lat=${oLoc.latitude}&lon=${oLoc.longitude}`\n\n  if (!oLoc.latitude || !oLoc.longitude) {\n    let sCity\n    let sState\n    let sCountry = ''\n\n    if ('city' in oLoc && oLoc.city) {\n      sCity = `&city=${oLoc.city}`\n    }\n    if ('state' in oLoc && oLoc.state) {\n      sState = `&state=${oLoc.state}`\n    }\n    if ('country' in oLoc && oLoc.country_code) {\n      sCountry = `&country=${oLoc.country_code}`\n    }\n\n    sApiQuery = `${urlBase}${sCity ?? ''}${sState ?? ''}${sCountry ?? ''}`\n  }\n\n  if (_oSettings.debug) {\n    console.log('sApiQuery query:', fClean(sApiQuery))\n  }\n\n  return fClean(sApiQuery)\n}\n\n/**\n * Browser based location API\n *\n * @returns {object} coordiantes object\n */\nconst fGeoLocApi = async function () {\n  const oOptions = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumAge: 0\n  }\n\n  const pResp = new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(\n      function (pResp) {\n        resolve(pResp.coords)\n      },\n      function (pResp) {\n        reject(pResp)\n      },\n      oOptions\n    )\n  })\n  return await pResp\n}\n\n/**\n * Gets the user location\n *\n * @param {string} [section='home']\n */\nexport const fGetLocation = async function (sIpapiLocationApi, _oSettings) {\n  if (navigator.geolocation) {\n    try {\n      if (_oSettings.debug) {\n        console.log('fGetLocation: Checking geoLoccation API: fGeoLocApi.')\n      }\n      return await fGeoLocApi()\n    } catch (e) {\n      if (_oSettings.debug) {\n        console.warn('fGetLocationL: failed using fGeoLocApi: ', e)\n      }\n      try {\n        if (_oSettings.debug) {\n          console.warn('Falling back to IP address lookup instead.')\n        }\n        return await fIPapi(sIpapiLocationApi)\n      } catch (e) {\n        if (_oSettings.debug) {\n          console.warn('fGetLocation: failed sIpapiLocationApi: ', e)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Fetch the weather for a user's location.\n *\n * @param {object} oLoc\n * @returns {object} weather object\n */\nexport const fGetWeather = async function (oLoc, sWeatherApi, _oSettings) {\n  const pResp = await window\n    .fetch(fAssembledQuery(sWeatherApi, oLoc, _oSettings))\n    .then(function (pResp) {\n      if (pResp.ok) {\n        return pResp.json()\n      } else {\n        return Promise.reject(pResp)\n      }\n    })\n  return await pResp\n}\n","/**\n * Generate a visual scale based on 5km\n *\nno * @param {float} vis (expects km units)\n *\n */\nexport const fSetVisabilityScale = function (vis) {\n  const distance = (parseFloat(vis) / 5) * 100\n  const nGraph = document.querySelector('.distance')\n  nGraph.style.setProperty('--distance', 100 - distance + '%')\n}\n\n/**\n * Assigns a named string based on temperature in C\n * 6 step scale for data-temp\n *\n * @param {float} nTemp\n * @returns {string}   string\n */\nexport const fTempDataPt = function (nTemp) {\n  if (typeof nTemp !== 'number') return 0\n\n  nTemp = parseFloat(nTemp)\n\n  let sTempScale = 'none'\n  switch (nTemp) {\n    case nTemp <= 0 ? nTemp : null:\n      sTempScale = 0\n      break\n    case nTemp >= 0 && nTemp < 10 ? nTemp : null:\n      sTempScale = 1\n      break\n    case nTemp >= 10 && nTemp < 22 ? nTemp : null:\n      sTempScale = 2\n      break\n    case nTemp >= 22 && nTemp < 27 ? nTemp : null:\n      sTempScale = 3\n      break\n    case nTemp >= 27 && nTemp < 34 ? nTemp : null:\n      sTempScale = 4\n      break\n    case nTemp >= 34 ? nTemp : null:\n      sTempScale = 5\n      break\n  }\n  return sTempScale\n}\n\n/**\n * Takes a UV float value and returns an int for CSS data-UV=\"*\" selectors.\n *\n * @param {float} nUV\n * @returns {int}  whole int value on  6 step scale\n */\nexport const fUvDataPt = function (nUV) {\n  if (!nUV) return\n  nUV = parseFloat(nUV)\n\n  let sUVclass = 'none'\n  switch (nUV) {\n    case nUV < 1 ? nUV : null:\n      sUVclass = '0'\n      break\n    case nUV >= 1 && nUV < 3 ? nUV : null:\n      sUVclass = '1'\n      break\n    case nUV >= 3 && nUV < 5 ? nUV : null:\n      sUVclass = '2'\n      break\n    case nUV >= 5 && nUV < 7 ? nUV : null:\n      sUVclass = '3'\n      break\n    case nUV >= 7 && nUV < 9 ? nUV : null:\n      sUVclass = '4'\n      break\n    case nUV >= 9 || nUV <= 10 ? nUV : null:\n      sUVclass = 5\n      break\n  }\n  return sUVclass\n}\n","import { fClean } from './_helpers'\n\nexport const oWeather = {\n  200: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  201: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  202: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  230: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  231: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  232: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  233: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  300: ['wi-day-rain', 'wi-night-alt-rain'],\n  301: ['wi-day-rain', 'wi-night-alt-rain'],\n  302: ['wi-day-rain', 'wi-night-alt-rain'],\n  500: ['wi-day-rain', 'wi-night-alt-rain'],\n  501: ['wi-day-rain', 'wi-night-alt-rain'],\n  502: ['wi-day-rain-wind', 'wi-night-alt-rain-wind'],\n  511: ['wi-day-sleet', 'wi-night-alt-sleet'],\n  520: ['wi-day-showers', 'wi-night-alt-showers'],\n  521: ['wi-day-showers', 'wi-night-alt-showers'],\n  522: ['wi-day-rain', 'wi-night-alt-rain'],\n  600: ['wi-day-snow', 'wi-night-alt-snow'],\n  602: ['wi-day-snow', 'wi-night-alt-snow'],\n  610: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n  611: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n  612: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n  622: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n  623: ['wi-day-snow', 'wi-night-alt-snow'],\n  700: ['wi-day-fog', 'wi-night-fog'],\n  711: ['wi-day-fog', 'wi-night-fog'],\n  721: ['wi-day-fog', 'wi-night-fog'],\n  731: ['wi-day-fog', 'wi-night-fog'],\n  741: ['wi-day-fog', 'wi-night-fog'],\n  751: ['wi-day-fog', 'wi-night-fog'],\n  800: ['wi-day-sunny', 'wi-night-clear'],\n  801: ['wi-day-cloudy', 'wi-night-alt-cloudy'],\n  802: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n  803: ['wi-day-cloudy-high', 'wi-night-partly-cloudy'],\n  804: ['wi-cloudy', 'wi-cloudy'],\n  900: ['wi-rain-mix', 'wi-rain-mix']\n}\n\nexport const oCloudCover = {\n  0: ['wi-day-sunny', 'wi-night-clear'],\n  1: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n  2: ['wi-day-sunny-overcast', 'wi-night-partly-cloudy'],\n  3: ['wi-cloud', 'wi-cloud'],\n  4: ['wi-cloudy', 'wi-cloudy'],\n  5: ['dark-cloudy', 'dark-cloudy']\n}\n\n/**\n * Returns the string name of the weather icon\n *\n * @param {object} oData Either the current, daily, or iHourly forecast weather object\n * @param {string || int} [iHour]\n * @returns string\n */\nexport const fGetWeatherIcon = function (oData, iHour) {\n  if (!oData) return\n\n  let iCode, sPod\n  if (!iHour && Object.prototype.hasOwnProperty.call(oData, 'pod')) {\n    // Current weather object\n    sPod = fClean(oData.sPod) === 'd' ? 0 : 1\n    iCode = parseInt(fClean(oData.weather.code))\n  } else if ('hour' in oData) {\n    // Forcast weather object (hourly)\n    sPod = fClean(oData[iHour].sPod) === 'd' ? 0 : 1\n    iCode = parseInt(fClean(oData[iHour].weather.code))\n  } else {\n    // Forcast weather object (days)\n    sPod = 1\n    iCode = parseInt(fClean(oData.weather.code))\n  }\n  return oWeather[iCode][sPod]\n}\n\n/**\n * Select the cloud iCoverage icon based on percentage value\n *\n * @param {int} iCoverage A percentage figure 0-100\n * @param {string} sPod Point of Day\n * @returns {string} the string name of the icon\n */\nexport const fGetCloudCoverIcon = function (iCoverage, sPod = 'd') {\n  if (typeof iCoverage !== 'number') return\n\n  // set day or night icon set\n  sPod = sPod === 'd' ? 0 : 1\n\n  const icons = oCloudCover\n\n  iCoverage = parseInt(iCoverage)\n\n  let aIconData = ''\n\n  switch (iCoverage) {\n    case iCoverage >= 0 && iCoverage < 16 ? iCoverage : null:\n      aIconData = [icons[0][sPod], 0]\n      break\n    case iCoverage >= 16 && iCoverage < 32 ? iCoverage : null:\n      aIconData = [icons[1][sPod], 1]\n      break\n    case iCoverage >= 32 && iCoverage < 48 ? iCoverage : null:\n      aIconData = [icons[2][sPod], 2]\n      break\n    case iCoverage >= 48 && iCoverage < 65 ? iCoverage : null:\n      aIconData = [icons[3][sPod], 3]\n      break\n    case iCoverage >= 65 && iCoverage < 83 ? iCoverage : null:\n      aIconData = [icons[4][sPod], 4]\n      break\n    case iCoverage >= 83 && iCoverage <= 100 ? iCoverage : null:\n      aIconData = [icons[5][sPod], 5]\n      break\n  }\n  aIconData.push(document.querySelector(`#svgs .svg-${aIconData[0]}`).outerHTML)\n\n  return aIconData\n}\n\n/**\n * Takes a string based representation of a DOM element, and adds inline style and/or data-* attributes to it.\n *\n * @param {string} sEl\n * @param {object} props\n * @returns {string}\n *\n * The props object may contain a top level `style` propery for inline css string\n * and or a `data` object which will be mapped to data-* attributes on the element.\n *\n *  `<span class=\"inline-icon\">\n *    ${Icons.fSetStringElAttrs(oIcons.sWindDirection, {\n *        style: `transform: rotate(${sWindDeg}deg)`,\n *        class: 'some-class',\n *        data: { temp: '6' },\n *    })}\n *  </span>`\n */\n\nexport const fSetStringElAttrs = function (sEl, props = {}) {\n  if ('content' in document.createElement('template')) {\n    const nEl = document.createElement('div')\n    nEl.innerHTML = sEl.trim()\n    const nTarget = nEl.querySelector('div >:first-child')\n\n    if (Object.prototype.hasOwnProperty.call(props, 'style')) {\n      nTarget.setAttribute('style', props.style)\n    }\n    if (Object.prototype.hasOwnProperty.call(props, 'class')) {\n      nTarget.classList.add(props.class)\n    }\n    if (\n      Object.prototype.hasOwnProperty.call(props, 'data') &&\n      Object.keys(props.data).length > 0\n    ) {\n      Object.keys(props.data).map((key) =>\n        nTarget.setAttribute(`data-${key}`, props.data[key])\n      )\n    }\n    return nEl.innerHTML\n  }\n  return ''\n}\n","/**\n * *NOTE: the API has params for both imperial and metric units, however,\n * we do the conversion ourselves so that we can switch without additional api calls.\n */\n\n/**\n * mm/hr to inch/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted measurement as string with units\n */\nexport const fPercip = function (nMeasure, _oSettings) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fPercip recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n  if (nMeasure === 0) {\n    return nMeasure\n  }\n\n  if (_oSettings.units === 'M') {\n    return `${parseFloat(nMeasure).toFixed(2)}&nbsp;mm/hr`\n  } else {\n    return `${(parseFloat(nMeasure) * 0.0393701).toFixed(2)}&nbsp;inch/hr`\n  }\n}\n\n/**\n * C to F conversion\n *\n * @param {float} nMeasure\n * @returns {string || number} converted tepm as string with units, or as a Float\n */\nexport const fTemp = function (nMeasure, _oSettings, withUnits = true) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fTemp recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n  if (typeof nMeasure !== 'number') return 0\n  if (_oSettings.units === 'M') {\n    const converted = parseFloat(nMeasure).toFixed(1)\n    return withUnits ? `${converted}°&nbsp;C` : converted\n  } else {\n    const converted = ((parseFloat(nMeasure) * 9) / 5 + 32).toFixed(1)\n    return withUnits ? `${converted}°&nbsp;F` : converted\n  }\n}\n\n/**\n * km/hr to mi/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted wind speed as string with units\n */\nexport const fKmPerHour = function (nMeasure, _oSettings) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fKmPerHour recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n  if (typeof nMeasure !== 'number') return 0\n\n  if (_oSettings.units === 'M') {\n    return `${(parseFloat(nMeasure) * 3.6000059687997).toFixed(2)}&nbsp;km/hr`\n  } else {\n    return `${(parseFloat(nMeasure) * 2.23694).toFixed(2)}&nbsp;mi/hr`\n  }\n}\n\n/**\n * km to mi\n *\n * @param {float} nMeasure\n * @returns {string} converted distance as string with units\n */\nexport const fKm = function (nMeasure, _oSettings) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fKm recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n\n  if (typeof nMeasure !== 'number') return 0\n  if (_oSettings.units === 'M') {\n    return `${parseFloat(nMeasure).toFixed(2)}&nbsp;km`\n  } else {\n    return `${(parseFloat(nMeasure) * 0.621371).toFixed(2)}&nbsp;miles`\n  }\n}\n","/**\n * Possible Weatherbit.io date responses via our Cloudflare Worker:\n *\n * 1) CURRENT.data[0].ob_time: \"2021-06-30 18:58\" <- the space will throw an errror on safari\n * 2) CURRENT.data[0].datetime: \"2021-06-30:19\" <- will not convert to valid date object\n * 3) DAILY.data[x].datetime: \"2021-06-30\"\n * 4) DAILY.data[x].valid_date: \"2021-06-30\"\n */\n\n/**\n * A helper to ensure that date strings from API are translated into the correct local time and not UTC\n * Dates without a time (as we have from the Weather.io API) may be converted to an invalid date by Chrome\n * https://css-tricks.com/everything-you-need-to-know-about-date-in-javascript/\n * API:\n *\n * TODO: A regex for different valid date patterns might be a more robust solution, however in this case we trust the API to be consistant.\n *\n * @param {string} sDate\n * @returns {string} date as string with time component\n */\nfunction fAddTimeToDateString (sDate) {\n  // If we have recieved ob_time, repalce the space with a 'T'\n  if (sDate.length >= 16) return sDate.replace(' ', 'T')\n\n  // Will produce a string that can be converted into a valid date object\n  const sNewDate = `${sDate}T00:00`\n  const oDate = new Date(sNewDate)\n\n  // test to see if we now have string which creates a valid date\n  if (typeof oDate.getMonth !== 'function') {\n    throw new Error(\n      `fAddTimeToDateString not provided a string that can be converted to a valid date: \"${sDate}:`\n    )\n  }\n\n  // return the new date string vaild for cases 2, 3, and 4)\n  return sNewDate\n}\n\n/**\n * 24H to 12H conversion based on _oSettings.units = I or M\n * https://stackoverflow.com/a/58878443/362445\n *\n * @param {string} sTime24\n * @param {object} _oSettings\n * @returns {string} converted time as string with units\n */\nexport const fTime = function (sTime24, _oSettings) {\n  if (!sTime24.includes(':') || !sTime24.length === '5') {\n    throw new Error('fTime not given a valid time string: HH:MM')\n  }\n\n  if (_oSettings.units === 'M') return sTime24\n  if (_oSettings.debug) {\n    console.log('fTime: sTime24', `${sTime24}`)\n    console.log('fTime: sTime24 length', `${sTime24.length}`)\n  }\n  const [sHours, minutes] = sTime24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1)\n  const period = +sHours < 12 ? 'AM' : 'PM'\n  const hours = +sHours % 12 || 12\n\n  return `${hours}:${minutes}&nbsp;${period}`\n}\n\n/**\n * UTC time provided by API into the local time of the users system.\n * If no date or time are provided, then the current datetime is returned\n *\n * @param {string} sDate (optional)\n * @param {object} _oSettings\n * @param {string} sTime24 (optional)\n * @returns {string} Time as string\n */\nexport const fGetLocalTime = function (sDate = '', _oSettings, sTime24 = '') {\n  let oDate, aTime\n  if (_oSettings.debug) {\n    console.log('fGetLocalTime: sDate', sDate)\n  }\n  if (sDate !== '') {\n    oDate = new Date(fAddTimeToDateString(sDate))\n  } else {\n    oDate = new Date()\n  }\n  if (sTime24 !== '') {\n    aTime = sTime24.split(':')\n  } else {\n    aTime = [oDate.getUTCHours(), oDate.getUTCMinutes()]\n  }\n  const aDate = [\n    oDate.getUTCFullYear(),\n    oDate.getUTCMonth(),\n    oDate.getUTCDate(),\n    aTime[0],\n    aTime[1]\n  ]\n\n  const oDateUtc = new Date(Date.UTC(...aDate))\n\n  if (_oSettings.debug) {\n    console.log('fGetLocalTime provided sTime24: ', sTime24)\n    console.log(\n      'fGetLocalTime UTC converted time:',\n      `${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`\n    )\n    console.log('fGetLocalTime: oDate', oDate)\n  }\n  return fTime(\n    `${oDateUtc.getHours()}`.padStart(2, '0') +\n      ':' +\n      `${oDateUtc.getMinutes()}`.padStart(2, '0'),\n    _oSettings\n  )\n}\n\n/**\n * Format date string to abreviated weekday name\n *\n * @param {string} sDate, valid date string\n * @returns {string}\n */\nexport const fGetWeekday = function (sDate) {\n  const oDate = new Date(fAddTimeToDateString(sDate))\n\n  // test our oDate object\n  if (!oDate || typeof oDate.getMonth !== 'function') {\n    throw new Error('fGetWeekday provided invalid date')\n  }\n\n  return oDate.toLocaleString('default', { weekday: 'short' })\n}\n\n/**\n * Format date string to weekday ordinal number (string)\n *\n * @param {string} sDate\n * @returns string, weekday ordinal number\n */\nexport const fGetDayOrdinal = function (sDate) {\n  const oDate = new Date(fAddTimeToDateString(sDate))\n\n  // test our date object\n  if (!oDate || typeof oDate.getMonth !== 'function') {\n    throw new Error('fFormatDayOrdinal provided invalid date')\n  }\n  // prettier-ignore\n  const sFormatedDate =\n    oDate.getDate() +\n    (oDate.getDate() % 10 === 1 && oDate.getDate() !== 11\n      ? 'st'\n      : oDate.getDate() % 10 === 2 && oDate.getDate() !== 12\n        ? 'nd'\n        : oDate.getDate() % 10 === 3 && oDate.getDate() !== 13\n          ? 'rd'\n          : 'th')\n  return sFormatedDate\n}\n","import * as Convert from './_conversions'\nimport * as Dates from './_datetime'\nimport { fClean } from './_helpers'\n\nconst _oTextStrings = {\n  en: {\n    now: 'Currently: ',\n    aira_now: 'The weather is currently: ',\n    feels_like: 'Feels Like:',\n    uv: 'UV:',\n    cloud: 'Cloud:',\n    snow: 'Snow:',\n    percip: 'Rain:',\n    wind: 'Wind:',\n    aira_winds: 'Winds traveling at',\n    aira_winds_join: 'from the',\n    vis: 'Visibility:',\n    sun: 'Sun:',\n    moon: 'Moon:'\n  }\n}\n\n/**\n * Perform string replacement for strings in the HUD component.\n *\n * @param {string} string\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string} Formatted string\n */\nexport const fHUDstr = function (\n  string,\n  _oData,\n  _oSettings,\n  _oStrings = _oTextStrings\n) {\n  const oCURRENT = _oData.CURRENT.data[0]\n\n  if (!string) return ''\n  return (\n    string\n      // HUD\n      .replace('{{now}}', _oStrings.en.now)\n      .replace(\n        '{{aira_weather_description}}',\n        `${_oStrings.en.aira_now} ${fClean(oCURRENT.weather.description)}`\n      )\n      .replace(\n        '{{weather_description}}',\n        fClean(oCURRENT.weather.description).toLowerCase()\n      )\n      .replace('{{temp}}', Convert.fTemp(fClean(oCURRENT.temp), _oSettings))\n      .replace('{{city}}', fClean(oCURRENT.city_name))\n      .replace('{{country}}', fClean(oCURRENT.country_code))\n  )\n}\n\n/**\n * Perform string replacement for strings in the details component.\n *\n * @param {string} string\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string} Formatted string\n */\nexport const fDetsStr = function (\n  string,\n  _oData,\n  _oSettings,\n  _oStrings = _oTextStrings\n) {\n  const oCURRENT = _oData.CURRENT.data[0]\n\n  if (!string) return ''\n  return (\n    string\n      // Details\n      .replace('{{feels_like}}', _oStrings.en.feels_like)\n      .replace(\n        '{{app_temp}}',\n        Convert.fTemp(fClean(oCURRENT.app_temp), _oSettings)\n      )\n      .replace('{{uv}}', _oStrings.en.uv)\n      .replace('{{uv_index}}', fClean(oCURRENT.uv.toFixed(2)))\n\n      .replace('{{cloud}}', _oStrings.en.cloud)\n      .replace('{{cloud_percent}}', `${fClean(oCURRENT.clouds)}%`)\n      .replace('{{snow}}', _oStrings.en.snow)\n      .replace(\n        '{{snow_percip}}',\n        Convert.fPercip(fClean(oCURRENT.snow), _oSettings)\n      )\n      .replace('{{rain}}', _oStrings.en.percip)\n      .replace(\n        '{{rain_percip}}',\n        Convert.fPercip(fClean(oCURRENT.precip), _oSettings)\n      )\n      .replace('{{aira_winds}}', _oStrings.en.aira_winds)\n      .replace('{{aira_winds_join}}', _oStrings.en.aira_winds_join)\n\n      .replace('{{wind}}', _oStrings.en.wind)\n      .replace(\n        '{{wind_speed}}',\n        Convert.fKmPerHour(fClean(oCURRENT.wind_spd), _oSettings)\n      )\n      .replace('{{wind_direction}}', fClean(oCURRENT.wind_cdir))\n      .replace('{{vis}}', _oStrings.en.vis)\n      .replace(\n        '{{vis_distance}}',\n        Convert.fKm(fClean(oCURRENT.vis), _oSettings)\n      )\n      .replace('{{sun_rise_set}}', _oStrings.en.sun)\n      .replace(\n        '{{sun_rise}}',\n        Dates.fGetLocalTime(\n          fClean(oCURRENT.ob_time),\n          _oSettings,\n          fClean(oCURRENT.sunrise)\n        )\n      )\n      .replace(\n        '{{sun_set}}',\n        Dates.fGetLocalTime(\n          fClean(oCURRENT.ob_time),\n          _oSettings,\n          fClean(oCURRENT.sunset)\n        )\n      )\n      .replace('{{moon}}', _oStrings.en.moon)\n  )\n}\n","import { fGetWeatherIcon } from '../_icons'\nimport { fTempDataPt } from '../_scales'\nimport { fHUDstr } from '../_strings'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's header\n *\n * @param {array} _oData\n * @returns {string}\n */\nexport const fRenderHUD = function (_oData, _oSettings) {\n  if (_oSettings.log) {\n    console.log('fRenderHUD: ', _oData)\n  }\n\n  const oCURRENT = _oData.CURRENT.data[0]\n  const sIconName = fGetWeatherIcon(oCURRENT)\n\n  const template = `<header\n        id=\"hud\" class=\"c-hud\" data-temp=\"${fTempDataPt(\n          fClean(oCURRENT.temp)\n        )}\">\n            <h3>\n                <img class=\"weather-icon\" alt=\"\" src=\"./svg/icons/weather/svg/${sIconName}.svg\" />\n                <span aria-hidden=\"true\">{{temp}}</span>\n                </h3>\n                <ul class=\"unstyled\">\n                <li aria-hidden=\"true\">{{now}} {{weather_description}}</li>\n                <li hidden>{{aira_weather_description}}</li>\n                <li>{{city}}, {{country}}</li>\n            </ul>\n        </header>\n        `\n  return fHUDstr(template, _oData, _oSettings)\n}\n","import * as Convert from '../_conversions'\nimport * as Dates from '../_datetime'\nimport * as Icons from '../_icons'\nimport * as Scales from '../_scales'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders individual upcoming forecast li elements\n *\n * @param {object} _oForecast\n * @param {object} _oSettings\n * @returns {string}\n */\nconst fRenderForecastList = function (_oForecast, _oSettings) {\n  if (_oSettings.debug) {\n    console.log('fRenderForcast: ', _oForecast)\n    console.log('_oSettings: ', _oSettings)\n  }\n  const days = Object.keys(_oForecast)\n  return days\n    .map(function (el) {\n      return `<li data-temp=\"${Scales.fTempDataPt(\n        fClean(_oForecast[el].temp),\n        _oSettings\n      )}\">\n                        <header datetime=\"${fClean(\n                          _oForecast[el].datetime\n                        )}\" aria-description=\"The forecast for\">${Dates.fGetWeekday(fClean(_oForecast[el].datetime))} ${Dates.fGetDayOrdinal(fClean(_oForecast[el].datetime))}</header>\n                        <img class=\"weather-icon\" alt=\"${fClean(\n                          _oForecast[el].weather.description\n                        )}\" src=\"./svg/icons/weather/svg/${Icons.fGetWeatherIcon(_oForecast[el])}.svg\" />\n                        <p class=\"forecast-description\" aria-hidden=\"true\">${fClean(\n                          _oForecast[el].weather.description.toLowerCase()\n                        )}</p>\n                         <span><stong>${Convert.fTemp(\n                           fClean(_oForecast[el].high_temp),\n                           _oSettings\n                         )}</stong></span>\n                          <span>${Convert.fTemp(\n                            fClean(_oForecast[el].low_temp),\n                            _oSettings\n                          )}</span>\n\n                    </li>`\n    })\n    .join('')\n}\n\n/**\n * Renders the app's upcoming forecast section\n *\n * @param {object} _oForecast\n * @returns {string}\n */\nexport const fRenderForecast = function (_oForecast, _oSettings) {\n  return `\n        <div id=\"forecast\" class=\"c-forecast\" aria-description=\"The weather forecast for the next 16 days.\">\n            <ul class=\"unstyled\">\n                ${fRenderForecastList(_oForecast, _oSettings)}\n            </ul>\n        </div>\n        `\n}\n","import * as Icons from '../_icons'\nimport * as Moon from '../_moonPhases'\nimport * as Scales from '../_scales'\nimport { fDetsStr } from '../_strings'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's details secection\n *\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string}\n */\nexport const fRenderDetails = function (_oData, _oSettings) {\n  const oCURRENT = _oData.CURRENT.data[0]\n  const iconCloud = Icons.fGetCloudCoverIcon(oCURRENT.clouds)\n  const oMoon = Moon.fPhase(oCURRENT.obj_time, _oSettings)\n  const oIcons = _oSettings.icon\n\n  const template = `\n        <div id=\"details\" class=\"c-details\">\n            <ul class=\"unstyled\">\n                <li class=\"c-feels-like\">\n                    <span class=\"left-col\">{{feels_like}} {{app_temp}}</span>\n                    ${Icons.fSetStringElAttrs(_oSettings.icon.sThermometer, {\n                      class: 'inline-icon',\n                      data: {\n                        temp: Scales.fTempDataPt(fClean(oCURRENT.app_temp))\n                      }\n                    })}\n                </li>\n                ${\n                  oCURRENT.uv\n                    ? `<li class=\"c-uv-index\">\n                            <span class=\"left-col\">{{uv}} {{uv_index}}</span>\n                            ${Icons.fSetStringElAttrs(\n                              _oSettings.icon.sSunnyDay,\n                              {\n                                class: 'inline-icon',\n                                data: {\n                                  uv: Scales.fUvDataPt(\n                                    fClean(oCURRENT.uv),\n                                    _oSettings\n                                  )\n                                }\n                              }\n                            )}\n                          </li>`\n                    : ''\n                }\n                <li class=\"c-cloud-cover\">\n                    <span class=\"left-col\">{{cloud}} {{cloud_percent}}</span>\n                    ${iconCloud[2]}\n                </li>\n                ${\n                  oCURRENT.snow\n                    ? `<li>\n                            <span class=\"left-col\">{{snow}} {{snow_percip}}</span>\n                            ${oIcons.sSnow}\n                          </li>`\n                    : ''\n                }\n                <li class=\"c-precipitation\">\n                    <span class=\"left-col\">{{rain}} {{rain_percip}}</span>\n                    ${oIcons.sRaindrop}\n                </li>\n                <li class=\"c-windspeed\" aria-description=\"{{aira_winds}} \">\n                    <span class=\"left-col\">\n                        {{wind}} {{wind_speed}}<span aira-hidden>&nbsp;|&nbsp;</span><span hidden>{{aira_winds_join}}</span>{{wind_direction}}\n                    </span>\n                    <span class=\"inline-icon\">\n                        ${Icons.fSetStringElAttrs(oIcons.sWindDirection, {\n                          style: `transform: rotate(${fClean(\n                            oCURRENT.wind_dir + 180\n                          )}deg)`\n                        })}\n                        ${oIcons.sWind}\n                    </span>\n                </li>\n                <li class=\"c-visibility\">\n                    <div class=\"visibility-wrap\">\n                        <span class=\"left-col\">{{vis}} {{vis_distance}}</span>\n                        ${oIcons.sBinoculars}\n                    </div>\n                    <div class=\"scale\" aria-hidden=\"true\"><div class=\"distance\"></div></div>\n                </li>\n                <li class=\"c-sun-rise-set\">\n                    <span class=\"left-col\">{{sun_rise_set}} {{sun_rise}} | {{sun_set}}</span>\n                    ${oIcons.sSunrise}\n                </li>\n                <li class=\"c-moonphase\">\n                    <span class=\"left-col\">{{moon}} ${oMoon.name}</span>\n                    <img class=\"inline-icon moon\"\n                        alt=\"\"\n                        height=\"25\" width=\"25\"\n                        src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\"/>\n                </li>\n            </ul>\n        </div>`\n  return fDetsStr(template, _oData, _oSettings)\n}\n","/**\n * https://gist.github.com/endel/dfe6bb2fbe679781948c#gistcomment-2811037\n *\n * @param {Date object || date string} Date Object or String with valid formatting to make date object from.\n * @returns {object} Moon phase object\n */\nexport const fPhase = function (date, _oSettings) {\n  const Moon = {\n    phases: [\n      'new',\n      'waxing-crescent',\n      'first-quarter',\n      'waxing-gibbous',\n      'full',\n      'waning-gibbous',\n      'third-quarter',\n      'waning-crescent'\n    ],\n    phase: function (year, month, day) {\n      let c = 0\n      let e = 0\n      let jd = 0\n      let b = 0\n\n      if (month < 3) {\n        year--\n        month += 12\n      }\n\n      ++month\n      c = 365.25 * year\n      e = 30.6 * month\n      jd = c + e + day - 694039.09 // jd is total days elapsed\n      jd /= 29.5305882 // divide by the moon cycle\n      b = parseInt(jd) // int(jd) -> b, take integer part of jd\n      jd -= b // subtract integer part to leave fractional part of original jd\n      b = Math.round(jd * this.phases.length) // scale fraction from 0-8 and round\n\n      if (b >= 8) b = 0 // 0 and 8 are the same so turn 8 into 0\n      return { phase: b, name: Moon.phases[b] }\n    }\n  }\n\n  // if no date, create date based on current system date\n  date = date || new Date()\n\n  // if provided a date, try to make a new Date object\n  date = date instanceof String ? new Date(date) : date\n\n  // test our date object\n  if (!date || typeof date.getMonth !== 'function') {\n    if (_oSettings.debug) {\n      console.error(\n        `fMoonPhase provided invalid date strings: year: ${date.year}, month: ${date.month}, day: ${date.day}`\n      )\n    }\n  }\n\n  const yyyy = date.getFullYear()\n  const mm = date.getMonth() + 1 // 0 indexed\n  const dd = date.getDate()\n\n  const oMoonPhase = Moon.phase(yyyy, mm, dd)\n\n  if (_oSettings.debug) {\n    console.log('fMoonPhase result: ', oMoonPhase)\n  }\n\n  return oMoonPhase\n}\n","/**\n * Darkmode Theme Toggle\n *\n * @author bnjmnrsh@gmail.com\n */\n\n//\n// Private methods\n//\n\n/**\n * Get the current value of the CSS '--color-mode' property.\n * https://piccalil.li/tutorial/get-css-custom-property-value-with-javascript/\n *\n * @returns {string} dark || light\n */\nconst fGetColorModeCSSpropVal = function (oSettings = {}) {\n  let sResponse = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(oSettings.COLOR_MODE_CSS_PROP)\n  if (sResponse.length) {\n    sResponse = sResponse.replace(/\"/g, '').trim()\n  }\n\n  if (oSettings.debug) {\n    console.log('ThemeToggle:fGetColorModeCSSpropVal: sResponse:', sResponse)\n  }\n\n  return sResponse\n}\n\n/**\n * Get the last saved value from local storage, falling back to System prefers-color-scheme via CSS prop.\n *\n * @param {obj} oSettings\n * @returns {string} light || dark\n */\nconst fGetLocalStoreColorSchemeVal = function (oSettings = {}) {\n  let sCurrentSetting = window.localStorage.getItem(oSettings.STORAGE_KEY)\n\n  // If nothing stored, check which style sheet is active\n  if (sCurrentSetting === null) {\n    sCurrentSetting =\n      fGetColorModeCSSpropVal(oSettings) === 'dark' ? 'dark' : 'light'\n    // Set to localStorage\n    window.localStorage.setItem(oSettings.STORAGE_KEY, sCurrentSetting)\n  }\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fGetLocalStoreColorSchemeVal: sCurrentSetting:',\n      sCurrentSetting\n    )\n  }\n\n  return sCurrentSetting\n}\n\n/**\n * Save user perfered theme to localStorage\n *\n * @param {string} sCurrentSetting 'light' || 'dark'\n * @param {obj} oSettings\n */\nconst fSetLocalStoreColorSchemeVal = function (\n  sCurrentSetting,\n  oSettings = {}\n) {\n  if (sCurrentSetting === 'light' || sCurrentSetting === 'dark') {\n    window.localStorage.setItem(oSettings.STORAGE_KEY, sCurrentSetting)\n  }\n\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fSetLocalStoreColorSchemeVal: sCurrentSetting:',\n      sCurrentSetting\n    )\n  }\n}\n\n/**\n * Apply data-user-color-scheme to document, update localStore.\n *\n * @param {string} sColorSetting\n * @param {obj} oSettings\n */\nconst fSetHTMLdataAttr = function (sColorSetting, oSettings = {}) {\n  const sCurrentSetting =\n    sColorSetting || fGetLocalStoreColorSchemeVal(oSettings)\n\n  if (sCurrentSetting === 'light' || sCurrentSetting === 'dark') {\n    // Set the data attr\n    document.documentElement.setAttribute(\n      'data-user-color-scheme',\n      sCurrentSetting\n    )\n  }\n\n  if (oSettings.debug) {\n    console.log('ThemeToggle:fSetHTMLdataAttr: sColorSetting:', sColorSetting)\n  }\n}\n\n/**\n * Update the aria-pressed state of toggle-button based on passed value.\n *\n * @param {string} sSetButtonState 'light' || 'dark'\n * @param {obj} oSettings\n */\nconst fSetButtonState = function (\n  sSetButtonState,\n  nThemeToggel,\n  oSettings = {}\n) {\n  switch (sSetButtonState) {\n    case 'dark':\n      nThemeToggel.setAttribute('aria-pressed', 'true')\n      break\n    case 'light':\n      nThemeToggel.removeAttribute('aria-pressed')\n      break\n  }\n\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fSetButtonState: sSetButtonState:',\n      sSetButtonState\n    )\n  }\n}\n\n/**\n * Set the UI color scheme, button state, and update localStore.\n *\n * @param {string} sColorSetting 'light' || 'dark'\n * @param {obj} oSettings\n */\nconst fSetGlobalColorScheme = function (\n  sColorSetting,\n  nThemeToggel,\n  oSettings\n) {\n  const sCurrentSetting =\n    sColorSetting || fGetLocalStoreColorSchemeVal(oSettings)\n\n  switch (sCurrentSetting) {\n    case 'light':\n      fSetHTMLdataAttr('light', oSettings)\n      fSetButtonState('light', nThemeToggel, oSettings)\n      fSetLocalStoreColorSchemeVal('light', oSettings)\n      break\n    case 'dark':\n      fSetHTMLdataAttr('dark', oSettings)\n      fSetButtonState('dark', nThemeToggel, oSettings)\n      fSetLocalStoreColorSchemeVal('dark', oSettings)\n      break\n  }\n\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fSetGlobalColorScheme: sCurrentSetting:',\n      sCurrentSetting\n    )\n  }\n}\n\n/**\n * Toggle the UI color scheme & button state based on value saved in window.localStorage.\n *\n * @param {obj} oSettings\n */\nconst fToggleGlobalColorScheme = function (nThemeToggel, oSettings = {}) {\n  const sCurrentSetting = fGetLocalStoreColorSchemeVal(oSettings)\n\n  switch (sCurrentSetting) {\n    case 'light':\n      fSetGlobalColorScheme('dark', nThemeToggel, oSettings)\n      break\n    case 'dark':\n      fSetGlobalColorScheme('light', nThemeToggel, oSettings)\n      break\n  }\n\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fToggleGlobalColorScheme: sCurrentSetting:',\n      sCurrentSetting\n    )\n  }\n}\n\n/**\n * Add listeners for button clicks, changes to prefers-color-scheme, and the html data-user-color-scheme attr.\n *\n * @param {obj} oSettings\n */\nconst fAddEventListeners = function (nThemeToggel, oSettings = {}) {\n  // Detect prefers-color-scheme system preference changes\n  window\n    .matchMedia('(prefers-color-scheme: dark)')\n    .addEventListener('change', function (e) {\n      if (e.matches) {\n        fSetGlobalColorScheme('dark', nThemeToggel, oSettings)\n      } else {\n        fSetGlobalColorScheme('light', nThemeToggel, oSettings)\n      }\n\n      if (oSettings.debug && e.matches) {\n        console.log(\n          `ThemeToggle:fAddEventListeners: Window detected system color pref change: ${e.matches}`\n        )\n      }\n    })\n\n  // Capture clicks on the toggle\n  document.addEventListener('click', function (e) {\n    if (e.target.id === nThemeToggel.id) {\n      fToggleGlobalColorScheme(nThemeToggel, oSettings)\n\n      if (oSettings.debug) {\n        console.log(\n          `ThemeToggle:fAddEventListeners: button \"${e.target.id}\" clicked.`\n        )\n      }\n    }\n  })\n\n  // listen for changes to on html data-user-color-scheme attr if mutiple toggle-buttons\n  const observer = new window.MutationObserver(function (mutations) {\n    mutations.forEach(function (mutation) {\n      if (mutation.attributeName === `data-${oSettings.STORAGE_KEY}`) {\n        const sHTMLcolorMode = document.documentElement.getAttribute(\n          `data-${oSettings.STORAGE_KEY}`\n        )\n        // Update button state to reflect change\n        fSetButtonState(sHTMLcolorMode, nThemeToggel, oSettings)\n        // Update localStorage value to reflect change\n        fSetLocalStoreColorSchemeVal(sHTMLcolorMode, oSettings)\n\n        if (oSettings.debug) {\n          console.log(\n            `ThemeToggle:fAddEventListeners: MutationObserver change: data-${oSettings.STORAGE_KEY}=\"${sHTMLcolorMode}\"`\n          )\n        }\n      }\n    })\n  })\n  // MutationObserver options\n  observer.observe(document.documentElement, {\n    attributeFilter: [`data-${oSettings.STORAGE_KEY}`],\n    attributeOldValue: true\n  })\n}\n\nexport const ThemeToggle = function (oOptions = {}) {\n  //\n  // Settings & Defaults\n  //\n\n  const oDefaults = {\n    buttonID: '#theme-toggler',\n    debug: false\n  }\n\n  // Merge user options into defaults\n  const oSettings = Object.assign({}, oDefaults, oOptions)\n  oSettings.STORAGE_KEY = 'user-color-scheme'\n  oSettings.COLOR_MODE_CSS_PROP = '--color-mode'\n  this.oSettings = oSettings\n\n  //\n  // Varriables\n  //\n\n  const nThemeToggel = document.querySelector(oSettings.buttonID)\n\n  /**\n   * Public init method\n   *\n   * @returns public init method\n   */\n  this.init = function () {\n    if (!nThemeToggel) {\n      console.warn(\n        \"ThemeToggle: Couldn't find the theme toggel button with selector:\",\n        nThemeToggel\n      )\n      return\n    } else {\n      // Enable the button\n      nThemeToggel.removeAttribute('disabled')\n    }\n\n    // Add event listeners\n    fAddEventListeners(nThemeToggel, oSettings)\n\n    // Establish toggle/theme state based on system and/or last pref saved in localStorage\n    fSetGlobalColorScheme(\n      fGetLocalStoreColorSchemeVal(oSettings),\n      nThemeToggel,\n      oSettings\n    )\n\n    if (oSettings.debug) {\n      console.log(\n        'ThemeToggle:Init,  current localStore setting: ',\n        window.localStorage.getItem(oSettings.STORAGE_KEY)\n      )\n    }\n  }\n}\n","import * as Queries from './_queries'\nimport * as Scales from './_scales'\n\nimport { fRenderHUD } from './components/_hud'\nimport { fRenderForecast } from './components/_forecast'\nimport { fRenderDetails } from './components/_details'\nimport { fRenderErrors } from './components/_errors'\nimport { ThemeToggle } from './_ThemeToggle'\n\n/**\n * The Weather Service\n *\n * @author bnjmnrsh@gmail.com\n *\n * @param {object} [_oSettings={}]\n */\n\nconst weatherApp = function (_oSettings = {}) {\n  document.documentElement.classList.remove('no-js')\n\n  const _oDefaults = {\n    target: '#app',\n    units: 'M',\n    debug: false,\n    dev: false\n  }\n\n  // Merge settings with defaults\n  _oSettings = Object.assign(_oDefaults, _oSettings)\n\n  // API urls\n  const sIpapiLocationApi = 'https://ipapi.co/json/'\n  let sWeatherApi = 'https://weatherserv.bnjmnrsh.workers.dev/?'\n\n  if (_oSettings.dev) {\n    sWeatherApi = `${sWeatherApi}&DEV=${_oSettings.dev}`\n  }\n\n  // DOM Target\n  const nApp = document.querySelector(_oSettings.target)\n\n  // SVGs are staged in HTML for details section,\n  // the remainder of images are inlined(except Cloudcover & Moon, loaded dynamically)\n  const nIcons = document.querySelector('#svgs')\n\n  _oSettings.icon = {\n    // degrees/compass inline\n    sWind: nIcons.querySelector('.svg-wi-strong-wind').outerHTML,\n    sThermometer: nIcons.querySelector('.svg-wi-thermometer').outerHTML,\n    sWindDirection: nIcons.querySelector('.svg-wi-wind-deg').outerHTML,\n    sSnow: nIcons.querySelector('.svg-wi-snow').outerHTML,\n\n    // cloud lodaded dynamically\n    sRaindrop: nIcons.querySelector('.svg-wi-raindrop').outerHTML,\n    sBinoculars: nIcons.querySelector('.svg-binoculars').outerHTML,\n    sSunrise: nIcons.querySelector('.svg-wi-sunrise').outerHTML,\n    sSunset: nIcons.querySelector('.svg-wi-sunset').outerHTML,\n    sSunnyDay: nIcons.querySelector('.svg-wi-day-sunny').outerHTML\n    // moon phases are loaded as img pathsL: <img src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\">\n  }\n\n  /**\n   * Build the UI\n   *\n   * @param {array} data\n   */\n  const fBuildUI = function (_oData) {\n    nApp.classList.remove('loading')\n    nApp.innerHTML =\n      fRenderHUD(_oData, _oSettings) +\n      fRenderDetails(_oData, _oSettings) +\n      fRenderForecast(_oData.DAILY.data, _oSettings)\n\n    // Adjust the visibility 'fogg' bar in the details section\n    Scales.fSetVisabilityScale(_oData.CURRENT.data[0].vis)\n  }\n\n  /**\n   * Init\n   */\n  const fInit = async function () {\n    try {\n      const loc = await Queries.fGetLocation(sIpapiLocationApi, _oSettings)\n      const _oWeather = await Queries.fGetWeather(loc, sWeatherApi, _oSettings)\n\n      if (_oSettings.debug) {\n        console.log('fGetLocation response:', loc)\n        console.log('fGetWeather response:', _oWeather)\n      }\n\n      fBuildUI(_oWeather)\n    } catch (e) {\n      console.error('init error: ', e)\n      nApp.innerHTML = fRenderErrors(e)\n    }\n  }\n  fInit()\n\n  // Enable ThemeToggle\n  const themeToggle = new ThemeToggle({ debug: _oSettings.debug })\n  themeToggle.init()\n\n  // const themeToggle2 = new ThemeToggle({\n  //   debug: true,\n  //   buttonID: '#theme-toggler-2'\n  // })\n  // themeToggle2.init()\n}\n\n// with debugging and Imperial Units\nconst settings = {\n  units: 'I',\n  debug: false,\n  dev: false // 5XX_FULL, 5XX_PARTIAL, DUMMY, NO_KEY, OVER_QUOTA, API_ERROR\n}\n\nweatherApp(settings)\n","/**\n * Render errors to the user\n *\n * @param {obj} err\n * @returns\n */\nexport const fRenderErrors = function (err) {\n  return `<div id=\"ohnos\" class=\"c-screen errors\">\n                <h3><span aria-hidden=\"true\">⥀.⥀</span><br>Oh Nooos!</h3>\n                <p class=\"sr-only\">There has been a crittical error:</p>\n                    <div class=\"errors-wrap\">\n                        ${err.stack ? '<code>' + err.stack + '</code>' : ''}\n                        ${\n                          err.status\n                            ? '<code>' +\n                              err.statusText +\n                              ': ' +\n                              err.status +\n                              '</code>'\n                            : ''\n                        }\n                    </div>\n                <img alt=\"\" class=\"screen-icon errors-icon\" src=\"./svg/icons/weather/svg/wi-alien.svg\"/>\n            </div>`\n}\n"],"names":["fClean","sDirty","temp","document","createElement","innerHTML","innerText","fGetLocation","async","sIpapiLocationApi","_oSettings","navigator","geolocation","debug","console","log","oOptions","enableHighAccuracy","timeout","maximumAge","pResp","Promise","resolve","reject","getCurrentPosition","coords","fGeoLocApi","e","warn","window","fetch","then","ok","json","fIPapi","fGetWeather","oLoc","sWeatherApi","urlBase","sApiQuery","latitude","longitude","sCity","sState","sCountry","city","state","country_code","fAssembledQuery","fTempDataPt","nTemp","sTempScale","parseFloat","fUvDataPt","nUV","sUVclass","oWeather","oCloudCover","fGetWeatherIcon","oData","iHour","iCode","sPod","Object","prototype","hasOwnProperty","call","parseInt","weather","code","fSetStringElAttrs","sEl","props","nEl","trim","nTarget","querySelector","setAttribute","style","classList","add","class","keys","data","length","map","key","fPercip","nMeasure","units","toFixed","fTemp","withUnits","converted","fAddTimeToDateString","sDate","replace","sNewDate","Date","getMonth","Error","fGetLocalTime","sTime24","oDate","aTime","split","getUTCHours","getUTCMinutes","aDate","getUTCFullYear","getUTCMonth","getUTCDate","oDateUtc","UTC","getHours","getMinutes","includes","sHours","minutes","match","slice","fTime","padStart","_oTextStrings","en","now","aira_now","feels_like","uv","cloud","snow","percip","wind","aira_winds","aira_winds_join","vis","sun","moon","fDetsStr","string","_oData","_oStrings","oCURRENT","CURRENT","Convert.fTemp","app_temp","clouds","Convert.fPercip","precip","Convert.fKmPerHour","wind_spd","wind_cdir","Convert.fKm","Dates.fGetLocalTime","ob_time","sunrise","sunset","fRenderHUD","sIconName","description","toLowerCase","city_name","fHUDstr","fRenderForecastList","_oForecast","el","Scales.fTempDataPt","datetime","toLocaleString","weekday","Dates.fGetWeekday","getDate","Dates.fGetDayOrdinal","Icons.fGetWeatherIcon","high_temp","low_temp","join","fRenderDetails","iconCloud","iCoverage","icons","aIconData","push","outerHTML","Icons.fGetCloudCoverIcon","oMoon","date","Moon","phases","phase","year","month","day","c","jd","b","Math","round","this","name","String","error","yyyy","getFullYear","mm","dd","oMoonPhase","Moon.fPhase","obj_time","oIcons","icon","template","Icons.fSetStringElAttrs","sThermometer","sSunnyDay","Scales.fUvDataPt","sSnow","sRaindrop","sWindDirection","wind_dir","sWind","sBinoculars","sSunrise","fGetLocalStoreColorSchemeVal","oSettings","sCurrentSetting","localStorage","getItem","STORAGE_KEY","sResponse","getComputedStyle","documentElement","getPropertyValue","COLOR_MODE_CSS_PROP","fGetColorModeCSSpropVal","setItem","fSetLocalStoreColorSchemeVal","fSetHTMLdataAttr","sColorSetting","fSetButtonState","sSetButtonState","nThemeToggel","removeAttribute","fSetGlobalColorScheme","fAddEventListeners","matchMedia","addEventListener","matches","target","id","fToggleGlobalColorScheme","MutationObserver","mutations","forEach","mutation","attributeName","sHTMLcolorMode","getAttribute","observe","attributeFilter","attributeOldValue","ThemeToggle","assign","buttonID","init","remove","dev","nApp","nIcons","sSunset","fBuildUI","fRenderForecast","DAILY","distance","setProperty","Scales.fSetVisabilityScale","loc","Queries.fGetLocation","_oWeather","Queries.fGetWeather","err","stack","status","statusText","fInit","weatherApp"],"mappings":"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"}