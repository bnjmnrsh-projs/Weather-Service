{"version":3,"file":"app.min.js","sources":["../../src/js/_helpers.js","../../src/js/_queries.js","../../src/js/_scales.js","../../src/js/_conversions.js","../../src/js/_icons.js","../../src/js/_strings.js","../../src/js/_datetime.js","../../src/js/components/_forcast.js","../../src/js/components/_details.js","../../src/js/_moonPhases.js","../../src/js/app.js","../../src/js/components/_hud.js","../../src/js/components/_errors.js"],"sourcesContent":["/**\n * Sanitise incoming API data\n *\n * @param {string} [sDirty='']\n * @returns {string} sanitised text\n */\nexport const fClean = function (sDirty = '') {\n    if (typeof sDirty === 'number') return sDirty\n    if (!sDirty) return\n\n    const temp = document.createElement('div')\n    temp.innerHTML = sDirty\n    return temp.innerText\n}\n","import { fClean } from './_helpers'\n\n/**\n * IP address based location API\n *\n * @returns {object} coordiantes object\n */\nexport const fIPapi = async function (sIpapiLocationApi) {\n    const pResp = await fetch(sIpapiLocationApi).then(function (pResp) {\n        if (pResp.ok) {\n            return pResp.json()\n        } else {\n            return Promise.reject(pResp)\n        }\n    })\n    return await pResp\n}\n\n/**\n * Assembles the formatted query string for CF API requests\n *\n * @param {string} urlBase\n * @param {obj} oLoc Response from oLocation API\n * @returns {string} Assembled url with query (cleaned)\n */\nexport const fAssembledQuery = function (urlBase, oLoc, _oSettings) {\n    if (!oLoc) return\n\n    let sApiQuery = `${urlBase}&lat=${oLoc.latitude}&lon=${oLoc.longitude}`\n\n    if (!oLoc.latitude || !oLoc.longitude) {\n        let sCity,\n            sState,\n            sCountry = ''\n\n        if ('city' in oLoc && oLoc.city) {\n            sCity = `&city=${oLoc.city}`\n        }\n        if ('state' in oLoc && oLoc.state) {\n            sState = `&state=${oLoc.state}`\n        }\n        if ('country' in oLoc && oLoc.country_code) {\n            sCountry = `&country=${oLoc.country_code}`\n        }\n\n        sApiQuery = `${urlBase}${sCity ?? ''}${sState ?? ''}${sCountry ?? ''}`\n    }\n\n    _oSettings.debug ? console.log('sApiQuery query:', fClean(sApiQuery)) : ''\n\n    return fClean(sApiQuery)\n}\n\n/**\n * Browser based location API\n *\n * @returns {object} coordiantes object\n */\nconst fGeoLocApi = async function () {\n    const oOptions = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n    }\n\n    const pResp = new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(\n            function (pResp) {\n                resolve(pResp.coords)\n            },\n            function (pResp) {\n                reject(pResp)\n            },\n            oOptions\n        )\n    })\n    return await pResp\n}\n\n/**\n * Gets the user location\n *\n * @param {string} [section='home']\n */\nexport const fGetLocation = async function (sIpapiLocationApi, _oSettings) {\n    if (navigator.geolocation) {\n        try {\n            _oSettings.debug\n                ? console.log(\n                      'fGetLocation: Checking geoLoccation API: fGeoLocApi.'\n                  )\n                : ''\n            return await fGeoLocApi()\n        } catch (e) {\n            _oSettings.debug\n                ? console.warn('fGetLocationL: failed using fGeoLocApi: ', e)\n                : ''\n            try {\n                console.log('5')\n                _oSettings.debug\n                    ? console.warn('Falling back to IP address lookup instead.')\n                    : ''\n                return await fIPapi(sIpapiLocationApi)\n            } catch (e) {\n                _oSettings.debug\n                    ? console.warn(\n                          'fGetLocation: failed sIpapiLocationApi: ',\n                          e\n                      )\n                    : ''\n            }\n        }\n    }\n}\n\n/**\n * Fetch the weather for a user's location.\n *\n * @param {object} oLoc\n * @returns {object} weather object\n */\nexport const fGetWeather = async function (oLoc, sWeatherApi, _oSettings) {\n    const pResp = await fetch(\n        fAssembledQuery(sWeatherApi, oLoc, _oSettings)\n    ).then(function (pResp) {\n        if (pResp.ok) {\n            return pResp.json()\n        } else {\n            return Promise.reject(pResp)\n        }\n    })\n    return await pResp\n}\n","/**\n * Generate a visual scale based on 5km\n *\n * @param {float} vis\n */\nexport const fSetVisabilityScale = function (vis) {\n    const distance = (parseFloat(vis) / 5) * 100\n\n    const nGraph = app.querySelector('.distance')\n    nGraph.style.setProperty('--distance', 100 - distance + '%')\n}\n\n/**\n * Assigns a named string based on temperature in C\n * 6 step scale for data-temp\n *\n * @param {float} nTemp\n * @returns {string}   string\n */\nexport const fTempDataPt = function (nTemp) {\n    if (typeof nTemp !== 'number') return 0\n\n    nTemp = parseFloat(nTemp)\n\n    let sTempScale = 'none'\n    switch (nTemp) {\n        case nTemp <= 0 ? nTemp : null:\n            sTempScale = 0\n            break\n        case nTemp >= 0 && nTemp < 10 ? nTemp : null:\n            sTempScale = 1\n            break\n        case nTemp >= 10 && nTemp < 22 ? nTemp : null:\n            sTempScale = 2\n            break\n        case nTemp >= 22 && nTemp < 27 ? nTemp : null:\n            sTempScale = 3\n            break\n        case nTemp >= 27 && nTemp < 34 ? nTemp : null:\n            sTempScale = 4\n            break\n        case nTemp >= 34 ? nTemp : null:\n            sTempScale = 5\n            break\n    }\n    return sTempScale\n}\n\n/**\n * Takes a UV float value and returns an int for CSS data-UV=\"*\" selectors.\n *\n * @param {float} nUV\n * @returns {int}  whole int value on  6 step scale\n */\nexport const fUvDataPt = function (nUV) {\n    if (!nUV) return\n    nUV = parseFloat(nUV)\n\n    let sUVclass = 'none'\n    switch (nUV) {\n        case nUV < 1 ? nUV : null:\n            sUVclass = '0'\n            break\n        case nUV >= 1 && nUV < 3 ? nUV : null:\n            sUVclass = '1'\n            break\n        case nUV >= 3 && nUV < 5 ? nUV : null:\n            sUVclass = '2'\n            break\n        case nUV >= 5 && nUV < 7 ? nUV : null:\n            sUVclass = '3'\n            break\n        case nUV >= 7 && nUV < 9 ? nUV : null:\n            sUVclass = '4'\n            break\n        case nUV >= 9 || nUV <= 10 ? nUV : null:\n            uvClass = 5\n            break\n    }\n    return sUVclass\n}\n","/**\n * *NOTE: the API has params for both imperial and metric units, however,\n * we do the conversion ourselves so that we can switch without additional api calls.\n */\n\n/**\n * mm/hr to inch/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted measurement as string with units\n */\nexport const fPercip = function (nMeasure, _oSettings) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fPercip recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n    if (nMeasure === 0) {\n        return nMeasure\n    }\n\n    if (_oSettings.units === 'M') {\n        return `${parseFloat(nMeasure).toFixed(2)}&nbsp;mm/hr`\n    } else {\n        return `${(parseFloat(nMeasure) * 0.0393701).toFixed(2)}&nbsp;inch/hr`\n    }\n}\n\n/**\n * C to F conversion\n *\n * @param {float} nMeasure\n * @returns {string || number} converted tepm as string with units, or as a Float\n */\nexport const fTemp = function (nMeasure, _oSettings, withUnits = true) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fTemp recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n    if (typeof nMeasure !== 'number') return 0\n    if (_oSettings.units === 'M') {\n        let converted = parseFloat(nMeasure).toFixed(1)\n        return withUnits ? `${converted}°&nbsp;C` : converted\n    } else {\n        let converted = ((parseFloat(nMeasure) * 9) / 5 + 32).toFixed(1)\n        return withUnits ? `${converted}°&nbsp;F` : converted\n    }\n}\n\n/**\n * km/hr to mi/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted wind speed as string with units\n */\nexport const fKmPerHour = function (nMeasure, _oSettings) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fKmPerHour recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n    if (typeof nMeasure !== 'number') return 0\n\n    if (_oSettings.units === 'M') {\n        return `${(parseFloat(nMeasure) * 3.6000059687997).toFixed(\n            2\n        )}&nbsp;km/hr`\n    } else {\n        return `${(parseFloat(nMeasure) * 2.23694).toFixed(2)}&nbsp;mi/hr`\n    }\n}\n\n/**\n * km to mi\n *\n * @param {float} nMeasure\n * @returns {string} converted distance as string with units\n */\nexport const fKm = function (nMeasure, _oSettings) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fKm recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n\n    if (typeof nMeasure !== 'number') return 0\n    if (_oSettings.units === 'M') {\n        return `${parseFloat(nMeasure).toFixed(2)}&nbsp;km`\n    } else {\n        return `${(parseFloat(nMeasure) * 0.621371).toFixed(2)}&nbsp;miles`\n    }\n}\n","import * as Helpers from './_helpers'\n\nexport const oWeather = {\n    200: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    201: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    202: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    230: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    231: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    232: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    233: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    300: ['wi-day-rain', 'wi-night-alt-rain'],\n    301: ['wi-day-rain', 'wi-night-alt-rain'],\n    302: ['wi-day-rain', 'wi-night-alt-rain'],\n    500: ['wi-day-rain', 'wi-night-alt-rain'],\n    501: ['wi-day-rain', 'wi-night-alt-rain'],\n    502: ['wi-day-rain-wind', 'wi-night-alt-rain-wind'],\n    511: ['wi-day-sleet', 'wi-night-alt-sleet'],\n    520: ['wi-day-showers', 'wi-night-alt-showers'],\n    521: ['wi-day-showers', 'wi-night-alt-showers'],\n    522: ['wi-day-rain', 'wi-night-alt-rain'],\n    600: ['wi-day-snow', 'wi-night-alt-snow'],\n    602: ['wi-day-snow', 'wi-night-alt-snow'],\n    610: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n    611: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n    612: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n    622: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n    623: ['wi-day-snow', 'wi-night-alt-snow'],\n    700: ['wi-day-fog', 'wi-night-fog'],\n    711: ['wi-day-fog', 'wi-night-fog'],\n    721: ['wi-day-fog', 'wi-night-fog'],\n    731: ['wi-day-fog', 'wi-night-fog'],\n    741: ['wi-day-fog', 'wi-night-fog'],\n    751: ['wi-day-fog', 'wi-night-fog'],\n    800: ['wi-day-sunny', 'wi-night-clear'],\n    801: ['wi-day-cloudy', 'wi-night-alt-cloudy'],\n    802: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n    803: ['wi-day-cloudy-high', 'wi-night-partly-cloudy'],\n    804: ['wi-cloudy', 'wi-cloudy'],\n    900: ['wi-rain-mix', 'wi-rain-mix'],\n}\n\nexport const oCloudCover = {\n    0: ['wi-day-sunny', 'wi-night-clear'],\n    1: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n    2: ['wi-day-sunny-overcast', 'wi-night-partly-cloudy'],\n    3: ['wi-cloud', 'wi-cloud'],\n    4: ['wi-cloudy', 'wi-cloudy'],\n    5: ['dark-cloudy', 'dark-cloudy'],\n}\n\n/**\n * Returns the string name of the weather icon\n *\n * @param {object} oData Either the current, daily, or iHourly forcast weather object\n * @param {string || int} [iHour]\n * @returns string\n */\nexport const fGetWeatherIcon = function (oData, iHour) {\n    if (!oData) return\n\n    let iCode, sPod\n    if (!iHour && oData.hasOwnProperty('pod')) {\n        // Current weather object\n        sPod = Helpers.fClean(oData.sPod) === 'd' ? 0 : 1\n        iCode = parseInt(Helpers.fClean(oData.weather.code))\n    } else if ('hour' in oData) {\n        // Forcast weather object (hourly)\n        sPod = Helpers.fClean(oData[iHour].sPod) === 'd' ? 0 : 1\n        iCode = parseInt(Helpers.fClean(oData[iHour].weather.code))\n    } else {\n        // Forcast weather object (days)\n        sPod = 1\n        iCode = parseInt(Helpers.fClean(oData.weather.code))\n    }\n    return oWeather[iCode][sPod]\n}\n\n/**\n * Select the cloud iCoverage icon based on percentage value\n *\n * @param {int} iCoverage A percentage figure 0-100\n * @param {string} sPod Point of Day\n * @returns {string} the string name of the icon\n */\nexport const fGetCloudCoverIcon = function (iCoverage, sPod = 'd') {\n    if (typeof iCoverage !== 'number') return\n\n    // set day or night icon set\n    sPod = sPod = 'd' ? 0 : 1\n\n    const icons = oCloudCover\n\n    iCoverage = parseInt(iCoverage)\n\n    let aIconData = ''\n\n    switch (iCoverage) {\n        case iCoverage >= 0 && iCoverage < 16 ? iCoverage : null:\n            aIconData = [icons[0][sPod], 0]\n            break\n        case iCoverage >= 16 && iCoverage < 32 ? iCoverage : null:\n            aIconData = [icons[1][sPod], 1]\n            break\n        case iCoverage >= 32 && iCoverage < 48 ? iCoverage : null:\n            aIconData = [icons[2][sPod], 2]\n            break\n        case iCoverage >= 48 && iCoverage < 65 ? iCoverage : null:\n            aIconData = [icons[3][sPod], 3]\n            break\n        case iCoverage >= 65 && iCoverage < 83 ? iCoverage : null:\n            aIconData = [icons[4][sPod], 4]\n            break\n        case iCoverage >= 83 && iCoverage <= 100 ? iCoverage : null:\n            aIconData = [icons[5][sPod], 5]\n            break\n    }\n    aIconData.push(\n        document.querySelector(`#svgs .svg-${aIconData[0]}`).outerHTML\n    )\n\n    return aIconData\n}\n","import * as Convert from './_conversions'\nimport { fClean } from './_helpers'\n/**\n * Perform string replacement for UI strings.\n *\n * @param {string} string\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string} Formatted string\n */\nexport const fFormatUIstr = function (string, _oData, _oSettings) {\n    if (!string) return ''\n    return string\n        .replace('{{forcast}}', fClean(_oData.weather.description))\n        .replace('{{temp}}', Convert.fTemp(fClean(_oData.temp), _oSettings))\n        .replace('{{city}}', fClean(_oData.city_name))\n        .replace('{{country}}', fClean(_oData.country_code))\n}\n","/**\n * Possible Weatherbit.io date responses via our Cloudflare Worker:\n *\n * 1) CURRENT.data[0].ob_time: \"2021-06-30 18:58\"\n * 2) CURRENT.data[0].datetime: \"2021-06-30:19\" <- will not convert to valid date object\n * 3) DAILY.data[x].datetime: \"2021-06-30\"\n * 4) DAILY.data[x].valid_date: \"2021-06-30\"\n */\n\n/**\n * A helper to ensure that date strings from API are translated into the correct local time and not UTC\n * Dates without a time (as we have from the Weather.io API) may be converted to an invalid date by Chrome\n * https://css-tricks.com/everything-you-need-to-know-about-date-in-javascript/\n * API:\n *\n * TODO: A regex for different valid date patterns might be a more robust solution, however in this case we trust the API to be consistant.\n *\n * @param {string} sDate\n * @returns {string} date as string with time component\n */\nfunction fAddTimeToDateString(sDate) {\n    if (sDate.length >= 16) return sDate\n    // Will produce a string that can be converted into a valid date object\n    const new_sDate = `${sDate} 00:00`\n    const oDate = new Date(new_sDate)\n\n    // test to see if we now have string which creates a valid date\n    if (typeof oDate.getMonth !== 'function') {\n        throw new Error(\n            `fAddTimeToDateString not provided a string that can be converted to a valid date: \"${sDate}:`\n        )\n    }\n\n    // return the new date string vaild for cases 2, 3, and 4)\n    return new_sDate\n}\n\n/**\n * 24H to 12H conversion based on _oSettings.units = I or M\n * https://stackoverflow.com/a/58878443/362445\n *\n * @param {string} sTime24\n * @param {object} _oSettings\n * @returns {string} converted time as string with units\n */\nexport const fTime = function (sTime24, _oSettings) {\n    if (!sTime24.includes(':') || !sTime24.length == '5') {\n        throw new Error('fTime not given a valid time string: HH:MM')\n    }\n\n    if (_oSettings.units === 'M') return sTime24\n\n    const [sHours, minutes] = sTime24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1)\n    const period = +sHours < 12 ? 'AM' : 'PM'\n    const hours = +sHours % 12 || 12\n\n    return `${hours}:${minutes}&nbsp;${period}`\n}\n\n/**\n * UTC time provided by API into the local time of the users system.\n * If no date or time are provided, then the current datetime is returned\n *\n * @param {string} sDate (optional)\n * @param {object} _oSettings\n * @param {string} sTime24 (optional)\n * @returns {string} Time as string\n */\nexport const fGetLocalTime = function (sDate = '', _oSettings, sTime24 = '') {\n    let oDate, aTime\n    if (sDate !== '') {\n        oDate = new Date(fAddTimeToDateString(sDate))\n    } else {\n        oDate = new Date()\n    }\n    if (sTime24 != '') {\n        aTime = sTime24.split(':')\n    } else {\n        aTime = [oDate.getUTCHours(), oDate.getUTCMinutes()]\n    }\n\n    const oDateUtc = new Date(\n        Date.UTC(\n            oDate.getUTCFullYear(),\n            oDate.getUTCMonth(),\n            oDate.getUTCDate(),\n            aTime[0],\n            aTime[1]\n        )\n    )\n\n    if (_oSettings.debug === true) {\n        console.log('fGetLocalTime provided sTime24: ', sTime24)\n        console.log(\n            'fGetLocalTime UTC converted time:',\n            `${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`\n        )\n    }\n\n    return fTime(`${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`, _oSettings)\n}\n\n/**\n * Format date string to abreviated weekday name\n *\n * @param {string} sDate, valid date string\n * @returns {string}\n */\nexport const fGetWeekday = function (sDate) {\n    console.log('fGetWeekday:', sDate)\n    const oDate = new Date(fAddTimeToDateString(sDate))\n    console.log('fGetWeekday fAddTimeToDateString', fAddTimeToDateString(sDate))\n    console.log('fGetWeekday: oDate', oDate)\n\n    // test our oDate object\n    if (!oDate || typeof oDate.getMonth !== 'function') {\n        throw new Error('fGetWeekday provided invalid date')\n    }\n\n    return oDate.toLocaleString('default', { weekday: 'short' })\n}\n\n/**\n * Format date string to weekday ordinal number (string)\n *\n * @param {string} sDate\n * @returns string, weekday ordinal number\n */\nexport const fGetDayOrdinal = function (sDate) {\n    const oDate = new Date(fAddTimeToDateString(sDate))\n\n    // test our date object\n    if (!oDate || typeof oDate.getMonth !== 'function') {\n        throw new Error('fFormatDayOrdinal provided invalid date')\n    }\n\n    const sFormatedDate =\n        oDate.getDate() +\n        (oDate.getDate() % 10 == 1 && oDate.getDate() != 11\n            ? 'st'\n            : oDate.getDate() % 10 == 2 && oDate.getDate() != 12\n            ? 'nd'\n            : oDate.getDate() % 10 == 3 && oDate.getDate() != 13\n            ? 'rd'\n            : 'th')\n    return sFormatedDate\n}\n","import * as Convert from '../_conversions'\nimport * as Dates from '../_datetime'\nimport * as Icons from '../_icons'\nimport * as Scales from '../_scales'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders individual upcoming forcast li elements\n *\n * @param {object} _oForecast\n * @returns {string}\n */\nconst fRenderForcastList = function (_oForecast, _oSettings) {\n    console.log('fRenderForcast: ', _oForecast)\n    console.log('_oSettings: ', _oSettings)\n\n    const days = Object.keys(_oForecast)\n    return days\n        .map(function (el) {\n            return `<li data-temp=\"${Scales.fTempDataPt(\n                fClean(_oForecast[el].temp),\n                _oSettings\n            )}\">\n                        <header datetime=\"${fClean(\n                            _oForecast[el].datetime\n                        )}\" aria-description=\"The forcast for\">${Dates.fGetWeekday(fClean(_oForecast[el].datetime))} ${Dates.fGetDayOrdinal(fClean(_oForecast[el].datetime))}</header>\n                        <img class=\"weather-icon\" alt=\"${fClean(\n                            _oForecast[el].weather.description\n                        )}\" src=\"./svg/icons/weather/svg/${Icons.fGetWeatherIcon(_oForecast[el])}.svg\" />\n                        <p class=\"_oForecast-description\" aria-hidden=\"true\">${fClean(\n                            _oForecast[el].weather.description.toLowerCase()\n                        )}</p>\n                         <span><stong>${Convert.fTemp(\n                             fClean(_oForecast[el].high_temp),\n                             _oSettings\n                         )}</stong></span>\n                          <span>${Convert.fTemp(\n                              fClean(_oForecast[el].low_temp),\n                              _oSettings\n                          )}</span>\n\n                    </li>`\n        })\n        .join('')\n}\n\n/**\n * Renders the app's upcoming forcast section\n *\n * @param {object} _oForecast\n * @returns {string}\n */\nexport const fRenderForcast = function (_oForecast, _oSettings) {\n    return `\n        <div id=\"forcast\" aria-description=\"The weather forcast for the next 16 days.\">\n            <ul class=\"unstyled\">\n                ${fRenderForcastList(_oForecast, _oSettings)}\n            </ul>\n        </div>\n        `\n}\n","import * as Convert from '../_conversions'\nimport * as Dates from '../_datetime'\nimport * as Icons from '../_icons'\nimport * as Moon from '../_moonPhases'\nimport * as Scales from '../_scales'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's details secection\n *\n * @param {array} data\n * @returns {string}\n */\nexport const fRenderDetails = function (_oData, _oSettings) {\n    const sWindDirection = fClean(_oData.wind_cdir_full)\n    const sWindDeg = fClean(_oData.wind_dir)\n    const iconCloud = Icons.fGetCloudCoverIcon(_oData.clouds)\n    const oMoon = Moon.fPhase(_oData.obj_time, _oSettings)\n\n    return `\n        <div id=\"details\">\n            <ul class=\"unstyled\">\n                <li class=\"feels-like\">\n                <span class=\"left-col\">Feels like:\n                    ${Convert.fTemp(fClean(_oData.app_temp), _oSettings)}\n                </span>\n                <svg alt=\"\" height=\"25\" width=\"25\" class=\"inline-icon svg-wi-thermometer\" data-temp=\"${Scales.fTempDataPt(\n                    fClean(_oData.app_temp)\n                )}\" enable-background=\"new 0 0 30 30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m9.91 19.56c0-.85.2-1.64.59-2.38s.94-1.35 1.65-1.84v-9.92c0-.8.27-1.48.82-2.03s1.23-.84 2.03-.84c.81 0 1.49.28 2.04.83.55.56.83 1.23.83 2.03v9.92c.71.49 1.25 1.11 1.64 1.84s.58 1.53.58 2.38c0 .92-.23 1.78-.68 2.56s-1.07 1.4-1.85 1.85-1.63.68-2.56.68c-.92 0-1.77-.23-2.55-.68s-1.4-1.07-1.86-1.85-.68-1.63-.68-2.55zm1.76 0c0 .93.33 1.73.98 2.39s1.44.99 2.36.99c.93 0 1.73-.33 2.4-1s1.01-1.46 1.01-2.37c0-.62-.16-1.2-.48-1.73s-.76-.94-1.32-1.23l-.28-.14c-.1-.04-.15-.14-.15-.29v-10.76c0-.32-.11-.59-.34-.81-.23-.21-.51-.32-.85-.32-.32 0-.6.11-.83.32s-.34.48-.34.81v10.74c0 .15-.05.25-.14.29l-.27.14c-.55.29-.98.7-1.29 1.23s-.46 1.1-.46 1.74zm.78 0c0 .71.24 1.32.73 1.82s1.07.75 1.76.75 1.28-.25 1.79-.75.76-1.11.76-1.81c0-.63-.22-1.19-.65-1.67s-.96-.77-1.58-.85v-7.36c0-.06-.03-.13-.1-.19-.07-.07-.14-.1-.22-.1-.09 0-.16.03-.21.08-.05.06-.08.12-.08.21v7.34c-.61.09-1.13.37-1.56.85-.43.49-.64 1.04-.64 1.68z\"/></svg>\n                ${\n                    _oData.uv\n                        ? '<li class=\"uv-index\"><span class=\"left-col\">UV Index: ' +\n                          fClean(_oData.uv.toFixed(2)) +\n                          '</span><svg alt=\"\" height=\"25\" width=\"25\" class=\"inline-icon svg-wi-day-sunny\" data-uv=\"' +\n                          Scales.fUvDataPt(fClean(_oData.uv), _oSettings) +\n                          '\" enable-background=\"new 0 0 30 30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m4.4 14.9c0-.2.1-.4.2-.6.2-.2.4-.2.6-.2h2c.2 0 .4.1.6.2.2.2.2.4.2.6s0 .5-.2.6c-.2.2-.3.2-.6.2h-2c-.2 0-.4-.1-.6-.2-.1-.1-.2-.3-.2-.6zm2.8 6.9c0-.2.1-.4.2-.6l1.5-1.4c.1-.2.4-.2.6-.2s.4.1.6.2.2.3.2.6c0 .2-.1.5-.2.6l-1.4 1.4c-.4.3-.8.3-1.2 0-.2-.1-.3-.3-.3-.6zm0-13.8c0-.2.1-.4.2-.6.2-.2.4-.2.6-.2s.4.1.6.2l1.4 1.5c.2.1.2.4.2.6s-.1.4-.2.6-.4.2-.6.2-.4-.1-.6-.2l-1.3-1.5c-.2-.1-.3-.4-.3-.6zm2.6 6.9c0-.9.2-1.8.7-2.6s1.1-1.4 1.9-1.9 1.7-.7 2.6-.7c.7 0 1.4.1 2 .4s1.2.6 1.7 1.1.8 1 1.1 1.7c.3.6.4 1.3.4 2 0 .9-.2 1.8-.7 2.6s-1.1 1.4-1.9 1.9-1.7.7-2.6.7-1.8-.2-2.6-.7-1.4-1.1-1.9-1.9-.7-1.6-.7-2.6zm1.7 0c0 1 .3 1.8 1 2.5s1.5 1 2.5 1 1.8-.4 2.5-1 1-1.5 1-2.5-.4-1.8-1-2.5c-.7-.7-1.5-1-2.5-1s-1.8.3-2.5 1-1 1.6-1 2.5zm2.6 7.8c0-.2.1-.4.2-.6s.4-.2.6-.2.4.1.6.2.2.4.2.6v2c0 .2-.1.5-.2.6s-.4.2-.6.2-.4-.1-.6-.2c-.2-.2-.2-.4-.2-.6zm0-15.5v-2c0-.2.1-.4.2-.6s.4-.3.6-.3.4.1.6.2.2.4.2.6v2.1c0 .2-.1.4-.2.6s-.3.2-.5.2-.4-.1-.6-.2-.3-.4-.3-.6zm5.6 13.2c0-.2.1-.4.2-.6s.3-.2.6-.2c.2 0 .4.1.6.2l1.5 1.4c.2.2.2.4.2.6s-.1.4-.2.6c-.4.3-.8.3-1.2 0l-1.5-1.4c-.2-.2-.2-.4-.2-.6zm0-10.9c0-.2.1-.4.2-.6l1.4-1.5c.2-.2.4-.2.6-.2s.4.1.6.2c.2.2.2.4.2.6s-.1.5-.2.6l-1.5 1.5c-.2.2-.4.2-.6.2s-.4-.1-.6-.2-.1-.4-.1-.6zm2.2 5.4c0-.2.1-.4.2-.6.2-.2.4-.2.6-.2h2c.2 0 .4.1.6.3s.3.4.3.6-.1.4-.3.6-.4.2-.6.2h-2c-.2 0-.4-.1-.6-.2s-.2-.4-.2-.7z\"/></svg>'\n                        : ''\n                }\n                <li class=\"cloud-cover\"><span class=\"left-col\">Cloud:\n                    ${fClean(_oData.clouds)}% </span>\n                    ${iconCloud[2]}\n                ${\n                    _oData.snow\n                        ? '<li><span class=\"left-col\">Snow: ' +\n                          Convert.fPercip(fClean(_oData.snow), _oSettings) +\n                          '</span>' +\n                          _oSettings.nSnow +\n                          '</li>'\n                        : ''\n                }\n                <li class=\"precipitation\">\n                    <span class=\"left-col\">Precip:\n                          ${Convert.fPercip(fClean(_oData.precip), _oSettings)}\n                          </span>${_oSettings.nRaindrop}\n                </li>\n                <li class=\"windspeed\"><span class=\"left-col\">\n                    <span aria-description=\"Winds traveling from ${sWindDirection}\">\n                        Windspeed:\n                        ${Convert.fKmPerHour(\n                            fClean(_oData.wind_spd),\n                            _oSettings\n                        )}&nbsp;|&nbsp;${fClean(_oData.wind_cdir)}\n                    </span></span>\n                    <span class=\"inline-icon\">\n                        <svg alt=\"\" height=\"25\" width=\"25\" class=\"compass\"  style=\"transform: rotate(${sWindDeg}deg)\" enable-background=\"new 0 0 30 30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m3.74 14.5c0-2.04.51-3.93 1.52-5.66s2.38-3.1 4.11-4.11 3.61-1.51 5.64-1.51c1.52 0 2.98.3 4.37.89s2.58 1.4 3.59 2.4 1.81 2.2 2.4 3.6.89 2.85.89 4.39c0 1.52-.3 2.98-.89 4.37s-1.4 2.59-2.4 3.59-2.2 1.8-3.59 2.39-2.84.89-4.37.89-3-.3-4.39-.89-2.59-1.4-3.6-2.4-1.8-2.2-2.4-3.58-.88-2.84-.88-4.37zm2.48 0c0 2.37.86 4.43 2.59 6.18 1.73 1.73 3.79 2.59 6.2 2.59 1.58 0 3.05-.39 4.39-1.18s2.42-1.85 3.21-3.2 1.19-2.81 1.19-4.39-.4-3.05-1.19-4.4-1.86-2.42-3.21-3.21-2.81-1.18-4.39-1.18-3.05.39-4.39 1.18-2.42 1.86-3.22 3.21-1.18 2.82-1.18 4.4zm4.89 5.85 3.75-13.11c.01-.1.06-.15.15-.15s.14.05.15.15l3.74 13.11c.04.11.03.19-.02.25s-.13.06-.24 0l-3.47-1.3c-.1-.04-.2-.04-.29 0l-3.5 1.3c-.1.06-.17.06-.21 0s-.08-.15-.06-.25z\"/></svg>\n                        ${_oSettings.nWind}\n                    </span>\n                </li>\n                <li class=\"visibility\">\n                    <div class=\"visibility-wrap\">\n                        <span class=\"left-col\">Visibility:\n                          ${Convert.fKm(fClean(_oData.vis), _oSettings)}\n                        </span>\n                        ${_oSettings.nBinoculars}\n                    </div>\n                    <div class=\"visibility-graph\" aria-hidden=\"true\"><div class=\"distance\"></div></div>\n                </li>\n                <li class=\"sun-up-down\">\n                    <span class=\"left-col\">\n                        ${Dates.fGetLocalTime(\n                            fClean(_oData.ob_time),\n                            _oSettings,\n                            fClean(_oData.sunrise)\n                        )}\n                        |\n                        ${Dates.fGetLocalTime(\n                            fClean(_oData.ob_time),\n                            _oSettings,\n                            fClean(_oData.sunset)\n                        )}\n                    </span>\n                    ${_oSettings.nSunrise}\n                </li>\n                <li class=\"moonphase\">\n                    <span class=\"left-col\">Moon: ${oMoon.name}</span>\n                    <img class=\"inline-icon moon\"\n                        alt=\"\"\n                        height=\"25\" width=\"25\"\n                        src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\"/>\n                </li>\n            </ul>\n        </div>\n        `\n}\n","/**\n * https://gist.github.com/endel/dfe6bb2fbe679781948c#gistcomment-2811037\n *\n * @param {Date object || date string} Date Object or String with valid formatting to make date object from.\n * @returns {object} Moon phase object\n */\nexport const fPhase = function (date, _oSettings) {\n    const Moon = {\n        phases: [\n            'new',\n            'waxing-crescent',\n            'first-quarter',\n            'waxing-gibbous',\n            'full',\n            'waning-gibbous',\n            'third-quarter',\n            'waning-crescent',\n        ],\n        phase: function (year, month, day) {\n            let c = 0\n            let e = 0\n            let jd = 0\n            let b = 0\n\n            if (month < 3) {\n                year--\n                month += 12\n            }\n\n            ++month\n            c = 365.25 * year\n            e = 30.6 * month\n            jd = c + e + day - 694039.09 // jd is total days elapsed\n            jd /= 29.5305882 // divide by the moon cycle\n            b = parseInt(jd) // int(jd) -> b, take integer part of jd\n            jd -= b // subtract integer part to leave fractional part of original jd\n            b = Math.round(jd * this.phases.length) // scale fraction from 0-8 and round\n\n            if (b >= 8) b = 0 // 0 and 8 are the same so turn 8 into 0\n            return { phase: b, name: Moon.phases[b] }\n        },\n    }\n\n    // if no date, create date based on current system date\n    date = date || new Date()\n\n    // if provided a date, try to make a new Date object\n    date = date instanceof String ? new Date(date) : date\n\n    // test our date object\n    if (!date || typeof date.getMonth !== 'function') {\n        _oSettings.debug\n            ? console.error(\n                  `fMoonPhase provided invalid date strings: year: ${year}, month: ${month}, day: ${day}`\n              )\n            : ''\n    }\n\n    const yyyy = date.getFullYear()\n    const mm = date.getMonth() + 1 // 0 indexed\n    const dd = date.getDate()\n\n    const oMoonPhase = Moon.phase(yyyy, mm, dd)\n\n    _oSettings.debug ? console.log('fMoonPhase result: ', oMoonPhase) : ''\n\n    return oMoonPhase\n}\n","import * as Queries from './_queries'\nimport * as Scales from './_scales'\n\nimport { fRenderHUD } from './components/_hud'\nimport { fRenderForcast } from './components/_forcast'\nimport { fRenderDetails } from './components/_details'\nimport { fErrorDisplay } from './components/_errors'\n\n/**\n * The Weather Service\n * @author bnjmnrsh@gmail.com\n *\n * @param {object} [_oSettings={}]\n */\n\nconst weatherApp = function (_oSettings = {}) {\n    const _oDefaults = {\n        target: '#app',\n        KEY: '',\n        units: 'M',\n        forcast: `{{forcast}}`,\n        airaForcast: `The weather is currently: {{forcast}} at {{temp}}.`,\n        location: `{{city}}, {{country}}`,\n        debug: false,\n    }\n\n    // Merge settings with defaults\n    _oSettings = Object.assign(_oDefaults, _oSettings)\n\n    // API urls\n    const sIpapiLocationApi = 'https://ipapi.co/json/'\n    let sWeatherApi = `https://weatherserv.bnjmnrsh.workers.dev/?`\n\n    if (_oSettings.dev === true) {\n        sWeatherApi = `${sWeatherApi}&DEV=true`\n    }\n\n    // DOM Target\n    const nApp = document.querySelector(_oSettings.target)\n\n    // SVGs are staged in HTML for details section,\n    // the remainder of images are inlined(except Cloudcover & Moon, loaded dynamically)\n    const nIcons = document.querySelector('#svgs')\n\n    // degrees/compass inline\n    _oSettings.nWind = nIcons.querySelector('.svg-wi-strong-wind').outerHTML\n    _oSettings.nSnow = nIcons.querySelector('.svg-wi-snow').outerHTML\n\n    // cloud lodaded dynamically\n    _oSettings.nRaindrop = nIcons.querySelector('.svg-wi-raindrop').outerHTML\n    _oSettings.nBinoculars = nIcons.querySelector('.svg-binoculars').outerHTML\n    _oSettings.nSunrise = nIcons.querySelector('.svg-wi-sunrise').outerHTML\n    _oSettings.nSunset = nIcons.querySelector('.svg-wi-sunset').outerHTML\n    // moon phases loaded as <img>\n\n    /**\n     * Build the UI\n     *\n     * @param {array} data\n     */\n    const fBuildUI = function (_oWeather) {\n        app.innerHTML =\n            fRenderHUD(_oWeather.CURRENT.data[0], _oSettings) +\n            fRenderDetails(_oWeather.CURRENT.data[0], _oSettings) +\n            fRenderForcast(_oWeather.DAILY.data, _oSettings)\n\n        // Adjust the visibility 'fogg' bar in the details section\n        Scales.fSetVisabilityScale(_oWeather.CURRENT.data[0].vis)\n    }\n\n    /**\n     * Init\n     */\n    const fInit = async function () {\n        try {\n            const loc = await Queries.fGetLocation(\n                sIpapiLocationApi,\n                _oSettings\n            )\n            const _oWeather = await Queries.fGetWeather(\n                loc,\n                sWeatherApi,\n                _oSettings\n            )\n\n            _oSettings.debug ? console.log('fGetLocation response:', loc) : ''\n            _oSettings.debug\n                ? console.log('fGetWeather response:', _oWeather)\n                : ''\n\n            fBuildUI(_oWeather)\n        } catch (e) {\n            console.error('init error: ', e)\n            nApp.innerHTML = fErrorDisplay(e)\n        }\n    }\n    fInit()\n}\n\n// with debugging and Imperial Units\nconst settings = {\n    forcast: `Currently: {{forcast}}`,\n    units: 'I',\n    debug: true,\n    dev: false,\n}\n\nweatherApp(settings)\n","import * as Convert from '../_conversions'\nimport * as Icons from '../_icons'\nimport * as Scales from '../_scales'\nimport * as StrReplace from '../_strings'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's header\n *\n * @param {array} _oData\n * @returns {string}\n */\nexport const fRenderHUD = function (_oData, _oSettings) {\n    console.log('fRenderHUD: ', _oData)\n    const sIcon = Icons.fGetWeatherIcon(_oData)\n    return `\n        <header id=\"hud\" class=\"\" data-temp=\"${Scales.fTempDataPt(\n            _oData.temp\n        )}\">\n            <h3>\n                    <img class=\"weather-icon\" alt=\"${StrReplace.fFormatUIstr(\n                        _oSettings.airaForcast,\n                        _oData,\n                        _oSettings\n                    )}\" src=\"./svg/icons/weather/svg/${sIcon}.svg\" />\n                <span aria-hidden=\"true\">${Convert.fTemp(\n                    fClean(_oData.temp),\n                    _oSettings\n                )}</span>\n            </h3>\n            <ul class=\"unstyled\">\n                <li aria-hidden=\"true\">\n                    ${StrReplace.fFormatUIstr(\n                        _oSettings.forcast,\n                        _oData,\n                        _oSettings\n                    ).toLowerCase()}\n                </li>\n                <li>\n                    ${StrReplace.fFormatUIstr(\n                        _oSettings.location,\n                        _oData,\n                        _oSettings\n                    )}\n                </li>\n            </ul>\n        </header>\n        `\n}\n","/**\n * Render errors to the user\n *\n * @param {obj} err\n * @returns\n */\nexport const fErrorDisplay = function (err) {\n    return `<div id=\"hud\">\n                <div id=\"ohnos\">\n                    <h3><span aria-hidden=\"true\">⥀.⥀<br /></span>Oh Nooos!</h3>\n                    <p class=\"sr-only\">There has been a crittical error:</p>\n                        <div>\n                            ${err.stack ? '<pre>' + err.stack + '<pre>' : ''}\n                            ${\n                                err.status\n                                    ? '<pre>' +\n                                      err.statusText +\n                                      ': ' +\n                                      err.status +\n                                      '<pre>'\n                                    : ''\n                            }\n                        </div>\n                    <img alt=\"\" src=\"./svg/icons/weather/svg/wi-alien.svg\"/>\n                </div>\n            </div>`\n}\n"],"names":["fClean","sDirty","temp","document","createElement","innerHTML","innerText","fGetLocation","async","sIpapiLocationApi","_oSettings","navigator","geolocation","debug","console","log","oOptions","enableHighAccuracy","timeout","maximumAge","pResp","Promise","resolve","reject","getCurrentPosition","coords","fGeoLocApi","e","warn","fetch","then","ok","json","fIPapi","fGetWeather","oLoc","sWeatherApi","urlBase","sApiQuery","latitude","longitude","sCity","sState","sCountry","city","state","country_code","fAssembledQuery","fTempDataPt","nTemp","sTempScale","parseFloat","fPercip","nMeasure","units","toFixed","fTemp","withUnits","converted","oWeather","200","201","202","230","231","232","233","300","301","302","500","501","502","511","520","521","522","600","602","610","611","612","622","623","700","711","721","731","741","751","800","801","802","803","804","900","oCloudCover","0","1","2","3","4","5","fGetWeatherIcon","oData","iHour","iCode","sPod","hasOwnProperty","Helpers.fClean","parseInt","weather","code","fFormatUIstr","string","_oData","replace","description","Convert.fTemp","city_name","fAddTimeToDateString","sDate","length","new_sDate","Date","getMonth","Error","fGetLocalTime","sTime24","oDate","aTime","split","getUTCHours","getUTCMinutes","oDateUtc","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getHours","getMinutes","includes","sHours","minutes","match","slice","fTime","fRenderForcastList","_oForecast","Object","keys","map","el","Scales.fTempDataPt","datetime","toLocaleString","weekday","Dates.fGetWeekday","getDate","Dates.fGetDayOrdinal","Icons.fGetWeatherIcon","toLowerCase","high_temp","low_temp","join","fRenderDetails","sWindDirection","wind_cdir_full","sWindDeg","wind_dir","iconCloud","iCoverage","icons","aIconData","push","querySelector","outerHTML","Icons.fGetCloudCoverIcon","clouds","oMoon","date","Moon","phases","phase","year","month","day","c","jd","b","Math","round","this","name","String","error","yyyy","getFullYear","mm","dd","oMoonPhase","Moon.fPhase","obj_time","app_temp","uv","nUV","sUVclass","uvClass","Scales.fUvDataPt","snow","Convert.fPercip","nSnow","precip","nRaindrop","Convert.fKmPerHour","wind_spd","wind_cdir","nWind","Convert.fKm","vis","nBinoculars","Dates.fGetLocalTime","ob_time","sunrise","sunset","nSunrise","_oDefaults","target","KEY","forcast","airaForcast","location","assign","dev","nApp","nIcons","nSunset","fBuildUI","_oWeather","app","sIcon","StrReplace.fFormatUIstr","fRenderHUD","CURRENT","data","fRenderForcast","DAILY","distance","style","setProperty","Scales.fSetVisabilityScale","loc","Queries.fGetLocation","Queries.fGetWeather","err","stack","status","statusText","fInit","weatherApp"],"mappings":";yBAMO,MAAMA,EAAS,SAAUC,EAAS,IACrC,GAAsB,iBAAXA,EAAqB,OAAOA,EACvC,IAAKA,EAAQ,OAEb,MAAMC,EAAOC,SAASC,cAAc,OAEpC,OADAF,EAAKG,UAAYJ,EACVC,EAAKI,WCwEHC,EAAeC,eAAgBC,EAAmBC,GAC3D,GAAIC,UAAUC,YACV,IAMI,OALAF,EAAWG,OACLC,QAAQC,IACJ,8DA/BHP,iBACf,MAAMQ,EAAW,CACbC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GAGVC,EAAQ,IAAIC,SAAQ,SAAUC,EAASC,GACzCZ,UAAUC,YAAYY,oBAClB,SAAUJ,GACNE,EAAQF,EAAMK,WAElB,SAAUL,GACNG,EAAOH,KAEXJ,MAGR,aAAaI,EAgBQM,GACf,MAAOC,GACLjB,EAAWG,OACLC,QAAQc,KAAK,2CAA4CD,GAE/D,IAKI,OAJAb,QAAQC,IAAI,KACZL,EAAWG,OACLC,QAAQc,KAAK,oDA7FbpB,eAAgBC,GAClC,MAAMW,QAAcS,MAAMpB,GAAmBqB,MAAK,SAAUV,GACxD,OAAIA,EAAMW,GACCX,EAAMY,OAENX,QAAQE,OAAOH,MAG9B,aAAaA,EAuFYa,CAAOxB,GACtB,MAAOkB,GACLjB,EAAWG,OACLC,QAAQc,KACJ,2CACAD,MAcbO,EAAc1B,eAAgB2B,EAAMC,EAAa1B,GAC1D,MAAMU,QAAcS,MAjGO,SAAUQ,EAASF,EAAMzB,GACpD,IAAKyB,EAAM,OAEX,IAAIG,EAAY,GAAGD,SAAeF,EAAKI,gBAAgBJ,EAAKK,YAE5D,IAAKL,EAAKI,WAAaJ,EAAKK,UAAW,CACnC,IAAIC,EACAC,EACAC,EAAW,GAEX,SAAUR,GAAQA,EAAKS,OACvBH,EAAQ,SAASN,EAAKS,QAEtB,UAAWT,GAAQA,EAAKU,QACxBH,EAAS,UAAUP,EAAKU,SAExB,YAAaV,GAAQA,EAAKW,eAC1BH,EAAW,YAAYR,EAAKW,gBAGhCR,EAAY,GAAGD,IAAUI,GAAS,KAAKC,GAAU,KAAKC,GAAY,KAKtE,OAFAjC,EAAWG,OAAQC,QAAQC,IAAI,mBAAoBf,EAAOsC,IAEnDtC,EAAOsC,GAyEVS,CAAgBX,EAAaD,EAAMzB,IACrCoB,MAAK,SAAUV,GACb,OAAIA,EAAMW,GACCX,EAAMY,OAENX,QAAQE,OAAOH,MAG9B,aAAaA,GChHJ4B,EAAc,SAAUC,GACjC,GAAqB,iBAAVA,EAAoB,OAAO,EAItC,IAAIC,EAAa,OACjB,OAHAD,EAAQE,WAAWF,IAIf,KAAKA,GAAS,EAAIA,EAAQ,KACtBC,EAAa,EACb,MACJ,KAAKD,GAAS,GAAKA,EAAQ,GAAKA,EAAQ,KACpCC,EAAa,EACb,MACJ,KAAKD,GAAS,IAAMA,EAAQ,GAAKA,EAAQ,KACrCC,EAAa,EACb,MACJ,KAAKD,GAAS,IAAMA,EAAQ,GAAKA,EAAQ,KACrCC,EAAa,EACb,MACJ,KAAKD,GAAS,IAAMA,EAAQ,GAAKA,EAAQ,KACrCC,EAAa,EACb,MACJ,KAAKD,GAAS,GAAKA,EAAQ,KACvBC,EAAa,EAGrB,OAAOA,GClCEE,EAAU,SAAUC,EAAU3C,GAMvC,MALwB,iBAAb2C,GAAyB3C,EAAWG,OAC3CC,QAAQc,KACJ,yCAAyCyB,oBAA2BA,KAG3D,IAAbA,EACOA,EAGc,MAArB3C,EAAW4C,MACJ,GAAGH,WAAWE,GAAUE,QAAQ,gBAEhC,IAA2B,SAAvBJ,WAAWE,IAAuBE,QAAQ,mBAUhDC,EAAQ,SAAUH,EAAU3C,EAAY+C,GAAY,GAM7D,GALwB,iBAAbJ,GAAyB3C,EAAWG,OAC3CC,QAAQc,KACJ,uCAAuCyB,oBAA2BA,KAGlD,iBAAbA,EAAuB,OAAO,EACzC,GAAyB,MAArB3C,EAAW4C,MAAe,CAC1B,IAAII,EAAYP,WAAWE,GAAUE,QAAQ,GAC7C,OAAOE,EAAY,GAAGC,YAAsBA,EACzC,CACH,IAAIA,GAAqC,EAAvBP,WAAWE,GAAiB,EAAI,IAAIE,QAAQ,GAC9D,OAAOE,EAAY,GAAGC,YAAsBA,IC5CvCC,EAAW,CACpBC,IAAK,CAAC,sBAAuB,6BAC7BC,IAAK,CAAC,sBAAuB,6BAC7BC,IAAK,CAAC,sBAAuB,6BAC7BC,IAAK,CAAC,sBAAuB,6BAC7BC,IAAK,CAAC,sBAAuB,6BAC7BC,IAAK,CAAC,sBAAuB,6BAC7BC,IAAK,CAAC,sBAAuB,6BAC7BC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,mBAAoB,0BAC1BC,IAAK,CAAC,eAAgB,sBACtBC,IAAK,CAAC,iBAAkB,wBACxBC,IAAK,CAAC,iBAAkB,wBACxBC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,2BAA4B,kCAClCC,IAAK,CAAC,mBAAoB,0BAC1BC,IAAK,CAAC,mBAAoB,0BAC1BC,IAAK,CAAC,2BAA4B,kCAClCC,IAAK,CAAC,cAAe,qBACrBC,IAAK,CAAC,aAAc,gBACpBC,IAAK,CAAC,aAAc,gBACpBC,IAAK,CAAC,aAAc,gBACpBC,IAAK,CAAC,aAAc,gBACpBC,IAAK,CAAC,aAAc,gBACpBC,IAAK,CAAC,aAAc,gBACpBC,IAAK,CAAC,eAAgB,kBACtBC,IAAK,CAAC,gBAAiB,uBACvBC,IAAK,CAAC,qBAAsB,4BAC5BC,IAAK,CAAC,qBAAsB,0BAC5BC,IAAK,CAAC,YAAa,aACnBC,IAAK,CAAC,cAAe,gBAGZC,EAAc,CACvBC,EAAG,CAAC,eAAgB,kBACpBC,EAAG,CAAC,qBAAsB,4BAC1BC,EAAG,CAAC,wBAAyB,0BAC7BC,EAAG,CAAC,WAAY,YAChBC,EAAG,CAAC,YAAa,aACjBC,EAAG,CAAC,cAAe,gBAUVC,EAAkB,SAAUC,EAAOC,GAC5C,IAAKD,EAAO,OAEZ,IAAIE,EAAOC,EAcX,OAbKF,GAASD,EAAMI,eAAe,QAE/BD,EAAsC,MAA/BE,EAAeL,EAAMG,MAAgB,EAAI,EAChDD,EAAQI,SAASD,EAAeL,EAAMO,QAAQC,QACvC,SAAUR,GAEjBG,EAA6C,MAAtCE,EAAeL,EAAMC,GAAOE,MAAgB,EAAI,EACvDD,EAAQI,SAASD,EAAeL,EAAMC,GAAOM,QAAQC,SAGrDL,EAAO,EACPD,EAAQI,SAASD,EAAeL,EAAMO,QAAQC,QAE3CrD,EAAS+C,GAAOC,IChEdM,EAAe,SAAUC,EAAQC,EAAQzG,GAClD,OAAKwG,EACEA,EACFE,QAAQ,cAAepH,EAAOmH,EAAOJ,QAAQM,cAC7CD,QAAQ,WAAYE,EAActH,EAAOmH,EAAOjH,MAAOQ,IACvD0G,QAAQ,WAAYpH,EAAOmH,EAAOI,YAClCH,QAAQ,cAAepH,EAAOmH,EAAOrE,eALtB,ICSxB,SAAS0E,EAAqBC,GAC1B,GAAIA,EAAMC,QAAU,GAAI,OAAOD,EAE/B,MAAME,EAAY,GAAGF,UAIrB,GAA8B,mBAHhB,IAAIG,KAAKD,GAGNE,SACb,MAAM,IAAIC,MACN,sFAAsFL,MAK9F,OAAOE,EAWJ,MAuBMI,EAAgB,SAAUN,EAAQ,GAAI/G,EAAYsH,EAAU,IACrE,IAAIC,EAAOC,EAEPD,EADU,KAAVR,EACQ,IAAIG,KAAKJ,EAAqBC,IAE9B,IAAIG,KAGZM,EADW,IAAXF,EACQA,EAAQG,MAAM,KAEd,CAACF,EAAMG,cAAeH,EAAMI,iBAGxC,MAAMC,EAAW,IAAIV,KACjBA,KAAKW,IACDN,EAAMO,iBACNP,EAAMQ,cACNR,EAAMS,aACNR,EAAM,GACNA,EAAM,KAYd,OARyB,IAArBxH,EAAWG,QACXC,QAAQC,IAAI,mCAAoCiH,GAChDlH,QAAQC,IACJ,oCACA,GAAGuH,EAASK,cAAcL,EAASM,iBAlD1B,SAAUZ,EAAStH,GACpC,IAAKsH,EAAQa,SAAS,MAA2B,MAAlBb,EAAQN,OACnC,MAAM,IAAII,MAAM,8CAGpB,GAAyB,MAArBpH,EAAW4C,MAAe,OAAO0E,EAErC,MAAOc,EAAQC,GAAWf,EAAQgB,MAAM,2BAA2BC,MAAM,GAIzE,MAAO,IAFQH,EAAS,IAAM,MAEXC,WAHHD,EAAS,GAAK,KAAO,OA8C9BI,CAAM,GAAGZ,EAASK,cAAcL,EAASM,eAAgBlI,ICvF9DyI,EAAqB,SAAUC,EAAY1I,GAC7CI,QAAQC,IAAI,mBAAoBqI,GAChCtI,QAAQC,IAAI,eAAgBL,GAG5B,OADa2I,OAAOC,KAAKF,GAEpBG,KAAI,SAAUC,GACX,MAAO,kBAAkBC,EACrBzJ,EAAOoJ,EAAWI,GAAItJ,uDAGMF,EAChBoJ,EAAWI,GAAIE,iDDoFhB,SAAUjC,GACjC3G,QAAQC,IAAI,eAAgB0G,GAC5B,MAAMQ,EAAQ,IAAIL,KAAKJ,EAAqBC,IAK5C,GAJA3G,QAAQC,IAAI,mCAAoCyG,EAAqBC,IACrE3G,QAAQC,IAAI,qBAAsBkH,IAG7BA,GAAmC,mBAAnBA,EAAMJ,SACvB,MAAM,IAAIC,MAAM,qCAGpB,OAAOG,EAAM0B,eAAe,UAAW,CAAEC,QAAS,UC9FWC,CAAkB7J,EAAOoJ,EAAWI,GAAIE,cDuG3E,SAAUjC,GACpC,MAAMQ,EAAQ,IAAIL,KAAKJ,EAAqBC,IAG5C,IAAKQ,GAAmC,mBAAnBA,EAAMJ,SACvB,MAAM,IAAIC,MAAM,2CAYpB,OARIG,EAAM6B,WACL7B,EAAM6B,UAAY,IAAM,GAAwB,IAAnB7B,EAAM6B,UAC9B,KACA7B,EAAM6B,UAAY,IAAM,GAAwB,IAAnB7B,EAAM6B,UACnC,KACA7B,EAAM6B,UAAY,IAAM,GAAwB,IAAnB7B,EAAM6B,UACnC,KACA,MCvHyGC,CAAqB/J,EAAOoJ,EAAWI,GAAIE,+EACzG1J,EAC7BoJ,EAAWI,GAAIzC,QAAQM,8CACQ2C,EAAsBZ,EAAWI,6FACbxJ,EACnDoJ,EAAWI,GAAIzC,QAAQM,YAAY4C,6DAEvB3C,EACXtH,EAAOoJ,EAAWI,GAAIU,WACtBxJ,sDAEK4G,EACJtH,EAAOoJ,EAAWI,GAAIW,UACtBzJ,4CAKrB0J,KAAK,KC9BDC,EAAiB,SAAUlD,EAAQzG,GAC5C,MAAM4J,EAAiBtK,EAAOmH,EAAOoD,gBAC/BC,EAAWxK,EAAOmH,EAAOsD,UACzBC,EJoEwB,SAAUC,EAAWhE,EAAO,KAC1D,GAAyB,iBAAdgE,EAAwB,OAGnChE,EAAOA,EAAa,EAEpB,MAAMiE,EAAQ5E,EAId,IAAI6E,EAAY,GAEhB,OAJAF,EAAY7D,SAAS6D,IAKjB,KAAKA,GAAa,GAAKA,EAAY,GAAKA,EAAY,KAChDE,EAAY,CAACD,EAAM,GAAGjE,GAAO,GAC7B,MACJ,KAAKgE,GAAa,IAAMA,EAAY,GAAKA,EAAY,KACjDE,EAAY,CAACD,EAAM,GAAGjE,GAAO,GAC7B,MACJ,KAAKgE,GAAa,IAAMA,EAAY,GAAKA,EAAY,KACjDE,EAAY,CAACD,EAAM,GAAGjE,GAAO,GAC7B,MACJ,KAAKgE,GAAa,IAAMA,EAAY,GAAKA,EAAY,KACjDE,EAAY,CAACD,EAAM,GAAGjE,GAAO,GAC7B,MACJ,KAAKgE,GAAa,IAAMA,EAAY,GAAKA,EAAY,KACjDE,EAAY,CAACD,EAAM,GAAGjE,GAAO,GAC7B,MACJ,KAAKgE,GAAa,IAAMA,GAAa,IAAMA,EAAY,KACnDE,EAAY,CAACD,EAAM,GAAGjE,GAAO,GAOrC,OAJAkE,EAAUC,KACN3K,SAAS4K,cAAc,cAAcF,EAAU,MAAMG,WAGlDH,EIxGWI,CAAyB9D,EAAO+D,QAC5CC,ECXY,SAAUC,EAAM1K,GAClC,MAAM2K,EAAO,CACTC,OAAQ,CACJ,MACA,kBACA,gBACA,iBACA,OACA,iBACA,gBACA,mBAEJC,MAAO,SAAUC,EAAMC,EAAOC,GAC1B,IAAIC,EAAI,EACJhK,EAAI,EACJiK,EAAK,EACLC,EAAI,EAiBR,OAfIJ,EAAQ,IACRD,IACAC,GAAS,IAIbE,EAAI,OAASH,EACb7J,EAAI,OAFF8J,EAGFG,EAAKD,EAAIhK,EAAI+J,EAAM,UACnBE,GAAM,WACNC,EAAI/E,SAAS8E,GACbA,GAAMC,EACNA,EAAIC,KAAKC,MAAMH,EAAKI,KAAKV,OAAO5D,QAE5BmE,GAAK,IAAGA,EAAI,GACT,CAAEN,MAAOM,EAAGI,KAAMZ,EAAKC,OAAOO,OAQ7CT,GAHAA,EAAOA,GAAQ,IAAIxD,gBAGIsE,OAAS,IAAItE,KAAKwD,GAAQA,IAGX,mBAAlBA,EAAKvD,UACrBnH,EAAWG,OACLC,QAAQqL,MACJ,mDAAmDX,gBAAgBC,eAAeC,OAKhG,MAAMU,EAAOhB,EAAKiB,cACZC,EAAKlB,EAAKvD,WAAa,EACvB0E,EAAKnB,EAAKtB,UAEV0C,EAAanB,EAAKE,MAAMa,EAAME,EAAIC,GAIxC,OAFA7L,EAAWG,OAAQC,QAAQC,IAAI,sBAAuByL,GAE/CA,EDjDOC,CAAYtF,EAAOuF,SAAUhM,GAE3C,MAAO,qLAKW4G,EAActH,EAAOmH,EAAOwF,UAAWjM,qIAE0C+I,EACnFzJ,EAAOmH,EAAOwF,mhCAGdxF,EAAOyF,GACD,yDACA5M,EAAOmH,EAAOyF,GAAGrJ,QAAQ,IACzB,2FNqBD,SAAUsJ,GAC/B,IAAKA,EAAK,OAGV,IAAIC,EAAW,OACf,OAHAD,EAAM1J,WAAW0J,IAIb,KAAKA,EAAM,EAAIA,EAAM,KACjBC,EAAW,IACX,MACJ,KAAKD,GAAO,GAAKA,EAAM,EAAIA,EAAM,KAC7BC,EAAW,IACX,MACJ,KAAKD,GAAO,GAAKA,EAAM,EAAIA,EAAM,KAC7BC,EAAW,IACX,MACJ,KAAKD,GAAO,GAAKA,EAAM,EAAIA,EAAM,KAC7BC,EAAW,IACX,MACJ,KAAKD,GAAO,GAAKA,EAAM,EAAIA,EAAM,KAC7BC,EAAW,IACX,MACJ,KAAKD,GAAO,GAAKA,GAAO,GAAKA,EAAM,KAC/BE,QAAU,EAGlB,OAAOD,EM7CeE,CAAiBhN,EAAOmH,EAAOyF,KAC/B,q4CACA,kGAGJ5M,EAAOmH,EAAO+D,yCACdR,EAAU,uBAEZvD,EAAO8F,KACD,oCACAC,EAAgBlN,EAAOmH,EAAO8F,MAAOvM,GACrC,UACAA,EAAWyM,MACX,QACA,iIAIED,EAAgBlN,EAAOmH,EAAOiG,QAAS1M,wCAChCA,EAAW2M,qKAGqB/C,oELAzC,SAAUjH,EAAU3C,GAM1C,MALwB,iBAAb2C,GAAyB3C,EAAWG,OAC3CC,QAAQc,KACJ,4CAA4CyB,oBAA2BA,KAGvD,iBAAbA,EAA8B,EAEhB,MAArB3C,EAAW4C,MACJ,IAA2B,gBAAvBH,WAAWE,IAA6BE,QAC/C,gBAGG,IAA2B,QAAvBJ,WAAWE,IAAqBE,QAAQ,gBKXjC+J,CACEtN,EAAOmH,EAAOoG,UACd7M,kBACaV,EAAOmH,EAAOqG,wMAGgDhD,q1BAC7E9J,EAAW+M,gPLclB,SAAUpK,EAAU3C,GAOnC,MANwB,iBAAb2C,GAAyB3C,EAAWG,OAC3CC,QAAQc,KACJ,qCAAqCyB,oBAA2BA,KAIhD,iBAAbA,EAA8B,EAChB,MAArB3C,EAAW4C,MACJ,GAAGH,WAAWE,GAAUE,QAAQ,aAEhC,IAA2B,QAAvBJ,WAAWE,IAAsBE,QAAQ,gBKnBhCmK,CAAY1N,EAAOmH,EAAOwG,KAAMjN,gEAElCA,EAAWkN,2RAMXC,EACE7N,EAAOmH,EAAO2G,SACdpN,EACAV,EAAOmH,EAAO4G,iEAGhBF,EACE7N,EAAOmH,EAAO2G,SACdpN,EACAV,EAAOmH,EAAO6G,8DAGpBtN,EAAWuN,6HAGkB9C,EAAMc,qMAILd,EAAMI,qFEnFvC,SAAU7K,EAAa,IACtC,MAAMwN,EAAa,CACfC,OAAQ,OACRC,IAAK,GACL9K,MAAO,IACP+K,QAAS,cACTC,YAAa,qDACbC,SAAU,wBACV1N,OAAO,GAIXH,EAAa2I,OAAOmF,OAAON,EAAYxN,GAIvC,IAAI0B,EAAc,8CAEK,IAAnB1B,EAAW+N,MACXrM,EAAc,GAAGA,cAIrB,MAAMsM,EAAOvO,SAAS4K,cAAcrK,EAAWyN,QAIzCQ,EAASxO,SAAS4K,cAAc,SAGtCrK,EAAW+M,MAAQkB,EAAO5D,cAAc,uBAAuBC,UAC/DtK,EAAWyM,MAAQwB,EAAO5D,cAAc,gBAAgBC,UAGxDtK,EAAW2M,UAAYsB,EAAO5D,cAAc,oBAAoBC,UAChEtK,EAAWkN,YAAce,EAAO5D,cAAc,mBAAmBC,UACjEtK,EAAWuN,SAAWU,EAAO5D,cAAc,mBAAmBC,UAC9DtK,EAAWkO,QAAUD,EAAO5D,cAAc,kBAAkBC,UAQ5D,MAAM6D,EAAW,SAAUC,GACvBC,IAAI1O,UCjDc,SAAU8G,EAAQzG,GACxCI,QAAQC,IAAI,eAAgBoG,GAC5B,MAAM6H,EAAQhF,EAAsB7C,GACpC,MAAO,kDACoCsC,EACnCtC,EAAOjH,iFAGkC+O,EAC7BvO,EAAW4N,YACXnH,EACAzG,oCAC+BsO,uDACZ1H,EACvBtH,EAAOmH,EAAOjH,MACdQ,iIAKEuO,EACEvO,EAAW2N,QACXlH,EACAzG,GACFuJ,mFAGAgF,EACEvO,EAAW6N,SACXpH,EACAzG,4EDoBZwO,CAAWJ,EAAUK,QAAQC,KAAK,GAAI1O,GACtC2J,EAAeyE,EAAUK,QAAQC,KAAK,GAAI1O,GHXxB,SAAU0I,EAAY1I,GAChD,MAAO,iJAGOyI,EAAmBC,EAAY1I,kDGQrC2O,CAAeP,EAAUQ,MAAMF,KAAM1O,GR3Dd,SAAUiN,GACzC,MAAM4B,EAAYpM,WAAWwK,GAAO,EAAK,IAE1BoB,IAAIhE,cAAc,aAC1ByE,MAAMC,YAAY,aAAc,IAAMF,EAAW,KQ0DpDG,CAA2BZ,EAAUK,QAAQC,KAAK,GAAGzB,OAM3CnN,iBACV,IACI,MAAMmP,QAAYC,EA7CA,yBA+CdlP,GAEEoO,QAAkBe,EACpBF,EACAvN,EACA1B,GAGJA,EAAWG,OAAQC,QAAQC,IAAI,yBAA0B4O,GACzDjP,EAAWG,OACLC,QAAQC,IAAI,wBAAyB+N,GAG3CD,EAASC,GACX,MAAOnN,GACLb,QAAQqL,MAAM,eAAgBxK,GAC9B+M,EAAKrO,UEtFN,gRAD4ByP,EFuFInO,GEjFToO,MAAQ,QAAUD,EAAIC,MAAQ,QAAU,mCAE1CD,EAAIE,OACE,QACAF,EAAIG,WACJ,KACAH,EAAIE,OACJ,QACA,+JAdT,IAAUF,EF0FnCI,GAWJC,CAPiB,CACb9B,QAAS,yBACT/K,MAAO,IACPzC,OAAO,EACP4N,KAAK"}