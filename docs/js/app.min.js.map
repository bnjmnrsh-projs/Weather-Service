{"version":3,"file":"app.min.js","sources":["../../src/js/_helpers.js","../../src/js/_queries.js","../../src/js/_scales.js","../../src/js/_conversions.js","../../src/js/_icons.js","../../src/js/_strings.js","../../src/js/_datetime.js","../../src/js/components/_forcast.js","../../src/js/components/_details.js","../../src/js/_moonPhases.js","../../src/js/app.js","../../src/js/components/_hud.js","../../src/js/components/_errors.js"],"sourcesContent":["/**\n * Sanitise incoming API data\n *\n * @param {string} [dirty='']\n * @returns {string} sanitised text\n */\nexport const fClean = function (dirty = '') {\n    if (typeof dirty === 'number') return dirty\n    if (!dirty) return\n\n    const temp = document.createElement('div')\n    temp.innerHTML = dirty\n    return temp.innerText\n}\n","import * as Helpers from './_helpers'\n\n/**\n * IP address based location API\n *\n * @returns {object} coordiantes object\n */\nexport const fIPapi = async function (sIpapiLocationApi) {\n    const resp = await fetch(sIpapiLocationApi).then(function (resp) {\n        if (resp.ok) {\n            return resp.json()\n        } else {\n            return Promise.reject(resp)\n        }\n    })\n    return await resp\n}\n\n/**\n * Assembles the formatted query string for CF API requests\n *\n * @param {string} urlBase\n * @param {obj} loc Response from location API\n * @returns {string} Assembled url with query (cleaned)\n */\nexport const fAssembledQuery = function (urlBase, loc, _oSettings) {\n    if (!loc) return\n\n    let sApiQuery = `${urlBase}&lat=${loc.latitude}&lon=${loc.longitude}`\n\n    if (!loc.latitude || !loc.longitude) {\n        let sCity,\n            sState,\n            sCountry = ''\n\n        if ('city' in loc && loc.city) {\n            sCity = `&city=${loc.city}`\n        }\n        if ('state' in loc && loc.state) {\n            sState = `&state=${loc.state}`\n        }\n        if ('country' in loc && loc.country_code) {\n            sCountry = `&country=${loc.country_code}`\n        }\n\n        sApiQuery = `${urlBase}${sCity ?? ''}${sState ?? ''}${sCountry ?? ''}`\n    }\n\n    _oSettings.debug\n        ? console.log('sApiQuery query:', Helpers.fClean(sApiQuery))\n        : ''\n\n    return Helpers.fClean(sApiQuery)\n}\n\n/**\n * Browser based location API\n *\n * @returns {object} coordiantes object\n */\nconst fGeoLocApi = async function () {\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n    }\n\n    const resp = new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(\n            function (resp) {\n                resolve(resp.coords)\n            },\n            function (resp) {\n                reject(resp)\n            },\n            options\n        )\n    })\n    return await resp\n}\n\n/**\n * Gets the user location\n *\n * @param {string} [section='home']\n */\nexport const fGetLocation = async function (sIpapiLocationApi, _oSettings) {\n    console.log('1')\n    if (navigator.geolocation) {\n        try {\n            _oSettings.debug ? console.log('2 Checking geoLoccation API.') : ''\n            return await fGeoLocApi()\n        } catch (e) {\n            _oSettings.debug\n                ? console.warn('3 fGetLocation fGeoLocApi: ', e)\n                : ''\n            try {\n                console.log('5')\n                _oSettings.debug\n                    ? console.warn('5 Falling back to IP lookup.')\n                    : ''\n                return await fIPapi(sIpapiLocationApi)\n            } catch (e) {\n                _oSettings.debug ? console.warn('fGetLocation IP API: ', e) : ''\n            }\n        }\n    }\n}\n\n/**\n * Fetch the weather for a user's location.\n *\n * @param {object} loc\n * @returns {object} weather object\n */\nexport const fGetWeather = async function (loc, sWeatherApi, _oSettings) {\n    const resp = await fetch(\n        fAssembledQuery(sWeatherApi, loc, _oSettings)\n    ).then(function (resp) {\n        if (resp.ok) {\n            return resp.json()\n        } else {\n            return Promise.reject(resp)\n        }\n    })\n    return await resp\n}\n","/**\n * Generate a visual scale based on 5km\n *\n * @param {float} vis\n */\nexport const fSetVisabilityScale = function (vis) {\n    const distance = (parseFloat(vis) / 5) * 100\n\n    const nGraph = app.querySelector('.distance')\n    nGraph.style.setProperty('--distance', 100 - distance + '%')\n}\n\n/**\n * Assigns a named string based on temperature in C\n * 6 step scale for data-temp\n *\n * @param {float} temp\n * @returns {string}   string\n */\nexport const fTempDataPt = function (temp) {\n    if (typeof temp !== 'number') return 0\n\n    temp = parseFloat(temp)\n    // temp = 100\n\n    let sTempScale = ''\n    switch (temp) {\n        case temp <= 0 ? temp : null:\n            sTempScale = 0\n            break\n        case temp >= 0 && temp < 10 ? temp : null:\n            sTempScale = 1\n            break\n        case temp >= 10 && temp < 22 ? temp : null:\n            sTempScale = 2\n            break\n        case temp >= 22 && temp < 27 ? temp : null:\n            sTempScale = 3\n            break\n        case temp >= 27 && temp < 34 ? temp : null:\n            sTempScale = 4\n            break\n        case temp >= 34 ? temp : null:\n            sTempScale = 5\n            break\n    }\n    return sTempScale\n}\n\n/**\n * Assigns a uv scale value based uv reading\n *\n * @param {float} uv\n * @returns {int}  whole int value on  6 step scale\n */\nexport const fUvDataPt = function (uv) {\n    if (!uv) return\n    uv = parseFloat(uv)\n\n    let uvClass = 'none'\n    switch (uv) {\n        case uv < 10 ? uv : null:\n            uvClass = 0\n            break\n        case uv >= 10 && uv < 30 ? uv : null:\n            uvClass = 1\n            break\n        case uv >= 30 && uv < 50 ? uv : null:\n            uvClass = 2\n            break\n        case uv >= 50 && uv < 70 ? uv : null:\n            uvClass = 3\n            break\n        case uv >= 70 && uv < 90 ? uv : null:\n            uvClass = 4\n            break\n        case uv >= 90 || uv <= 100 ? uv : null:\n            uvClass = 5\n            break\n    }\n    return uvClass\n}\n","/**\n * *NOTE: the API has params for both imperial and metric units, however,\n * we do the conversion ourselves so that we can switch without additional api calls.\n */\n\n/**\n * mm/hr to inch/hr\n *\n * @param {float} measure\n * @returns {string} converted measurement as string with units\n */\nexport const fPercip = function (measure, _oSettings) {\n    if (typeof measure !== 'number') return 0\n\n    if (measure === 0) {\n        return measure\n    }\n\n    if (_oSettings.units === 'M') {\n        return `${parseFloat(measure).toFixed(2)}&nbsp;mm/hr`\n    } else {\n        return `${(parseFloat(measure) * 0.0393701).toFixed(2)}&nbsp;inch/hr`\n    }\n}\n\n/**\n * C to F conversion\n *\n * @param {float} measure\n * @returns {string || number} converted tepm as string with units, or as a Float\n */\nexport const fTemp = function (measure, _oSettings, withUnits = true) {\n    if (typeof measure !== 'number') return 0\n    if (_oSettings.units === 'M') {\n        let converted = parseFloat(measure).toFixed(1)\n        return withUnits ? `${converted}°&nbsp;C` : converted\n    } else {\n        let converted = ((parseFloat(measure) * 9) / 5 + 32).toFixed(1)\n        return withUnits ? `${converted}°&nbsp;F` : converted\n    }\n}\n\n/**\n * km/hr to mi/hr\n *\n * @param {float} measure\n * @returns {string} converted wind speed as string with units\n */\nexport const fKmPerHour = function (measure, _oSettings) {\n    if (typeof measure !== 'number') return 0\n\n    if (_oSettings.units === 'M') {\n        return `${(parseFloat(measure) * 3.6000059687997).toFixed(\n            2\n        )}&nbsp;km/hr`\n    } else {\n        return `${(parseFloat(measure) * 2.23694).toFixed(2)}&nbsp;mi/hr`\n    }\n}\n\n/**\n * km to mi\n *\n * @param {float} measure\n * @returns {string} converted distance as string with units\n */\nexport const fKm = function (measure, _oSettings) {\n    if (typeof measure !== 'number') return 0\n    if (_oSettings.units === 'M') {\n        return `${parseFloat(measure).toFixed(2)}&nbsp;km`\n    } else {\n        return `${(parseFloat(measure) * 0.621371).toFixed(2)}&nbsp;miles`\n    }\n}\n","import * as Helpers from './_helpers'\n\nexport const oWeather = {\n    200: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    201: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    202: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    230: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    231: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    232: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    233: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    300: ['wi-day-rain', 'wi-night-alt-rain'],\n    301: ['wi-day-rain', 'wi-night-alt-rain'],\n    302: ['wi-day-rain', 'wi-night-alt-rain'],\n    500: ['wi-day-rain', 'wi-night-alt-rain'],\n    501: ['wi-day-rain', 'wi-night-alt-rain'],\n    502: ['wi-day-rain-wind', 'wi-night-alt-rain-wind'],\n    511: ['wi-day-sleet', 'wi-night-alt-sleet'],\n    520: ['wi-day-showers', 'wi-night-alt-showers'],\n    521: ['wi-day-showers', 'wi-night-alt-showers'],\n    522: ['wi-day-rain', 'wi-night-alt-rain'],\n    600: ['wi-day-snow', 'wi-night-alt-snow'],\n    602: ['wi-day-snow', 'wi-night-alt-snow'],\n    610: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n    611: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n    612: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n    622: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n    623: ['wi-day-snow', 'wi-night-alt-snow'],\n    700: ['wi-day-fog', 'wi-night-fog'],\n    711: ['wi-day-fog', 'wi-night-fog'],\n    721: ['wi-day-fog', 'wi-night-fog'],\n    731: ['wi-day-fog', 'wi-night-fog'],\n    741: ['wi-day-fog', 'wi-night-fog'],\n    751: ['wi-day-fog', 'wi-night-fog'],\n    800: ['wi-day-sunny', 'wi-night-clear'],\n    801: ['wi-day-cloudy', 'wi-night-alt-cloudy'],\n    802: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n    803: ['wi-day-cloudy-high', 'wi-night-partly-cloudy'],\n    804: ['wi-cloudy', 'wi-cloudy'],\n    900: ['wi-rain-mix', 'wi-rain-mix'],\n}\n\nexport const oCloudCover = {\n    0: ['wi-day-sunny', 'wi-night-clear'],\n    1: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n    2: ['wi-day-sunny-overcast', 'wi-night-partly-cloudy'],\n    3: ['wi-cloud', 'wi-cloud'],\n    4: ['wi-cloudy', 'wi-cloudy'],\n    5: ['dark-cloudy', 'dark-cloudy'],\n}\n\n/**\n * Returns the string name of the weather icon\n *\n * @param {object} data Either the current, daily, or hourly forcast weather object\n * @param {string || int} [hour]\n * @returns string\n */\nexport const fGetWeatherIcon = function (data, hour) {\n    if (!data) return\n\n    let code, pod\n    if (!hour && data.hasOwnProperty('pod')) {\n        // Current weather object\n        pod = Helpers.fClean(data.pod) === 'd' ? 0 : 1\n        code = parseInt(Helpers.fClean(data.weather.code))\n    } else if ('hour' in data) {\n        // Forcast weather object (hourly)\n        pod = Helpers.fClean(data[hour].pod) === 'd' ? 0 : 1\n        code = parseInt(Helpers.fClean(data[hour].weather.code))\n    } else {\n        // Forcast weather object (days)\n        pod = 1\n        code = parseInt(Helpers.fClean(data.weather.code))\n    }\n    return oWeather[code][pod]\n}\n\n/**\n * Select the cloud coverage icon based on percentage value\n *\n * @param {int} coverage A percentage figure 0-100\n * @param {string} pod Point of Day\n * @returns {string} the string name of the icon\n */\nexport const fGetCloudCoverIcon = function (coverage, pod = 'd') {\n    if (typeof coverage !== 'number') return\n\n    // set day or night icon set\n    pod = pod = 'd' ? 0 : 1\n\n    const icons = oCloudCover\n\n    coverage = parseInt(coverage)\n\n    let aIconData = ''\n\n    switch (coverage) {\n        case coverage >= 0 && coverage < 16 ? coverage : null:\n            aIconData = [icons[0][pod], 0]\n            break\n        case coverage >= 16 && coverage < 32 ? coverage : null:\n            aIconData = [icons[1][pod], 1]\n            break\n        case coverage >= 32 && coverage < 48 ? coverage : null:\n            aIconData = [icons[2][pod], 2]\n            break\n        case coverage >= 48 && coverage < 65 ? coverage : null:\n            aIconData = [icons[3][pod], 3]\n            break\n        case coverage >= 65 && coverage < 83 ? coverage : null:\n            aIconData = [icons[4][pod], 4]\n            break\n        case coverage >= 83 && coverage <= 100 ? coverage : null:\n            aIconData = [icons[5][pod], 5]\n            break\n    }\n    aIconData.push(\n        document.querySelector(`#svgs .svg-${aIconData[0]}`).outerHTML\n    )\n\n    return aIconData\n}\n","import * as Helpers from './_helpers'\nimport * as Convert from './_conversions'\n/**\n * Perform string replacement for UI strings.\n *\n * @param {string} string\n * @param {object} data\n * @returns {string} Formatted string\n */\nexport const fFormatUIstr = function (string, data, _oSettings) {\n    if (!string) return ''\n    return string\n        .replace('{{forcast}}', Helpers.fClean(data.weather.description))\n        .replace(\n            '{{temp}}',\n            Convert.fTemp(Helpers.fClean(data.temp), _oSettings)\n        )\n        .replace('{{city}}', Helpers.fClean(data.city_name))\n        .replace('{{country}}', Helpers.fClean(data.country_code))\n}\n","/**\n * Possible Weatherbit.io date responses via our Cloudflare Worker:\n *\n * 1) CURRENT.data[0].ob_time: \"2021-06-30 18:58\"\n * 2) CURRENT.data[0].datetime: \"2021-06-30:19\" <- will not convert to valid date object\n * 3) DAILY.data[x].datetime: \"2021-06-30\"\n * 4) DAILY.data[x].valid_date: \"2021-06-30\"\n */\n\n/**\n * A helper to ensure that date strings from API are translated into the correct local time and not UTC\n * Dates without a time (as we have from the Weather.io API) may be converted to an invalid date by Chrome\n * https://css-tricks.com/everything-you-need-to-know-about-date-in-javascript/\n * API:\n *\n * TODO: A regex for different valid date patterns might be a more robust solution, however in this case we trust the API to be consistant.\n *\n * @param {string} sDate\n * @returns {string} date as string with time component\n */\nfunction fAddTimeToDateString(sDate) {\n    if (sDate.length >= 16) return sDate\n    // Will produce a string that can be converted into a valid date object\n    const new_sDate = `${sDate}00:00`\n    const oDate = new Date(new_sDate)\n\n    // test to see if we now have string which creates a valid date\n    if (typeof oDate.getMonth !== 'function') {\n        throw new Error(\n            `fAddTimeToDateString not provided a string that can be converted to a valid date: \"${sDate}:`\n        )\n    }\n\n    // return the new date string vaild for cases 2, 3, and 4)\n    return new_sDate\n}\n\n/**\n * 24H to 12H conversion based on _oSettings.units = I or M\n * https://stackoverflow.com/a/58878443/362445\n *\n * @param {string} sTime24\n * @param {object} _oSettings\n * @returns {string} converted time as string with units\n */\nexport const fTime = function (sTime24, _oSettings) {\n    if (!sTime24.includes(':') || !sTime24.length == '5') {\n        throw new Error('fTime not given a valid time string: HH:MM')\n    }\n\n    if (_oSettings.units === 'M') return sTime24\n\n    const [sHours, minutes] = sTime24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1)\n    const period = +sHours < 12 ? 'AM' : 'PM'\n    const hours = +sHours % 12 || 12\n\n    return `${hours}:${minutes}&nbsp;${period}`\n}\n\n/**\n * UTC time provided by API into the local time of the users system.\n * If no date or time are provided, then the current datetime is returned\n *\n * @param {string} sDate (optional)\n * @param {object} _oSettings\n * @param {string} sTime24 (optional)\n * @returns {string} Time as string\n */\nexport const fGetLocalTime = function (sDate = '', _oSettings, sTime24 = '') {\n    let oDate, aTime\n    if (sDate !== '') {\n        oDate = new Date(fAddTimeToDateString(sDate))\n    } else {\n        oDate = new Date()\n    }\n    if (sTime24 != '') {\n        aTime = sTime24.split(':')\n    } else {\n        aTime = [oDate.getUTCHours(), oDate.getUTCMinutes()]\n    }\n\n    const oDateUtc = new Date(\n        Date.UTC(\n            oDate.getUTCFullYear(),\n            oDate.getUTCMonth(),\n            oDate.getUTCDate(),\n            aTime[0],\n            aTime[1]\n        )\n    )\n\n    if (_oSettings.debug === true) {\n        console.log('fGetLocalTime provided sTime24: ', sTime24)\n        console.log(\n            'fGetLocalTime UTC converted time:',\n            `${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`\n        )\n    }\n\n    return fTime(`${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`, _oSettings)\n}\n\n/**\n * Format date string to abreviated weekday name\n *\n * @param {string} sDate, valid date string\n * @returns {string}\n */\nexport const fGetWeekday = function (sDate) {\n    const oDate = new Date(fAddTimeToDateString(sDate))\n\n    // test our oDate object\n    if (!oDate || typeof oDate.getMonth !== 'function') {\n        throw new Error('fGetWeekday provided invalid date')\n    }\n\n    return oDate.toLocaleString('default', { weekday: 'short' })\n}\n\n/**\n * Format date string to weekday ordinal number (string)\n *\n * @param {string} sDate\n * @returns string, weekday ordinal number\n */\nexport const fGetDayOrdinal = function (sDate) {\n    const oDate = new Date(fAddTimeToDateString(sDate))\n\n    // test our date object\n    if (!oDate || typeof oDate.getMonth !== 'function') {\n        throw new Error('fFormatDayOrdinal provided invalid date')\n    }\n\n    const sFormatedDate =\n        oDate.getDate() +\n        (oDate.getDate() % 10 == 1 && oDate.getDate() != 11\n            ? 'st'\n            : oDate.getDate() % 10 == 2 && oDate.getDate() != 12\n            ? 'nd'\n            : oDate.getDate() % 10 == 3 && oDate.getDate() != 13\n            ? 'rd'\n            : 'th')\n    return sFormatedDate\n}\n","import * as Convert from '../_conversions'\nimport * as Dates from '../_datetime'\nimport * as Helpers from '../_helpers'\nimport * as Icons from '../_icons'\nimport * as Scales from '../_scales'\n\n/**\n * Renders individual upcoming forcast li elements\n *\n * @param {object} forecast\n * @returns {string}\n */\nconst fRenderForcastList = function (forecast, _oSettings) {\n    console.log('fRenderForcast: ', forecast)\n    console.log('_oSettings: ', _oSettings)\n\n    const days = Object.keys(forecast)\n    return days\n        .map(function (el) {\n            return `<li data-temp=\"${Scales.fTempDataPt(\n                Helpers.fClean(forecast[el].temp),\n                _oSettings\n            )}\">\n                        <header datetime=\"${Helpers.fClean(\n                            forecast[el].datetime\n                        )}\" aria-description=\"The forcast for\">${Dates.fGetWeekday(Helpers.fClean(forecast[el].datetime))} ${Dates.fGetDayOrdinal(Helpers.fClean(forecast[el].datetime))}</header>\n                        <img class=\"weather-icon\" alt=\"${Helpers.fClean(\n                            forecast[el].weather.description\n                        )}\" src=\"./svg/icons/weather/svg/${Icons.fGetWeatherIcon(forecast[el])}.svg\" />\n                        <p class=\"forecast-description\" aria-hidden=\"true\">${Helpers.fClean(\n                            forecast[el].weather.description.toLowerCase()\n                        )}</p>\n                         <span><stong>${Convert.fTemp(\n                             Helpers.fClean(forecast[el].high_temp),\n                             _oSettings\n                         )}</stong></span>\n                          <span>${Convert.fTemp(\n                              Helpers.fClean(forecast[el].low_temp),\n                              _oSettings\n                          )}</span>\n\n                    </li>`\n        })\n        .join('')\n}\n\n/**\n * Renders the app's upcoming forcast section\n *\n * @param {object} forecast\n * @returns {string}\n */\nexport const fRenderForcast = function (forecast, _oSettings) {\n    return `\n        <div id=\"forcast\" aria-description=\"The weather forcast for the next 16 days.\">\n            <ul class=\"unstyled\">\n                ${fRenderForcastList(forecast, _oSettings)}\n            </ul>\n        </div>\n        `\n}\n","import * as Convert from '../_conversions'\nimport * as Helpers from '../_helpers'\nimport * as Dates from '../_datetime'\nimport * as Icons from '../_icons'\nimport * as Moon from '../_moonPhases'\nimport * as Scales from '../_scales'\n\n/**\n * Renders the app's details secection\n *\n * @param {array} data\n * @returns {string}\n */\nexport const fRenderDetails = function (data, _oSettings) {\n    const sWindDirection = Helpers.fClean(data.wind_cdir_full)\n    const sWindDeg = Helpers.fClean(data.wind_dir)\n    const iconCloud = Icons.fGetCloudCoverIcon(data.clouds)\n    const oMoon = Moon.fPhase(data.obj_time, _oSettings)\n\n    return `\n        <div id=\"details\">\n            <ul class=\"unstyled\">\n                <li class=\"feels-like\">\n                <span class=\"left-col\">Feels like:\n                    ${Convert.fTemp(Helpers.fClean(data.app_temp), _oSettings)}\n                </span>\n                <svg alt=\"\" height=\"25\" width=\"25\" class=\"inline-icon svg-wi-thermometer\" data-temp=\"${Scales.fTempDataPt(\n                    Helpers.fClean(data.app_temp)\n                )}\" enable-background=\"new 0 0 30 30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m9.91 19.56c0-.85.2-1.64.59-2.38s.94-1.35 1.65-1.84v-9.92c0-.8.27-1.48.82-2.03s1.23-.84 2.03-.84c.81 0 1.49.28 2.04.83.55.56.83 1.23.83 2.03v9.92c.71.49 1.25 1.11 1.64 1.84s.58 1.53.58 2.38c0 .92-.23 1.78-.68 2.56s-1.07 1.4-1.85 1.85-1.63.68-2.56.68c-.92 0-1.77-.23-2.55-.68s-1.4-1.07-1.86-1.85-.68-1.63-.68-2.55zm1.76 0c0 .93.33 1.73.98 2.39s1.44.99 2.36.99c.93 0 1.73-.33 2.4-1s1.01-1.46 1.01-2.37c0-.62-.16-1.2-.48-1.73s-.76-.94-1.32-1.23l-.28-.14c-.1-.04-.15-.14-.15-.29v-10.76c0-.32-.11-.59-.34-.81-.23-.21-.51-.32-.85-.32-.32 0-.6.11-.83.32s-.34.48-.34.81v10.74c0 .15-.05.25-.14.29l-.27.14c-.55.29-.98.7-1.29 1.23s-.46 1.1-.46 1.74zm.78 0c0 .71.24 1.32.73 1.82s1.07.75 1.76.75 1.28-.25 1.79-.75.76-1.11.76-1.81c0-.63-.22-1.19-.65-1.67s-.96-.77-1.58-.85v-7.36c0-.06-.03-.13-.1-.19-.07-.07-.14-.1-.22-.1-.09 0-.16.03-.21.08-.05.06-.08.12-.08.21v7.34c-.61.09-1.13.37-1.56.85-.43.49-.64 1.04-.64 1.68z\"/></svg>\n                ${\n                    data.uv\n                        ? '<li class=\"uv-index\"><span class=\"left-col\">UV Index: ' +\n                          Helpers.fClean(data.uv.toFixed(2)) +\n                          '</span><svg alt=\"\" height=\"25\" width=\"25\" class=\"inline-icon svg-wi-day-sunny\" data-uv=\"' +\n                          Scales.fUvDataPt(Helpers.fClean(data.uv)) +\n                          '\" enable-background=\"new 0 0 30 30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m4.4 14.9c0-.2.1-.4.2-.6.2-.2.4-.2.6-.2h2c.2 0 .4.1.6.2.2.2.2.4.2.6s0 .5-.2.6c-.2.2-.3.2-.6.2h-2c-.2 0-.4-.1-.6-.2-.1-.1-.2-.3-.2-.6zm2.8 6.9c0-.2.1-.4.2-.6l1.5-1.4c.1-.2.4-.2.6-.2s.4.1.6.2.2.3.2.6c0 .2-.1.5-.2.6l-1.4 1.4c-.4.3-.8.3-1.2 0-.2-.1-.3-.3-.3-.6zm0-13.8c0-.2.1-.4.2-.6.2-.2.4-.2.6-.2s.4.1.6.2l1.4 1.5c.2.1.2.4.2.6s-.1.4-.2.6-.4.2-.6.2-.4-.1-.6-.2l-1.3-1.5c-.2-.1-.3-.4-.3-.6zm2.6 6.9c0-.9.2-1.8.7-2.6s1.1-1.4 1.9-1.9 1.7-.7 2.6-.7c.7 0 1.4.1 2 .4s1.2.6 1.7 1.1.8 1 1.1 1.7c.3.6.4 1.3.4 2 0 .9-.2 1.8-.7 2.6s-1.1 1.4-1.9 1.9-1.7.7-2.6.7-1.8-.2-2.6-.7-1.4-1.1-1.9-1.9-.7-1.6-.7-2.6zm1.7 0c0 1 .3 1.8 1 2.5s1.5 1 2.5 1 1.8-.4 2.5-1 1-1.5 1-2.5-.4-1.8-1-2.5c-.7-.7-1.5-1-2.5-1s-1.8.3-2.5 1-1 1.6-1 2.5zm2.6 7.8c0-.2.1-.4.2-.6s.4-.2.6-.2.4.1.6.2.2.4.2.6v2c0 .2-.1.5-.2.6s-.4.2-.6.2-.4-.1-.6-.2c-.2-.2-.2-.4-.2-.6zm0-15.5v-2c0-.2.1-.4.2-.6s.4-.3.6-.3.4.1.6.2.2.4.2.6v2.1c0 .2-.1.4-.2.6s-.3.2-.5.2-.4-.1-.6-.2-.3-.4-.3-.6zm5.6 13.2c0-.2.1-.4.2-.6s.3-.2.6-.2c.2 0 .4.1.6.2l1.5 1.4c.2.2.2.4.2.6s-.1.4-.2.6c-.4.3-.8.3-1.2 0l-1.5-1.4c-.2-.2-.2-.4-.2-.6zm0-10.9c0-.2.1-.4.2-.6l1.4-1.5c.2-.2.4-.2.6-.2s.4.1.6.2c.2.2.2.4.2.6s-.1.5-.2.6l-1.5 1.5c-.2.2-.4.2-.6.2s-.4-.1-.6-.2-.1-.4-.1-.6zm2.2 5.4c0-.2.1-.4.2-.6.2-.2.4-.2.6-.2h2c.2 0 .4.1.6.3s.3.4.3.6-.1.4-.3.6-.4.2-.6.2h-2c-.2 0-.4-.1-.6-.2s-.2-.4-.2-.7z\"/></svg>'\n                        : ''\n                }\n                <li class=\"cloud-cover\"><span class=\"left-col\">Cloud:\n                    ${Helpers.fClean(data.clouds)}% </span>\n                    ${iconCloud[2]}\n                ${\n                    data.snow\n                        ? '<li><span class=\"left-col\">Snow: ' +\n                          Convert.fPercip(\n                              Helpers.fClean(data.snow),\n                              _oSettings\n                          ) +\n                          '</span>' +\n                          _oSettings.nSnow +\n                          '</li>'\n                        : ''\n                }\n                <li class=\"precipitation\">\n                    <span class=\"left-col\">Precip:\n                          ${Convert.fPercip(Helpers.fClean(data.precip))}\n                          </span>${_oSettings.nRaindrop}\n                </li>\n                <li class=\"windspeed\"><span class=\"left-col\">\n                    <span aria-description=\"Winds traveling from ${sWindDirection}\">\n                        Windspeed:\n                        ${Convert.fKmPerHour(\n                            Helpers.fClean(data.wind_spd),\n                            _oSettings\n                        )}&nbsp;|&nbsp;${Helpers.fClean(data.wind_cdir)}\n                    </span></span>\n                    <span class=\"inline-icon\">\n                        <svg alt=\"\" height=\"25\" width=\"25\" class=\"compass\"  style=\"transform: rotate(${sWindDeg}deg)\" enable-background=\"new 0 0 30 30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m3.74 14.5c0-2.04.51-3.93 1.52-5.66s2.38-3.1 4.11-4.11 3.61-1.51 5.64-1.51c1.52 0 2.98.3 4.37.89s2.58 1.4 3.59 2.4 1.81 2.2 2.4 3.6.89 2.85.89 4.39c0 1.52-.3 2.98-.89 4.37s-1.4 2.59-2.4 3.59-2.2 1.8-3.59 2.39-2.84.89-4.37.89-3-.3-4.39-.89-2.59-1.4-3.6-2.4-1.8-2.2-2.4-3.58-.88-2.84-.88-4.37zm2.48 0c0 2.37.86 4.43 2.59 6.18 1.73 1.73 3.79 2.59 6.2 2.59 1.58 0 3.05-.39 4.39-1.18s2.42-1.85 3.21-3.2 1.19-2.81 1.19-4.39-.4-3.05-1.19-4.4-1.86-2.42-3.21-3.21-2.81-1.18-4.39-1.18-3.05.39-4.39 1.18-2.42 1.86-3.22 3.21-1.18 2.82-1.18 4.4zm4.89 5.85 3.75-13.11c.01-.1.06-.15.15-.15s.14.05.15.15l3.74 13.11c.04.11.03.19-.02.25s-.13.06-.24 0l-3.47-1.3c-.1-.04-.2-.04-.29 0l-3.5 1.3c-.1.06-.17.06-.21 0s-.08-.15-.06-.25z\"/></svg>\n                        ${_oSettings.nWind}\n                    </span>\n                </li>\n                <li class=\"visibility\">\n                    <div class=\"visibility-wrap\">\n                        <span class=\"left-col\">Visibility:\n                          ${Convert.fKm(Helpers.fClean(data.vis), _oSettings)}\n                        </span>\n                        ${_oSettings.nBinoculars}\n                    </div>\n                    <div class=\"visibility-graph\" aria-hidden=\"true\"><div class=\"distance\"></div></div>\n                </li>\n                <li class=\"sun-up-down\">\n                    <span class=\"left-col\">\n                        ${Dates.fGetLocalTime(\n                            Helpers.fClean(data.ob_time),\n                            _oSettings,\n                            Helpers.fClean(data.sunrise)\n                        )}\n                        |\n                        ${Dates.fGetLocalTime(\n                            Helpers.fClean(data.ob_time),\n                            _oSettings,\n                            Helpers.fClean(data.sunset)\n                        )}\n                    </span>\n                    ${_oSettings.nSunrise}\n                </li>\n                <li class=\"moonphase\">\n                    <span class=\"left-col\">Moon: ${oMoon.name}</span>\n                    <img class=\"inline-icon moon\"\n                        alt=\"\"\n                        height=\"25\" width=\"25\"\n                        src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\"/>\n                </li>\n            </ul>\n        </div>\n        `\n}\n","/**\n * https://gist.github.com/endel/dfe6bb2fbe679781948c#gistcomment-2811037\n *\n * @param {Date object || date string} Date Object or String with valid formatting to make date object from.\n * @returns {object} Moon phase object\n */\nexport const fPhase = function (date, _oSettings) {\n    const Moon = {\n        phases: [\n            'new',\n            'waxing-crescent',\n            'first-quarter',\n            'waxing-gibbous',\n            'full',\n            'waning-gibbous',\n            'third-quarter',\n            'waning-crescent',\n        ],\n        phase: function (year, month, day) {\n            let c = 0\n            let e = 0\n            let jd = 0\n            let b = 0\n\n            if (month < 3) {\n                year--\n                month += 12\n            }\n\n            ++month\n            c = 365.25 * year\n            e = 30.6 * month\n            jd = c + e + day - 694039.09 // jd is total days elapsed\n            jd /= 29.5305882 // divide by the moon cycle\n            b = parseInt(jd) // int(jd) -> b, take integer part of jd\n            jd -= b // subtract integer part to leave fractional part of original jd\n            b = Math.round(jd * this.phases.length) // scale fraction from 0-8 and round\n\n            if (b >= 8) b = 0 // 0 and 8 are the same so turn 8 into 0\n            return { phase: b, name: Moon.phases[b] }\n        },\n    }\n\n    // if no date, create date based on current system date\n    date = date || new Date()\n\n    // if provided a date, try to make a new Date object\n    date = date instanceof String ? new Date(date) : date\n\n    // test our date object\n    if (!date || typeof date.getMonth !== 'function') {\n        throw new Error('fMoonPhase provided invalid date')\n    }\n\n    const yyyy = date.getFullYear()\n    const mm = date.getMonth() + 1 // 0 indexed\n    const dd = date.getDate()\n\n    const oMoonPhase = Moon.phase(yyyy, mm, dd)\n\n    _oSettings.debug\n        ? console.log('fMoonPhase date (yyyy mm dd): ', `  ${yyyy} ${mm} ${dd}`)\n        : ''\n    _oSettings.debug ? console.log('fMoonPhase result: ', oMoonPhase) : ''\n\n    return oMoonPhase\n}\n","import * as Helpers from './_helpers'\nimport * as Queries from './_queries'\nimport * as Scales from './_scales'\n\nimport { fRenderHUD } from './components/_hud'\nimport { fRenderForcast } from './components/_forcast'\nimport { fRenderDetails } from './components/_details'\nimport { fErrorDisplay } from './components/_errors'\n\n/**\n * The Weather Service\n * @author bnjmnrsh@gmail.com\n *\n * @param {object} [_oSettings={}]\n */\n\nconst weatherApp = function (_oSettings = {}) {\n    const _oDefaults = {\n        target: '#app',\n        KEY: '',\n        units: 'M',\n        forcast: `{{forcast}}`,\n        airaForcast: `The weather is currently: {{forcast}} at {{temp}}.`,\n        location: `{{city}}, {{country}}`,\n        debug: false,\n    }\n\n    // Merge settings with defaults\n    _oSettings = Object.assign(_oDefaults, _oSettings)\n\n    // API urls\n    const sIpapiLocationApi = 'https://ipapi.co/json/'\n    let sWeatherApi = `https://weatherserv.bnjmnrsh.workers.dev/?`\n\n    if (_oSettings.dev === true) {\n        sWeatherApi = `${sWeatherApi}&DEV=true`\n    }\n\n    // DOM Target\n    const nApp = document.querySelector(_oSettings.target)\n\n    // SVGs are staged in HTML for details section,\n    // the remainder of images are inlined(except Cloudcover & Moon, loaded dynamically)\n    const nIcons = document.querySelector('#svgs')\n\n    // degrees/compass inline\n    _oSettings.nWind = nIcons.querySelector('.svg-wi-strong-wind').outerHTML\n    _oSettings.nSnow = nIcons.querySelector('.svg-wi-snow').outerHTML\n\n    // cloud lodaded dynamically\n    _oSettings.nRaindrop = nIcons.querySelector('.svg-wi-raindrop').outerHTML\n    _oSettings.nBinoculars = nIcons.querySelector('.svg-binoculars').outerHTML\n    _oSettings.nSunrise = nIcons.querySelector('.svg-wi-sunrise').outerHTML\n    _oSettings.nSunset = nIcons.querySelector('.svg-wi-sunset').outerHTML\n    // moon phases loaded as <img>\n\n    /**\n     * Build the UI\n     *\n     * @param {array} data\n     */\n    const fBuildUI = function (weather) {\n        app.innerHTML =\n            fRenderHUD(weather.CURRENT.data[0], _oSettings) +\n            fRenderDetails(weather.CURRENT.data[0], _oSettings) +\n            fRenderForcast(weather.DAILY.data, _oSettings)\n    }\n\n    /**\n     * Init\n     */\n    const fInit = async function () {\n        try {\n            const loc = await Queries.fGetLocation(\n                sIpapiLocationApi,\n                _oSettings\n            )\n            const weather = await Queries.fGetWeather(\n                loc,\n                sWeatherApi,\n                _oSettings\n            )\n\n            _oSettings.debug ? console.log('fGetLocation response:', loc) : ''\n            _oSettings.debug\n                ? console.log('fGetWeather response:', weather)\n                : ''\n\n            fBuildUI(weather)\n            Scales.fSetVisabilityScale(weather.CURRENT.data[0].vis)\n        } catch (e) {\n            console.error('init error: ', e)\n            nApp.innerHTML = fErrorDisplay(e)\n        }\n    }\n    fInit()\n}\n\n// with debugging and Imperial Units\nconst settings = {\n    forcast: `Currently: {{forcast}}`,\n    units: 'I',\n    debug: true,\n    dev: false,\n}\n\nweatherApp(settings)\n","import * as Convert from '../_conversions'\nimport * as Helpers from '../_helpers'\nimport * as Icons from '../_icons'\nimport * as Scales from '../_scales'\nimport * as StrReplace from '../_strings'\n\n/**\n * Renders the app's header\n *\n * @param {array} data\n * @returns {string}\n */\nexport const fRenderHUD = function (data, _oSettings) {\n    console.log('fRenderHUD: ', data)\n    const sIcon = Icons.fGetWeatherIcon(data)\n    return `\n        <header id=\"hud\" class=\"\" data-temp=\"${Scales.fTempDataPt(data.temp)}\">\n            <h3>\n                    <img class=\"weather-icon\" alt=\"${StrReplace.fFormatUIstr(\n                        _oSettings.airaForcast,\n                        data,\n                        _oSettings\n                    )}\" src=\"./svg/icons/weather/svg/${sIcon}.svg\" />\n                <span aria-hidden=\"true\">${Convert.fTemp(\n                    Helpers.fClean(data.temp),\n                    _oSettings\n                )}</span>\n            </h3>\n            <ul class=\"unstyled\">\n                <li aria-hidden=\"true\">\n                    ${StrReplace.fFormatUIstr(\n                        _oSettings.forcast,\n                        data,\n                        _oSettings\n                    ).toLowerCase()}\n                </li>\n                <li>\n                    ${StrReplace.fFormatUIstr(\n                        _oSettings.location,\n                        data,\n                        _oSettings\n                    )}\n                </li>\n            </ul>\n        </header>\n        `\n}\n","/**\n * Render errors to the user\n *\n * @param {obj} err\n * @returns\n */\nexport const fErrorDisplay = function (err) {\n    return `<div id=\"hud\">\n                <div id=\"ohnos\">\n                    <h3><span aria-hidden=\"true\">⥀.⥀<br /></span>Oh Nooos!</h3>\n                    <p class=\"sr-only\">There has been a crittical error:</p>\n                        <div>\n                            ${err.stack ? '<pre>' + err.stack + '<pre>' : ''}\n                            ${\n                                err.status\n                                    ? '<pre>' +\n                                      err.statusText +\n                                      ': ' +\n                                      err.status +\n                                      '<pre>'\n                                    : ''\n                            }\n                        </div>\n                    <img alt=\"\" src=\"./svg/icons/weather/svg/wi-alien.svg\"/>\n                </div>\n            </div>`\n}\n"],"names":["fClean","dirty","temp","document","createElement","innerHTML","innerText","fGetLocation","async","sIpapiLocationApi","_oSettings","console","log","navigator","geolocation","debug","options","enableHighAccuracy","timeout","maximumAge","resp","Promise","resolve","reject","getCurrentPosition","coords","fGeoLocApi","e","warn","fetch","then","ok","json","fIPapi","fGetWeather","loc","sWeatherApi","urlBase","sApiQuery","latitude","longitude","sCity","sState","sCountry","city","state","country_code","Helpers.fClean","fAssembledQuery","fTempDataPt","sTempScale","parseFloat","fPercip","measure","units","toFixed","fTemp","withUnits","converted","oWeather","200","201","202","230","231","232","233","300","301","302","500","501","502","511","520","521","522","600","602","610","611","612","622","623","700","711","721","731","741","751","800","801","802","803","804","900","oCloudCover","0","1","2","3","4","5","fGetWeatherIcon","data","hour","code","pod","hasOwnProperty","parseInt","weather","fFormatUIstr","string","replace","description","Convert.fTemp","city_name","fAddTimeToDateString","sDate","length","new_sDate","Date","getMonth","Error","fGetLocalTime","sTime24","oDate","aTime","split","getUTCHours","getUTCMinutes","oDateUtc","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getHours","getMinutes","includes","sHours","minutes","match","slice","fTime","fRenderForcastList","forecast","Object","keys","map","el","Scales.fTempDataPt","datetime","toLocaleString","weekday","Dates.fGetWeekday","getDate","Dates.fGetDayOrdinal","Icons.fGetWeatherIcon","toLowerCase","high_temp","low_temp","join","fRenderDetails","sWindDirection","wind_cdir_full","sWindDeg","wind_dir","iconCloud","coverage","icons","aIconData","push","querySelector","outerHTML","Icons.fGetCloudCoverIcon","clouds","oMoon","date","Moon","phases","phase","year","month","day","c","jd","b","Math","round","this","name","String","yyyy","getFullYear","mm","dd","oMoonPhase","Moon.fPhase","obj_time","app_temp","uv","uvClass","Scales.fUvDataPt","snow","Convert.fPercip","nSnow","precip","nRaindrop","Convert.fKmPerHour","wind_spd","wind_cdir","nWind","Convert.fKm","vis","nBinoculars","Dates.fGetLocalTime","ob_time","sunrise","sunset","nSunrise","_oDefaults","target","KEY","forcast","airaForcast","location","assign","dev","nApp","nIcons","nSunset","fBuildUI","app","sIcon","StrReplace.fFormatUIstr","fRenderHUD","CURRENT","fRenderForcast","DAILY","Queries.fGetLocation","Queries.fGetWeather","distance","style","setProperty","Scales.fSetVisabilityScale","error","err","stack","status","statusText","fInit","weatherApp"],"mappings":"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"}