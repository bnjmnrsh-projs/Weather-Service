{"version":3,"file":"app.min.js","sources":["../../src/js/_helpers.js","../../src/js/_request.js","../../src/js/_queries.js","../../src/js/_icons.js","../../src/js/_buildAppSettingsObj.js","../../src/js/_scales.js","../../src/js/_conversions.js","../../src/js/_datetime.js","../../src/js/_strings.js","../../src/js/components/_hud.js","../../src/js/components/_forecast.js","../../src/js/components/_details.js","../../src/js/_moonPhases.js","../../src/js/_buildUI.js","../../src/js/_ThemeToggle.js","../../src/js/app.js","../../src/js/components/_errors.js"],"sourcesContent":["/**\n * Sanitise incoming API data\n *\n * @param {string} [sDirty='']\n * @returns {string} sanitised text\n */\nexport const fClean = function (sDirty = '') {\n  if (typeof sDirty === 'number') return sDirty\n  if (!sDirty) return\n\n  const temp = document.createElement('div')\n  temp.innerHTML = sDirty\n  return temp.innerText\n}\n","/**\n * Parses the JSON returned by a network request.\n * inspired by: https://github.com/github/fetch/issues/203#issuecomment-266034180\n *\n * @param  {object}         A a network request response\n *\n * @return {object}         The parsed JSON, status from the response\n */\n\n/* eslint-disable prefer-promise-reject-errors\n  ----\n  We want to return error object with our API response rather then thowing a new Error?\n*/\nconst fParseJSONresponse = async function (oResponse, bDebug = false) {\n  if (bDebug) {\n    console.log('fParseJSONresponse', oResponse)\n  }\n  return new Promise((resolve) => {\n    oResponse\n      .json()\n      .then((json) => {\n        return resolve({\n          status: oResponse.status,\n          ok: oResponse.ok,\n          json\n        })\n      })\n      .catch((oError) => {\n        resolve({\n          ok: false,\n          status: 'Request()::fParseJSONresponse()',\n          status_message: oError\n        })\n      })\n  })\n}\n\nexport const Request = async function (sUrl, oOptions, bDebug = false) {\n  try {\n    if (sUrl) {\n      return new Promise((resolve, reject) => {\n        window\n          .fetch(sUrl, oOptions)\n          .then((oResponse) => fParseJSONresponse(oResponse, bDebug))\n          .then((oResponse) => {\n            if (oResponse.ok) {\n              if (bDebug) {\n                console.log('fRequest', 'ok')\n                console.log('fRequest response', oResponse.json)\n              }\n              return resolve(oResponse)\n            }\n            // extract the error from the server's json\n\n            if (bDebug) {\n              console.error('fRequest not ok')\n              console.error('oResponse', oResponse)\n            }\n            if (Object.prototype.hasOwnProperty.call(oResponse, 'json.error')) {\n              return resolve({\n                status: oResponse.status,\n                status_message: oResponse.json.error\n              })\n            }\n            return resolve(oResponse)\n          })\n          .catch((oError) => {\n            if (bDebug) {\n              console.error('fRequest catch', { ...oError })\n              console.warn('oError', oError)\n            }\n            if (Object.keys(oError).length === 0) {\n              resolve({\n                ok: false,\n                status: 'Request() fetch error',\n                status_message: oError\n              })\n            }\n            throw new Error(oError)\n          })\n      })\n    } else {\n      return {\n        ok: false,\n        status: 'Request() fetch error',\n        status_message: `Invalid fetch URL: ${sUrl}`\n      }\n    }\n  } catch (oError) {\n    if (bDebug) {\n      console.warn('Request() error', oError)\n    }\n    throw new Error({ ...oError })\n  }\n}\n\nexport const RequestWithRetry = async function (\n  sUrl,\n  oOptions = {},\n  n = 1,\n  bDebug = false\n) {\n  try {\n    return await Request(sUrl, oOptions, bDebug)\n  } catch (oError) {\n    if (bDebug) {\n      console.error('fRequestWithRetry() error', oError)\n    }\n    if (oError.status) throw oError // recieved a reply from server, pass it on\n    if (n <= 1) throw oError // out of trys\n    if (bDebug) {\n      console.warn(`Request::fRequestWithRetry(): Retrying fetch request: ${n}`)\n    }\n    return await RequestWithRetry(sUrl, oOptions, n - 1, bDebug)\n  }\n}\n","import { fClean } from './_helpers'\nimport { RequestWithRetry } from './_request'\n\n/**\n * Browser based location API\n *\n * @returns {object} coordiantes object\n */\nconst fGeoLocApi = async function () {\n  const oOptions = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumAge: 0\n  }\n\n  const pResp = new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(\n      function (pResp) {\n        resolve(pResp.coords)\n      },\n      function (pResp) {\n        reject(pResp)\n      },\n      oOptions\n    )\n  })\n  return await pResp\n}\n\n/**\n * IP address based location API\n *\n * @returns {object} coordiantes object\n */\nexport const fIPapi = async function (sIpapiLocationApi, _oSettings) {\n  return await RequestWithRetry(\n    sIpapiLocationApi,\n    {},\n    _oSettings.api_retries\n  ).then(function (pResp) {\n    if (pResp.ok) {\n      return pResp.json\n    } else {\n      throw pResp\n    }\n  })\n}\n\n/**\n * Gets the user location first using locationAPI, or if the user rejects, fall back to IP address lookup.\n *\n * @param {string} [section='home']\n */\nexport const fGetLocation = async function (sIpapiLocationApi, _oSettings) {\n  if (navigator.geolocation) {\n    try {\n      if (_oSettings.debug) {\n        console.log('fGetLocation: Checking geoLoccation API: fGeoLocApi.')\n      }\n      return await fGeoLocApi()\n    } catch (oError) {\n      if (_oSettings.debug) {\n        console.warn(`fGetLocation: failed using fGeoLocApi: ${oError}`)\n        console.warn('Falling back to IP address lookup instead.')\n      }\n      try {\n        return await fIPapi(sIpapiLocationApi, _oSettings)\n      } catch (oError) {\n        if (_oSettings.debug) {\n          console.warn(`fGetLocation: failed sIpapiLocationApi: ${oError}`)\n        }\n        throw new Error({ ...oError })\n      }\n    }\n  }\n}\n\n/**\n * Assembles the formatted weather API URL & query string\n *\n * @param {string} urlBase\n * @param {obj} oLoc Response from oLocation API\n * @returns {string} Assembled url with query (cleaned)\n */\nexport const fAssembleWeatherQuery = function (urlBase, oLoc, _oSettings) {\n  if (!oLoc) return\n\n  let sApiQuery = `${urlBase}&lat=${oLoc.latitude}&lon=${oLoc.longitude}`\n\n  if (!oLoc.latitude || !oLoc.longitude) {\n    let sCity\n    let sState\n    let sCountry = ''\n\n    if ('city' in oLoc && oLoc.city) {\n      sCity = `&city=${oLoc.city}`\n    }\n    if ('state' in oLoc && oLoc.state) {\n      sState = `&state=${oLoc.state}`\n    }\n    if ('country' in oLoc && oLoc.country_code) {\n      sCountry = `&country=${oLoc.country_code}`\n    }\n\n    sApiQuery = `${urlBase}${sCity ?? ''}${sState ?? ''}${sCountry ?? ''}`\n  }\n\n  if (_oSettings.debug) {\n    console.log('sApiQuery query:', fClean(sApiQuery))\n  }\n\n  return fClean(sApiQuery)\n}\n\n/**\n * Fetch the weather for a user's location.\n *\n * @param {object} oLoc\n * @returns {object} weather object\n */\nexport const fGetWeather = async function (oLoc, sWeatherApi, _oSettings) {\n  const pResp = await RequestWithRetry(\n    fAssembleWeatherQuery(sWeatherApi, oLoc, _oSettings),\n    {},\n    _oSettings.api_retries\n  ).then(function (pResp) {\n    if (pResp.ok) {\n      return pResp.json\n    } else {\n      throw pResp\n    }\n  })\n  return await pResp\n}\n","import { fClean } from './_helpers'\n\nexport const oWeather = {\n  200: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  201: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  202: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  230: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  231: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  232: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  233: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n  300: ['wi-day-rain', 'wi-night-alt-rain'],\n  301: ['wi-day-rain', 'wi-night-alt-rain'],\n  302: ['wi-day-rain', 'wi-night-alt-rain'],\n  500: ['wi-day-rain', 'wi-night-alt-rain'],\n  501: ['wi-day-rain', 'wi-night-alt-rain'],\n  502: ['wi-day-rain-wind', 'wi-night-alt-rain-wind'],\n  511: ['wi-day-sleet', 'wi-night-alt-sleet'],\n  520: ['wi-day-showers', 'wi-night-alt-showers'],\n  521: ['wi-day-showers', 'wi-night-alt-showers'],\n  522: ['wi-day-rain', 'wi-night-alt-rain'],\n  600: ['wi-day-snow', 'wi-night-alt-snow'],\n  602: ['wi-day-snow', 'wi-night-alt-snow'],\n  610: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n  611: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n  612: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n  622: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n  623: ['wi-day-snow', 'wi-night-alt-snow'],\n  700: ['wi-day-fog', 'wi-night-fog'],\n  711: ['wi-day-fog', 'wi-night-fog'],\n  721: ['wi-day-fog', 'wi-night-fog'],\n  731: ['wi-day-fog', 'wi-night-fog'],\n  741: ['wi-day-fog', 'wi-night-fog'],\n  751: ['wi-day-fog', 'wi-night-fog'],\n  800: ['wi-day-sunny', 'wi-night-clear'],\n  801: ['wi-day-cloudy', 'wi-night-alt-cloudy'],\n  802: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n  803: ['wi-day-cloudy-high', 'wi-night-partly-cloudy'],\n  804: ['wi-cloudy', 'wi-cloudy'],\n  900: ['wi-rain-mix', 'wi-rain-mix']\n}\n\nexport const oCloudCover = {\n  0: ['wi-day-sunny', 'wi-night-clear'],\n  1: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n  2: ['wi-day-sunny-overcast', 'wi-night-partly-cloudy'],\n  3: ['wi-cloud', 'wi-cloud'],\n  4: ['wi-cloudy', 'wi-cloudy'],\n  5: ['dark-cloudy', 'dark-cloudy']\n}\n\n/**\n * Returns the string name of the weather icon\n *\n * @param {object} oData Either the current, daily, or iHourly forecast weather object\n * @param {string || int} [iHour]\n * @returns string\n */\nexport const fGetWeatherIcon = function (oData, iHour) {\n  if (!oData) return\n\n  let iCode, sPod\n  if (!iHour && Object.prototype.hasOwnProperty.call(oData, 'pod')) {\n    // Current weather object\n    sPod = fClean(oData.sPod) === 'd' ? 0 : 1\n    iCode = parseInt(fClean(oData.weather.code))\n  } else if ('hour' in oData) {\n    // Forcast weather object (hourly)\n    sPod = fClean(oData[iHour].sPod) === 'd' ? 0 : 1\n    iCode = parseInt(fClean(oData[iHour].weather.code))\n  } else {\n    // Forcast weather object (days)\n    sPod = 1\n    iCode = parseInt(fClean(oData.weather.code))\n  }\n  return oWeather[iCode][sPod]\n}\n\n/**\n * Select the cloud iCoverage icon based on percentage value\n *\n * @param {int} iCoverage A percentage figure 0-100\n * @param {string} sPod Point of Day\n * @returns {string} the string name of the icon\n */\nexport const fGetCloudCoverIcon = function (iCoverage, sPod = 'd') {\n  if (typeof iCoverage !== 'number') return\n\n  // set day or night icon set\n  sPod = sPod === 'd' ? 0 : 1\n\n  const icons = oCloudCover\n\n  iCoverage = parseInt(iCoverage)\n\n  let aIconData = ''\n\n  switch (iCoverage) {\n    case iCoverage >= 0 && iCoverage < 16 ? iCoverage : null:\n      aIconData = [icons[0][sPod], 0]\n      break\n    case iCoverage >= 16 && iCoverage < 32 ? iCoverage : null:\n      aIconData = [icons[1][sPod], 1]\n      break\n    case iCoverage >= 32 && iCoverage < 48 ? iCoverage : null:\n      aIconData = [icons[2][sPod], 2]\n      break\n    case iCoverage >= 48 && iCoverage < 65 ? iCoverage : null:\n      aIconData = [icons[3][sPod], 3]\n      break\n    case iCoverage >= 65 && iCoverage < 83 ? iCoverage : null:\n      aIconData = [icons[4][sPod], 4]\n      break\n    case iCoverage >= 83 && iCoverage <= 100 ? iCoverage : null:\n      aIconData = [icons[5][sPod], 5]\n      break\n  }\n  aIconData.push(document.querySelector(`#svgs .svg-${aIconData[0]}`).outerHTML)\n\n  return aIconData\n}\n\n/**\n * Takes a string based representation of a DOM element, and adds inline style and/or data-* attributes to it.\n *\n * @param {string} sEl\n * @param {object} props\n * @returns {string}\n *\n * The props object may contain a top level `style` propery for inline css string\n * and or a `data` object which will be mapped to data-* attributes on the element.\n *\n *  `<span class=\"inline-icon\">\n *    ${Icons.fSetStringElAttrs(oIcons.sWindDirection, {\n *        style: `transform: rotate(${sWindDeg}deg)`,\n *        class: 'some-class',\n *        data: { temp: '6' },\n *    })}\n *  </span>`\n */\n\nexport const fSetStringElAttrs = function (sEl, props = {}) {\n  if ('content' in document.createElement('template')) {\n    const nEl = document.createElement('div')\n    nEl.innerHTML = sEl.trim()\n    const nTarget = nEl.querySelector('div >:first-child')\n\n    if (Object.prototype.hasOwnProperty.call(props, 'style')) {\n      nTarget.setAttribute('style', props.style)\n    }\n    if (Object.prototype.hasOwnProperty.call(props, 'class')) {\n      nTarget.classList.add(props.class)\n    }\n    if (\n      Object.prototype.hasOwnProperty.call(props, 'data') &&\n      Object.keys(props.data).length > 0\n    ) {\n      Object.keys(props.data).map((key) =>\n        nTarget.setAttribute(`data-${key}`, props.data[key])\n      )\n    }\n    return nEl.innerHTML\n  }\n  return ''\n}\n\n/**\n * Load DOM nodes into a refrence object, good for staging hidden SVGs on the DOM for later use in application.\n *\n * @param {string} parentNodeSelector\n * @param {string} nestedNodesSelector\n * @returns {object} An object of nodes strings with their ID as the object perameter\n *\n * TODO: Moon phases currently loaded as img paths: <img src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\">\n */\nexport const fLoadIconObject = function (\n  parentNodeSelector = '#svgs',\n  nestedNodesSelector = 'svg'\n) {\n  const parentNode = document.querySelector(parentNodeSelector)\n\n  const nlSVGs = parentNode.querySelectorAll(nestedNodesSelector)\n  const object = {}\n\n  nlSVGs.forEach(function (node) {\n    // add each node object with node node ID as key\n    object[node.id] = node.outerHTML\n  })\n  return object\n}\n","import { fLoadIconObject } from './_icons'\n\nexport const fBuildAppSettingsObj = function (\n  _oDefaults = {},\n  _oSettings = {}\n) {\n  // Merge settings with defaults\n  _oSettings = Object.assign(_oDefaults, _oSettings)\n\n  // Set debugging & dev flags via URL\n  const { searchParams } = new URL(document.URL)\n  _oSettings.debug = searchParams.has('DEBUG')\n  if (searchParams.has('DEV')) {\n    _oSettings.dev = searchParams.get('DEV')\n  }\n\n  // Set location lat lon flags via URL\n  if (searchParams.has('lat') && searchParams.has('lon')) {\n    _oSettings.loc = {\n      longitude: searchParams.has('lat'),\n      latitude: searchParams.has('lon')\n    }\n  }\n\n  /**\n   * SVG icons staged in index.html\n   * TODO: Moon phases currently loaded as img paths: <img src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\">\n   */\n  _oSettings.icon = fLoadIconObject()\n\n  return _oSettings\n}\n","/**\n * Generate a visual scale based on 5km\n *\nno * @param {float} vis (expects km units)\n *\n */\nexport const fSetVisabilityScale = function (vis) {\n  const distance = (parseFloat(vis) / 5) * 100\n  const nGraph = document.querySelector('.distance')\n  nGraph.style.setProperty('--distance', 100 - distance + '%')\n}\n\n/**\n * Assigns a named string based on temperature in C\n * 6 step scale for data-temp\n *\n * @param {float} nTemp\n * @returns {string}   string\n */\nexport const fTempDataPt = function (nTemp) {\n  if (typeof nTemp !== 'number') return 0\n\n  nTemp = parseFloat(nTemp)\n\n  let sTempScale = 'none'\n  switch (nTemp) {\n    case nTemp <= 0 ? nTemp : null:\n      sTempScale = 0\n      break\n    case nTemp >= 0 && nTemp < 10 ? nTemp : null:\n      sTempScale = 1\n      break\n    case nTemp >= 10 && nTemp < 22 ? nTemp : null:\n      sTempScale = 2\n      break\n    case nTemp >= 22 && nTemp < 27 ? nTemp : null:\n      sTempScale = 3\n      break\n    case nTemp >= 27 && nTemp < 34 ? nTemp : null:\n      sTempScale = 4\n      break\n    case nTemp >= 34 ? nTemp : null:\n      sTempScale = 5\n      break\n  }\n  return sTempScale\n}\n\n/**\n * Takes a UV float value and returns an int for CSS data-UV=\"*\" selectors.\n *\n * @param {float} nUV\n * @returns {int}  whole int value on  6 step scale\n */\nexport const fUvDataPt = function (nUV) {\n  if (!nUV) return\n  nUV = parseFloat(nUV)\n\n  let sUVclass = 'none'\n  switch (nUV) {\n    case nUV < 1 ? nUV : null:\n      sUVclass = '0'\n      break\n    case nUV >= 1 && nUV < 3 ? nUV : null:\n      sUVclass = '1'\n      break\n    case nUV >= 3 && nUV < 5 ? nUV : null:\n      sUVclass = '2'\n      break\n    case nUV >= 5 && nUV < 7 ? nUV : null:\n      sUVclass = '3'\n      break\n    case nUV >= 7 && nUV < 9 ? nUV : null:\n      sUVclass = '4'\n      break\n    case nUV >= 9 || nUV <= 10 ? nUV : null:\n      sUVclass = 5\n      break\n  }\n  return sUVclass\n}\n","/**\n * *NOTE: the API has params for both imperial and metric units, however,\n * we do the conversion ourselves so that we can switch without additional api calls.\n */\n\n/**\n * mm/hr to inch/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted measurement as string with units\n */\nexport const fPercip = function (nMeasure, _oSettings) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fPercip recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n  if (nMeasure === 0) {\n    return nMeasure\n  }\n\n  if (_oSettings.units === 'M') {\n    return `${parseFloat(nMeasure).toFixed(2)}&nbsp;mm/hr`\n  } else {\n    return `${(parseFloat(nMeasure) * 0.0393701).toFixed(2)}&nbsp;inch/hr`\n  }\n}\n\n/**\n * C to F conversion\n *\n * @param {float} nMeasure\n * @returns {string || number} converted tepm as string with units, or as a Float\n */\nexport const fTemp = function (nMeasure, _oSettings, withUnits = true) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fTemp recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n  if (typeof nMeasure !== 'number') return 0\n  if (_oSettings.units === 'M') {\n    const converted = parseFloat(nMeasure).toFixed(1)\n    return withUnits ? `${converted}°&nbsp;C` : converted\n  } else {\n    const converted = ((parseFloat(nMeasure) * 9) / 5 + 32).toFixed(1)\n    return withUnits ? `${converted}°&nbsp;F` : converted\n  }\n}\n\n/**\n * km/hr to mi/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted wind speed as string with units\n */\nexport const fKmPerHour = function (nMeasure, _oSettings) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fKmPerHour recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n  if (typeof nMeasure !== 'number') return 0\n\n  if (_oSettings.units === 'M') {\n    return `${(parseFloat(nMeasure) * 3.6000059687997).toFixed(2)}&nbsp;km/hr`\n  } else {\n    return `${(parseFloat(nMeasure) * 2.23694).toFixed(2)}&nbsp;mi/hr`\n  }\n}\n\n/**\n * km to mi\n *\n * @param {float} nMeasure\n * @returns {string} converted distance as string with units\n */\nexport const fKm = function (nMeasure, _oSettings) {\n  if (typeof nMeasure !== 'number' && _oSettings.debug) {\n    console.warn(\n      `fKm recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n    )\n  }\n\n  if (typeof nMeasure !== 'number') return 0\n  if (_oSettings.units === 'M') {\n    return `${parseFloat(nMeasure).toFixed(2)}&nbsp;km`\n  } else {\n    return `${(parseFloat(nMeasure) * 0.621371).toFixed(2)}&nbsp;miles`\n  }\n}\n","/**\n * Possible Weatherbit.io date responses via our Cloudflare Worker:\n *\n * 1) CURRENT.data[0].ob_time: \"2021-06-30 18:58\" <- the space will throw an errror on safari\n * 2) CURRENT.data[0].datetime: \"2021-06-30:19\" <- will not convert to valid date object\n * 3) DAILY.data[x].datetime: \"2021-06-30\"\n * 4) DAILY.data[x].valid_date: \"2021-06-30\"\n */\n\n/**\n * A helper to ensure that date strings from API are translated into the correct local time and not UTC\n * Dates without a time (as we have from the Weather.io API) may be converted to an invalid date by Chrome\n * https://css-tricks.com/everything-you-need-to-know-about-date-in-javascript/\n * API:\n *\n * TODO: A regex for different valid date patterns might be a more robust solution, however in this case we trust the API to be consistant.\n *\n * @param {string} sDate\n * @returns {string} date as string with time component\n */\nconst fAddTimeToDateString = function (sDate) {\n  // If we have recieved ob_time, repalce the space with a 'T'\n  if (sDate.length >= 16) return sDate.replace(' ', 'T')\n\n  // Will produce a string that can be converted into a valid date object\n  const sNewDate = `${sDate}T00:00`\n  const oDate = new Date(sNewDate)\n\n  // test to see if we now have string which creates a valid date\n  if (typeof oDate.getMonth !== 'function') {\n    throw new Error(\n      `fAddTimeToDateString not provided a string that can be converted to a valid date: \"${sDate}:`\n    )\n  }\n\n  // return the new date string vaild for cases 2, 3, and 4)\n  return sNewDate\n}\n\n/**\n * 24H to 12H conversion based on _oSettings.units = I or M\n * https://stackoverflow.com/a/58878443/362445\n *\n * @param {string} sTime24\n * @param {object} _oSettings\n * @returns {string} converted time as string with units\n */\nexport const fTime = function (sTime24, _oSettings) {\n  if (!sTime24.includes(':') || !sTime24.length === '5') {\n    throw new Error('fTime not given a valid time string: HH:MM')\n  }\n\n  if (_oSettings.units === 'M') return sTime24\n  if (_oSettings.debug) {\n    console.log('fTime: sTime24', `${sTime24}`)\n    console.log('fTime: sTime24 length', `${sTime24.length}`)\n  }\n  const [sHours, minutes] = sTime24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1)\n  const period = +sHours < 12 ? 'AM' : 'PM'\n  const hours = +sHours % 12 || 12\n\n  return `${hours}:${minutes}&nbsp;${period}`\n}\n\n/**\n * UTC time provided by API into the local time of the users system.\n * If no date or time are provided, then the current datetime is returned\n *\n * @param {string} sDate (optional)\n * @param {object} _oSettings\n * @param {string} sTime24 (optional)\n * @returns {string} Time as string\n */\nexport const fGetLocalTime = function (sDate = '', _oSettings, sTime24 = '') {\n  let oDate, aTime\n  if (_oSettings.debug) {\n    console.log('fGetLocalTime: sDate', sDate)\n  }\n  if (sDate !== '') {\n    oDate = new Date(fAddTimeToDateString(sDate))\n  } else {\n    oDate = new Date()\n  }\n  if (sTime24 !== '') {\n    aTime = sTime24.split(':')\n  } else {\n    aTime = [oDate.getUTCHours(), oDate.getUTCMinutes()]\n  }\n  const aDate = [\n    oDate.getUTCFullYear(),\n    oDate.getUTCMonth(),\n    oDate.getUTCDate(),\n    aTime[0],\n    aTime[1]\n  ]\n\n  const oDateUtc = new Date(Date.UTC(...aDate))\n\n  if (_oSettings.debug) {\n    console.log('fGetLocalTime provided sTime24: ', sTime24)\n    console.log(\n      'fGetLocalTime UTC converted time:',\n      `${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`\n    )\n    console.log('fGetLocalTime: oDate', oDate)\n  }\n  return fTime(\n    `${oDateUtc.getHours()}`.padStart(2, '0') +\n      ':' +\n      `${oDateUtc.getMinutes()}`.padStart(2, '0'),\n    _oSettings\n  )\n}\n\n/**\n * Format date string to abreviated weekday name\n *\n * @param {string} sDate, valid date string\n * @returns {string}\n */\nexport const fGetWeekday = function (sDate) {\n  const oDate = new Date(fAddTimeToDateString(sDate))\n\n  // test our oDate object\n  if (!oDate || typeof oDate.getMonth !== 'function') {\n    throw new Error('fGetWeekday provided invalid date')\n  }\n\n  return oDate.toLocaleString('default', { weekday: 'short' })\n}\n\n/**\n * Format date string to weekday ordinal number (string)\n *\n * @param {string} sDate\n * @returns string, weekday ordinal number\n */\nexport const fGetDayOrdinal = function (sDate) {\n  const oDate = new Date(fAddTimeToDateString(sDate))\n\n  // test our date object\n  if (!oDate || typeof oDate.getMonth !== 'function') {\n    throw new Error('fFormatDayOrdinal provided invalid date')\n  }\n  // prettier-ignore\n  const sFormatedDate =\n    oDate.getDate() +\n    (oDate.getDate() % 10 === 1 && oDate.getDate() !== 11\n      ? 'st'\n      : oDate.getDate() % 10 === 2 && oDate.getDate() !== 12\n        ? 'nd'\n        : oDate.getDate() % 10 === 3 && oDate.getDate() !== 13\n          ? 'rd'\n          : 'th')\n  return sFormatedDate\n}\n","import * as Convert from './_conversions'\nimport * as Dates from './_datetime'\nimport { fClean } from './_helpers'\n\nconst _oTextStrings = {\n  en: {\n    now: 'Currently: ',\n    aira_now: 'The weather is currently: ',\n    feels_like: 'Feels Like:',\n    uv: 'UV:',\n    cloud: 'Cloud:',\n    snow: 'Snow:',\n    percip: 'Rain:',\n    wind: 'Wind:',\n    aira_winds: 'Winds traveling at',\n    aira_winds_join: 'from the',\n    vis: 'Visibility:',\n    sun: 'Sun:',\n    moon: 'Moon:'\n  }\n}\n\n/**\n * Perform string replacement for strings in the HUD component.\n *\n * @param {string} string\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string} Formatted string\n */\nexport const fHUDstr = function (\n  string,\n  _oData,\n  _oSettings,\n  _oStrings = _oTextStrings\n) {\n  const oCURRENT = _oData.CURRENT.data[0]\n\n  if (!string) return ''\n  return (\n    string\n      // HUD\n      .replace('{{now}}', _oStrings.en.now)\n      .replace(\n        '{{aira_weather_description}}',\n        `${_oStrings.en.aira_now} ${fClean(oCURRENT.weather.description)}`\n      )\n      .replace(\n        '{{weather_description}}',\n        fClean(oCURRENT.weather.description).toLowerCase()\n      )\n      .replace('{{temp}}', Convert.fTemp(fClean(oCURRENT.temp), _oSettings))\n      .replace('{{city}}', fClean(oCURRENT.city_name))\n      .replace('{{country}}', fClean(oCURRENT.country_code))\n  )\n}\n\n/**\n * Perform string replacement for strings in the details component.\n *\n * @param {string} string\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string} Formatted string\n */\nexport const fDetsStr = function (\n  string,\n  _oData,\n  _oSettings,\n  _oStrings = _oTextStrings\n) {\n  const oCURRENT = _oData.CURRENT.data[0]\n\n  if (!string) return ''\n  return (\n    string\n      // Details\n      .replace('{{feels_like}}', _oStrings.en.feels_like)\n      .replace(\n        '{{app_temp}}',\n        Convert.fTemp(fClean(oCURRENT.app_temp), _oSettings)\n      )\n      .replace('{{uv}}', _oStrings.en.uv)\n      .replace('{{uv_index}}', fClean(oCURRENT.uv.toFixed(2)))\n\n      .replace('{{cloud}}', _oStrings.en.cloud)\n      .replace('{{cloud_percent}}', `${fClean(oCURRENT.clouds)}%`)\n      .replace('{{snow}}', _oStrings.en.snow)\n      .replace(\n        '{{snow_percip}}',\n        Convert.fPercip(fClean(oCURRENT.snow), _oSettings)\n      )\n      .replace('{{rain}}', _oStrings.en.percip)\n      .replace(\n        '{{rain_percip}}',\n        Convert.fPercip(fClean(oCURRENT.precip), _oSettings)\n      )\n      .replace('{{aira_winds}}', _oStrings.en.aira_winds)\n      .replace('{{aira_winds_join}}', _oStrings.en.aira_winds_join)\n\n      .replace('{{wind}}', _oStrings.en.wind)\n      .replace(\n        '{{wind_speed}}',\n        Convert.fKmPerHour(fClean(oCURRENT.wind_spd), _oSettings)\n      )\n      .replace('{{wind_direction}}', fClean(oCURRENT.wind_cdir))\n      .replace('{{vis}}', _oStrings.en.vis)\n      .replace(\n        '{{vis_distance}}',\n        Convert.fKm(fClean(oCURRENT.vis), _oSettings)\n      )\n      .replace('{{sun_rise_set}}', _oStrings.en.sun)\n      .replace(\n        '{{sun_rise}}',\n        Dates.fGetLocalTime(\n          fClean(oCURRENT.ob_time),\n          _oSettings,\n          fClean(oCURRENT.sunrise)\n        )\n      )\n      .replace(\n        '{{sun_set}}',\n        Dates.fGetLocalTime(\n          fClean(oCURRENT.ob_time),\n          _oSettings,\n          fClean(oCURRENT.sunset)\n        )\n      )\n      .replace('{{moon}}', _oStrings.en.moon)\n  )\n}\n","import { fGetWeatherIcon } from '../_icons'\nimport { fTempDataPt } from '../_scales'\nimport { fHUDstr } from '../_strings'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's header\n *\n * @param {array} _oData\n * @returns {string}\n */\nexport const fRenderHUD = function (_oData, _oSettings) {\n  if (_oSettings.debug) {\n    console.log('fRenderHUD: ', _oData)\n  }\n  const sErrorResponse = `<header id=\"hud\" class=\"c-hud error\">\n            <h3>\n              <img class=\"weather-icon icon-spin\" alt=\"\" src=\"./svg/icons/weather/svg/wi-wind-deg.svg\" />\n              Whoops!\n            </h3>\n            <ul class=\"unstyled\">\n              <li class=\"\">There was an error loading the current weather:\n                ${\n                  _oData.CURRENT.error\n                    ? `<code>${_oData.CURRENT.error}</code>`\n                    : ''\n                }\n                ${\n                  _oData.CURRENT.status\n                    ? `<code>${_oData.CURRENT.status}</code>`\n                    : ''\n                }\n              </li>\n              <li class=\"\"><button class=\"rounded\">${\n                _oSettings.icon.sRefresh\n              } reload</button></li>\n            </ul>\n        </header>\n        `\n  if (_oData.CURRENT.error || _oData.CURRENT.status) {\n    return sErrorResponse\n  }\n\n  const oCURRENT = _oData.CURRENT.data[0]\n  const sIconName = fGetWeatherIcon(oCURRENT)\n\n  const sTemplate = `<header\n        id=\"hud\" class=\"c-hud\" data-temp=\"${fTempDataPt(\n          fClean(oCURRENT.temp)\n        )}\">\n          <h3>\n            <img class=\"weather-icon\" alt=\"\" src=\"./svg/icons/weather/svg/${sIconName}.svg\" />\n            <span aria-hidden=\"true\">{{temp}}</span>\n          </h3>\n          <ul class=\"unstyled\">\n            <li aria-hidden=\"true\">{{now}} {{weather_description}}</li>\n            <li hidden>{{aira_weather_description}}</li>\n            <li>{{city}}, {{country}}</li>\n          </ul>\n        </header>\n        `\n\n  return fHUDstr(sTemplate, _oData, _oSettings)\n}\n","import * as Convert from '../_conversions'\nimport * as Dates from '../_datetime'\nimport * as Icons from '../_icons'\nimport * as Scales from '../_scales'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders individual upcoming forecast li elements\n *\n * @param {object} _oForecast\n * @param {object} _oSettings\n * @returns {string}\n */\nconst fRenderForecastList = function (_oForecast, _oSettings) {\n  if (_oSettings.debug) {\n    console.log('fRenderForcast: ', _oForecast)\n    console.log('_oSettings: ', _oSettings)\n  }\n  const days = Object.keys(_oForecast)\n  return days\n    .map(function (el) {\n      return `<li data-temp=\"${Scales.fTempDataPt(\n        fClean(_oForecast[el].temp),\n        _oSettings\n      )}\">\n                        <header datetime=\"${fClean(\n                          _oForecast[el].datetime\n                        )}\" aria-description=\"The forecast for\">${Dates.fGetWeekday(fClean(_oForecast[el].datetime))} ${Dates.fGetDayOrdinal(fClean(_oForecast[el].datetime))}</header>\n                        <img class=\"weather-icon\" alt=\"${fClean(\n                          _oForecast[el].weather.description\n                        )}\" src=\"./svg/icons/weather/svg/${Icons.fGetWeatherIcon(_oForecast[el])}.svg\" />\n                        <p class=\"forecast-description\" aria-hidden=\"true\">${fClean(\n                          _oForecast[el].weather.description.toLowerCase()\n                        )}</p>\n                         <span><stong>${Convert.fTemp(\n                           fClean(_oForecast[el].high_temp),\n                           _oSettings\n                         )}</stong></span>\n                          <span>${Convert.fTemp(\n                            fClean(_oForecast[el].low_temp),\n                            _oSettings\n                          )}</span>\n\n                    </li>`\n    })\n    .join('')\n}\n\n/**\n * Renders the app's upcoming forecast section\n *\n * @param {object} _oForecast\n * @returns {string}\n */\nexport const fRenderForecast = function (_oForecast, _oSettings) {\n  if (_oSettings.debug) {\n    console.log('fRenderForecast: ', _oForecast)\n  }\n  const bErrorState = _oForecast ? '' : 'error'\n\n  const sErrorResponse = `<li class=\"error\">\n                            <p>There was an error loading the forecast: ${\n                              _oForecast.error\n                                ? `<code>${_oForecast.error}</code>`\n                                : ''\n                            }\n                            ${\n                              _oForecast.status\n                                ? `<code>${_oForecast.status}</code>`\n                                : ''\n                            }</p>\n                            <button class=\"rounded\">${\n                              _oSettings.icon.sRefresh\n                            } reload</button>\n                          </li>`\n  return `\n        <div id=\"forecast\" class=\"c-forecast ${bErrorState}\" aria-description=\"The weather forecast for the next 16 days.\">\n            <ul class=\"unstyled\">\n                ${\n                  _oForecast.data\n                    ? fRenderForecastList(_oForecast.data, _oSettings)\n                    : sErrorResponse\n                }\n            </ul>\n        </div>\n        `\n}\n","import * as Icons from '../_icons'\nimport * as Moon from '../_moonPhases'\nimport * as Scales from '../_scales'\nimport { fDetsStr } from '../_strings'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's details secection\n *\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string}\n */\nexport const fRenderDetails = function (oCURRENT, _oData, _oSettings) {\n  const iconCloud = Icons.fGetCloudCoverIcon(oCURRENT.clouds)\n  const oMoon = Moon.fPhase(oCURRENT.obj_time, _oSettings)\n  const oIcons = _oSettings.icon\n\n  const template = `\n        <div id=\"details\" class=\"c-details\">\n            <ul class=\"unstyled\">\n                <li class=\"c-feels-like\">\n                    <span class=\"left-col\">{{feels_like}} {{app_temp}}</span>\n                    ${Icons.fSetStringElAttrs(oIcons.sThermometer, {\n                      class: 'inline-icon',\n                      data: {\n                        temp: Scales.fTempDataPt(fClean(oCURRENT.app_temp))\n                      }\n                    })}\n                </li>\n                ${\n                  oCURRENT.uv\n                    ? `<li class=\"c-uv-index\">\n                            <span class=\"left-col\">{{uv}} {{uv_index}}</span>\n                            ${Icons.fSetStringElAttrs(oIcons.sSunnyDay, {\n                              class: 'inline-icon',\n                              data: {\n                                uv: Scales.fUvDataPt(\n                                  fClean(oCURRENT.uv),\n                                  _oSettings\n                                )\n                              }\n                            })}\n                          </li>`\n                    : ''\n                }\n                <li class=\"c-cloud-cover\">\n                    <span class=\"left-col\">{{cloud}} {{cloud_percent}}</span>\n                    ${iconCloud[2]}\n                </li>\n                ${\n                  oCURRENT.snow\n                    ? `<li>\n                            <span class=\"left-col\">{{snow}} {{snow_percip}}</span>\n                            ${oIcons.sSnow}\n                          </li>`\n                    : ''\n                }\n                <li class=\"c-precipitation\">\n                    <span class=\"left-col\">{{rain}} {{rain_percip}}</span>\n                    ${oIcons.sRaindrop}\n                </li>\n                <li class=\"c-windspeed\" aria-description=\"{{aira_winds}} \">\n                    <span class=\"left-col\">\n                        {{wind}} {{wind_speed}}<span aira-hidden>&nbsp;|&nbsp;</span><span hidden>{{aira_winds_join}}</span>{{wind_direction}}\n                    </span>\n                    <span class=\"inline-icon\">\n                        ${Icons.fSetStringElAttrs(oIcons.sWindDirection, {\n                          style: `transform: rotate(${fClean(\n                            oCURRENT.wind_dir + 180\n                          )}deg)`\n                        })}\n                        ${oIcons.sStrongWind}\n                    </span>\n                </li>\n                <li class=\"c-visibility\">\n                    <div class=\"visibility-wrap\">\n                        <span class=\"left-col\">{{vis}} {{vis_distance}}</span>\n                        ${oIcons.sBinoculars}\n                    </div>\n                    <div class=\"scale\" aria-hidden=\"true\"><div class=\"distance\"></div></div>\n                </li>\n                <li class=\"c-sun-rise-set\">\n                    <span class=\"left-col\">{{sun_rise_set}} {{sun_rise}} | {{sun_set}}</span>\n                    ${oIcons.sSunrise}\n                </li>\n                <li class=\"c-moonphase\">\n                    <span class=\"left-col\">{{moon}} ${oMoon.name}</span>\n                    <img class=\"inline-icon moon\"\n                        alt=\"\"\n                        height=\"25\" width=\"25\"\n                        src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\"/>\n                </li>\n            </ul>\n        </div>`\n  return fDetsStr(template, _oData, _oSettings)\n}\n","/**\n * https://gist.github.com/endel/dfe6bb2fbe679781948c#gistcomment-2811037\n *\n * @param {Date object || date string} Date Object or String with valid formatting to make date object from.\n * @returns {object} Moon phase object\n */\nexport const fPhase = function (date, _oSettings) {\n  const Moon = {\n    phases: [\n      'new',\n      'waxing-crescent',\n      'first-quarter',\n      'waxing-gibbous',\n      'full',\n      'waning-gibbous',\n      'third-quarter',\n      'waning-crescent'\n    ],\n    phase: function (year, month, day) {\n      let c = 0\n      let e = 0\n      let jd = 0\n      let b = 0\n\n      if (month < 3) {\n        year--\n        month += 12\n      }\n\n      ++month\n      c = 365.25 * year\n      e = 30.6 * month\n      jd = c + e + day - 694039.09 // jd is total days elapsed\n      jd /= 29.5305882 // divide by the moon cycle\n      b = parseInt(jd) // int(jd) -> b, take integer part of jd\n      jd -= b // subtract integer part to leave fractional part of original jd\n      b = Math.round(jd * this.phases.length) // scale fraction from 0-8 and round\n\n      if (b >= 8) b = 0 // 0 and 8 are the same so turn 8 into 0\n      return { phase: b, name: Moon.phases[b] }\n    }\n  }\n\n  // if no date, create date based on current system date\n  date = date || new Date()\n\n  // if provided a date, try to make a new Date object\n  date = date instanceof String ? new Date(date) : date\n\n  // test our date object\n  if (!date || typeof date.getMonth !== 'function') {\n    if (_oSettings.debug) {\n      console.error(\n        `fMoonPhase provided invalid date strings: year: ${date.year}, month: ${date.month}, day: ${date.day}`\n      )\n    }\n  }\n\n  const yyyy = date.getFullYear()\n  const mm = date.getMonth() + 1 // 0 indexed\n  const dd = date.getDate()\n\n  const oMoonPhase = Moon.phase(yyyy, mm, dd)\n\n  if (_oSettings.debug) {\n    console.log('fMoonPhase result: ', oMoonPhase)\n  }\n\n  return oMoonPhase\n}\n","import * as Scales from './_scales'\nimport { fRenderHUD } from './components/_hud'\nimport { fRenderForecast } from './components/_forecast'\nimport { fRenderDetails } from './components/_details'\n\n/**\n * Render the complete UI\n *\n * @param {array} data\n */\nexport const fRenderFullUI = function (_oData, _oSettings) {\n  const nApp = document.querySelector(_oSettings.target)\n  nApp.querySelector('#hud').outerHTML = fRenderHUD(_oData, _oSettings)\n\n  if (_oData.CURRENT.error || _oData.CURRENT.status) {\n    nApp.querySelector('#details').classList.remove('loading')\n    nApp.querySelector('#details').classList.add('error')\n  } else {\n    nApp.querySelector('#details').outerHTML = fRenderDetails(\n      _oData.CURRENT.data[0],\n      _oData,\n      _oSettings\n    )\n  }\n\n  nApp.querySelector('#forecast').outerHTML = fRenderForecast(\n    _oData.DAILY,\n    _oSettings\n  )\n  if (!_oData.CURRENT.error && !_oData.CURRENT.status) {\n    // Adjust the visibility 'fogg' bar in the details section\n    Scales.fSetVisabilityScale(_oData.CURRENT.data[0].vis)\n  }\n  nApp.classList.remove('loading')\n}\n","/**\n * Darkmode Theme Toggle\n *\n * @author bnjmnrsh@gmail.com\n */\n\n//\n// Private methods\n//\n\n/**\n * Get the current value of the CSS '--color-mode' property.\n * https://piccalil.li/tutorial/get-css-custom-property-value-with-javascript/\n *\n * @returns {string} dark || light\n */\nconst fGetColorModeCSSpropVal = function (oSettings = {}) {\n  let sResponse = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(oSettings.COLOR_MODE_CSS_PROP)\n  if (sResponse.length) {\n    sResponse = sResponse.replace(/\"/g, '').trim()\n  }\n\n  if (oSettings.debug) {\n    console.log('ThemeToggle:fGetColorModeCSSpropVal: sResponse:', sResponse)\n  }\n\n  return sResponse\n}\n\n/**\n * Get the last saved value from local storage, falling back to System prefers-color-scheme via CSS prop.\n *\n * @param {obj} oSettings\n * @returns {string} light || dark\n */\nconst fGetLocalStoreColorSchemeVal = function (oSettings = {}) {\n  let sCurrentSetting = window.localStorage.getItem(oSettings.STORAGE_KEY)\n\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fGetLocalStoreColorSchemeVal: sCurrentSetting:',\n      sCurrentSetting\n    )\n  }\n\n  // If nothing stored, check which style sheet is active\n  if (sCurrentSetting === null) {\n    sCurrentSetting =\n      fGetColorModeCSSpropVal(oSettings) === 'dark' ? 'dark' : 'light'\n    // Set to window.localStorage\n    window.localStorage.setItem(oSettings.STORAGE_KEY, sCurrentSetting)\n  }\n\n  return sCurrentSetting\n}\n\n/**\n * Save user perfered theme to window.localStorage\n *\n * @param {string} sCurrentSetting 'light' || 'dark'\n * @param {obj} oSettings\n */\nconst fSetLocalStoreColorSchemeVal = function (\n  sCurrentSetting,\n  oSettings = {}\n) {\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fSetLocalStoreColorSchemeVal: to sCurrentSetting:',\n      sCurrentSetting\n    )\n  }\n  if (sCurrentSetting === 'light' || sCurrentSetting === 'dark') {\n    window.localStorage.setItem(oSettings.STORAGE_KEY, sCurrentSetting)\n  }\n}\n\n/**\n * Apply data-user-color-scheme to document, update localStore.\n *\n * @param {string} sColorSetting\n * @param {obj} oSettings\n */\nconst fSetHTMLdataAttr = function (sColorSetting, oSettings = {}) {\n  const sCurrentSetting =\n    sColorSetting || fGetLocalStoreColorSchemeVal(oSettings)\n\n  if (sCurrentSetting === 'light' || sCurrentSetting === 'dark') {\n    // Set the data attr\n    document.documentElement.setAttribute(\n      'data-user-color-scheme',\n      sCurrentSetting\n    )\n  }\n\n  if (oSettings.debug) {\n    console.log('ThemeToggle:fSetHTMLdataAttr: sColorSetting:', sColorSetting)\n  }\n}\n\n/**\n * Update the aria-pressed state of toggle-button based on passed value.\n *\n * @param {string} sSetButtonState 'light' || 'dark'\n * @param {obj} oSettings\n */\nconst fSetButtonState = function (\n  sSetButtonState,\n  nThemeToggel,\n  oSettings = {}\n) {\n  switch (sSetButtonState) {\n    case 'dark':\n      nThemeToggel.setAttribute('aria-pressed', 'true')\n      break\n    case 'light':\n      nThemeToggel.removeAttribute('aria-pressed')\n      break\n  }\n\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fSetButtonState: sSetButtonState:',\n      sSetButtonState\n    )\n  }\n}\n\n/**\n * Set the UI color scheme, button state, and update localStore.\n *\n * @param {string} sColorSetting 'light' || 'dark'\n * @param {obj} oSettings\n */\nconst fSetGlobalColorScheme = function (\n  sColorSetting,\n  nThemeToggel,\n  oSettings\n) {\n  const sCurrentSetting =\n    sColorSetting || fGetLocalStoreColorSchemeVal(oSettings)\n\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fSetGlobalColorScheme: sCurrentSetting:', sCurrentSetting\n    )\n  }\n  switch (sCurrentSetting) {\n    case 'light':\n      fSetHTMLdataAttr('light', oSettings)\n      fSetButtonState('light', nThemeToggel, oSettings)\n      fSetLocalStoreColorSchemeVal('light', oSettings)\n      break\n    case 'dark':\n      fSetHTMLdataAttr('dark', oSettings)\n      fSetButtonState('dark', nThemeToggel, oSettings)\n      fSetLocalStoreColorSchemeVal('dark', oSettings)\n      break\n  }\n}\n\n/**\n * Toggle the UI color scheme & button state based on value saved in window.localStorage.\n *\n * @param {obj} oSettings\n */\nconst fToggleGlobalColorScheme = function (nThemeToggel, oSettings = {}) {\n  const sCurrentSetting = fGetLocalStoreColorSchemeVal(oSettings)\n  if (oSettings.debug) {\n    console.log(\n      'ThemeToggle:fToggleGlobalColorScheme: sCurrentSetting:',\n      sCurrentSetting\n    )\n  }\n  switch (sCurrentSetting) {\n    case 'light':\n      fSetGlobalColorScheme('dark', nThemeToggel, oSettings)\n      break\n    case 'dark':\n      fSetGlobalColorScheme('light', nThemeToggel, oSettings)\n      break\n  }\n}\n\n/**\n * Add listeners for button clicks, changes to prefers-color-scheme, and the html data-user-color-scheme attr.\n *\n * @param {obj} oSettings\n */\nconst fAddEventListeners = function (nThemeToggel, oSettings = {}) {\n  // Detect prefers-color-scheme system preference changes\n  window\n    .matchMedia('(prefers-color-scheme: dark)')\n    .addEventListener('change', function (e) {\n      if (e.matches) {\n        fSetGlobalColorScheme('dark', nThemeToggel, oSettings)\n      } else {\n        fSetGlobalColorScheme('light', nThemeToggel, oSettings)\n      }\n\n      if (oSettings.debug && e.matches) {\n        console.log(\n          `ThemeToggle:fAddEventListeners: Window detected system color pref change: ${e.matches}`\n        )\n      }\n    })\n\n  // Capture clicks on the toggle\n  document.addEventListener('click', function (e) {\n    if (e.target.id === nThemeToggel.id) {\n      if (oSettings.debug) {\n        console.log(\n          `ThemeToggle:fAddEventListeners: button \"${e.target.id}\" clicked.`\n        )\n      }\n      fToggleGlobalColorScheme(nThemeToggel, oSettings)\n    }\n  })\n\n  // listen for changes to on html data-user-color-scheme attr if mutiple toggle-buttons\n  const observer = new window.MutationObserver(function (mutations) {\n    mutations.forEach(function (mutation) {\n      if (mutation.attributeName === `data-${oSettings.STORAGE_KEY}`) {\n        const sHTMLcolorMode = document.documentElement.getAttribute(\n          `data-${oSettings.STORAGE_KEY}`\n        )\n        // Update button state to reflect change\n        fSetButtonState(sHTMLcolorMode, nThemeToggel, oSettings)\n        // Update window.localStorage value to reflect change\n        fSetLocalStoreColorSchemeVal(sHTMLcolorMode, oSettings)\n\n        if (oSettings.debug) {\n          console.log(\n            `ThemeToggle:fAddEventListeners: MutationObserver change: data-${oSettings.STORAGE_KEY}=\"${sHTMLcolorMode}\"`\n          )\n        }\n      }\n    })\n  })\n  // MutationObserver options\n  observer.observe(document.documentElement, {\n    attributeFilter: [`data-${oSettings.STORAGE_KEY}`],\n    attributeOldValue: true\n  })\n}\n\nexport const ThemeToggle = function (oOptions = {}) {\n  //\n  // Settings & Defaults\n  //\n\n  const oDefaults = {\n    buttonID: '#theme-toggler',\n    debug: false\n  }\n\n  // Merge user options into defaults\n  const oSettings = Object.assign({}, oDefaults, oOptions)\n  oSettings.STORAGE_KEY = 'user-color-scheme'\n  oSettings.COLOR_MODE_CSS_PROP = '--color-mode'\n  this.oSettings = oSettings\n\n  //\n  // Varriables\n  //\n\n  const nThemeToggel = document.querySelector(oSettings.buttonID)\n\n  /**\n   * Public init method\n   *\n   * @returns public init method\n   */\n  this.init = function () {\n    if (!nThemeToggel) {\n      console.warn(\n        \"ThemeToggle: Couldn't find the theme toggel button with selector:\",\n        nThemeToggel\n      )\n      return\n    } else {\n      // Enable the button\n      nThemeToggel.removeAttribute('disabled')\n    }\n\n    // Establish toggle/theme state based on system and/or last pref saved in window.localStorage\n    fSetGlobalColorScheme(\n      fGetLocalStoreColorSchemeVal(oSettings),\n      nThemeToggel,\n      oSettings\n    )\n\n    // Add event listeners\n    fAddEventListeners(nThemeToggel, oSettings)\n\n    if (oSettings.debug) {\n      console.log(\n        'ThemeToggle:Init, current localStore setting: ',\n        window.localStorage.getItem(oSettings.STORAGE_KEY)\n      )\n    }\n  }\n}\n","import * as Queries from './_queries'\nimport { fBuildAppSettingsObj } from './_buildAppSettingsObj'\nimport { fGetLocWeatherObj } from './_LocWeather'\nimport { fRenderFullUI } from './_buildUI'\nimport { fRenderErrors } from './components/_errors'\nimport { ThemeToggle } from './_ThemeToggle'\n\n/**\n * The Weather Service\n *\n * @author bnjmnrsh@gmail.com\n *\n * @param {object} [_oSettings={}]\n */\n\nconst weatherApp = function (_oSettings = {}) {\n  // We have JS so remove the flag from the css class from the document element\n  document.documentElement.classList.remove('no-js')\n\n  /**\n   * Default params\n   *\n   * fBuildBaseWeatherApiQuery() returns the base url with def flags only.\n   * Location information is assembeled in Queries.fAssembleWeatherQuery()\n   */\n  const _oDefaults = {\n    target: '#app',\n    units: 'M',\n    debug: false,\n    devFlags: false,\n    loc: {\n      longitude: '',\n      latitude: ''\n    },\n    stale: 20 * 60000, // minutes to milliseconds, localSorage stale value\n    key: 'WEATHERLOC', // localSorage for localSorage\n    api_retries: 3,\n    locApi: 'https://ipapi.co/json/',\n    weatherApi: 'https://weatherserv.bnjmnrsh.workers.dev/?',\n    fBuildBaseWeatherApiQuery() {\n      return this.devFlags\n        ? `${this.weatherApi}&DEV=${this.devFlags}`\n        : `${this.weatherApi}`\n    }\n  }\n\n  // Build _oSettings object\n  _oSettings = fBuildAppSettingsObj(_oDefaults, _oSettings)\n\n  // Prep for saving to localstore or WebDB for PWA\n  // const _oLocWeather = fGetLocWeatherObj(_oSettings)\n\n  /**\n   * Init\n   */\n  const fInit = async function () {\n    try {\n      if (!_oSettings.loc) {\n        _oSettings.loc = await Queries.fGetLocation(\n          _oSettings.locApi,\n          _oSettings\n        )\n      }\n      const loc = await Queries.fGetLocation(_oSettings.locApi, _oSettings)\n      const _oWeather = await Queries.fGetWeather(\n        loc,\n        _oSettings.fBuildBaseWeatherApiQuery(),\n        _oSettings\n      )\n\n      if (_oSettings.debug) {\n        console.log('fGetLocation response:', loc)\n        console.log('fGetWeather response:', _oWeather)\n      }\n      if (_oWeather) {\n        fRenderFullUI(_oWeather, _oSettings)\n      }\n    } catch (e) {\n      console.error('init error: ', e)\n      fRenderErrors(e, _oSettings)\n    }\n  }\n  fInit()\n\n  // Enable ThemeToggle\n  const themeToggle = new ThemeToggle({ debug: _oSettings.debug })\n  themeToggle.init()\n\n  // Example of multiple toggles\n  // const themeToggle2 = new ThemeToggle({\n  //   debug: true,\n  //   buttonID: '#theme-toggler-2'\n  // })\n  // themeToggle2.init()\n}\n\n// With debugging and Imperial Units\nconst settings = {\n  units: 'I', // I, M\n  debug: false,\n  devFlags: false // true (error screen, malformed json), '5XX_FULL', '5XX_PARTIAL', 'DUMMY', 'NO_KEY', 'OVER_QUOTA', 'API_ERROR'\n}\n\n// Kick off our application\nweatherApp(settings)\n","/**\n * Render errors to the user\n *\n * @param {obj} err\n * @returns\n */\nexport const fRenderErrors = function (err, _oSettings) {\n  const nApp = document.querySelector(_oSettings.target)\n  nApp.innerHTML = `<div id=\"ohnos\" class=\"c-screen errors\">\n                <h3><span aria-hidden=\"true\">⥀.⥀</span><br>Oh Nooos!</h3>\n                <p class=\"sr-only\">There has been a crittical error:</p>\n                    <div class=\"errors-wrap\">\n                        ${err.stack ? '<code>' + err.stack + '</code>' : ''}\n                        ${\n                          err.status\n                            ? `<code>${err.status}: ${\n                                err.statusText ?? err.status_message\n                              }</code>`\n                            : ''\n                        }\n                    </div>\n                <img alt=\"\" class=\"screen-icon errors-icon\" src=\"./svg/icons/weather/svg/wi-alien.svg\"/>\n            </div>`\n}\n"],"names":["fClean","sDirty","temp","document","createElement","innerHTML","innerText","Request","async","sUrl","oOptions","bDebug","Promise","resolve","reject","window","fetch","then","oResponse","console","log","json","status","ok","catch","oError","status_message","fParseJSONresponse","error","Object","prototype","hasOwnProperty","call","warn","keys","length","Error","RequestWithRetry","n","fGetLocation","sIpapiLocationApi","_oSettings","navigator","geolocation","debug","enableHighAccuracy","timeout","maximumAge","pResp","getCurrentPosition","coords","fGeoLocApi","api_retries","fIPapi","fGetWeather","oLoc","sWeatherApi","urlBase","sApiQuery","latitude","longitude","sCity","sState","sCountry","city","state","country_code","fAssembleWeatherQuery","oWeather","oCloudCover","fGetWeatherIcon","oData","iHour","iCode","sPod","parseInt","weather","code","fSetStringElAttrs","sEl","props","nEl","trim","nTarget","querySelector","setAttribute","style","classList","add","class","data","map","key","fBuildAppSettingsObj","_oDefaults","assign","searchParams","URL","has","dev","get","loc","icon","parentNodeSelector","nestedNodesSelector","nlSVGs","querySelectorAll","object","forEach","node","id","outerHTML","fLoadIconObject","fTempDataPt","nTemp","sTempScale","parseFloat","fUvDataPt","nUV","sUVclass","fPercip","nMeasure","units","toFixed","fTemp","withUnits","converted","fAddTimeToDateString","sDate","replace","sNewDate","Date","getMonth","fGetLocalTime","sTime24","oDate","aTime","split","getUTCHours","getUTCMinutes","aDate","getUTCFullYear","getUTCMonth","getUTCDate","oDateUtc","UTC","getHours","getMinutes","includes","sHours","minutes","match","slice","fTime","padStart","_oTextStrings","en","now","aira_now","feels_like","uv","cloud","snow","percip","wind","aira_winds","aira_winds_join","vis","sun","moon","fDetsStr","string","_oData","_oStrings","oCURRENT","CURRENT","Convert.fTemp","app_temp","clouds","Convert.fPercip","precip","Convert.fKmPerHour","wind_spd","wind_cdir","Convert.fKm","Dates.fGetLocalTime","ob_time","sunrise","sunset","fRenderHUD","sErrorResponse","sRefresh","sIconName","description","toLowerCase","city_name","fHUDstr","fRenderForecastList","_oForecast","el","Scales.fTempDataPt","datetime","toLocaleString","weekday","Dates.fGetWeekday","getDate","Dates.fGetDayOrdinal","Icons.fGetWeatherIcon","high_temp","low_temp","join","fRenderDetails","iconCloud","iCoverage","icons","aIconData","push","Icons.fGetCloudCoverIcon","oMoon","date","Moon","phases","phase","year","month","day","c","e","jd","b","Math","round","this","name","String","yyyy","getFullYear","mm","dd","oMoonPhase","Moon.fPhase","obj_time","oIcons","template","Icons.fSetStringElAttrs","sThermometer","sSunnyDay","Scales.fUvDataPt","sSnow","sRaindrop","sWindDirection","wind_dir","sStrongWind","sBinoculars","sSunrise","fRenderFullUI","nApp","target","remove","bErrorState","fRenderForecast","DAILY","distance","setProperty","Scales.fSetVisabilityScale","fGetLocalStoreColorSchemeVal","oSettings","sCurrentSetting","localStorage","getItem","STORAGE_KEY","sResponse","getComputedStyle","documentElement","getPropertyValue","COLOR_MODE_CSS_PROP","fGetColorModeCSSpropVal","setItem","fSetLocalStoreColorSchemeVal","fSetHTMLdataAttr","sColorSetting","fSetButtonState","sSetButtonState","nThemeToggel","removeAttribute","fSetGlobalColorScheme","fAddEventListeners","matchMedia","addEventListener","matches","fToggleGlobalColorScheme","MutationObserver","mutations","mutation","attributeName","sHTMLcolorMode","getAttribute","observe","attributeFilter","attributeOldValue","ThemeToggle","buttonID","init","devFlags","stale","locApi","weatherApi","fBuildBaseWeatherApiQuery","Queries.fGetLocation","_oWeather","Queries.fGetWeather","err","stack","statusText","fRenderErrors","fInit","weatherApp"],"mappings":"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"}