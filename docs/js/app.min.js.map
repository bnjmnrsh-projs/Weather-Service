{"version":3,"file":"app.min.js","sources":["../../src/js/_helpers.js","../../src/js/_queries.js","../../src/js/_scales.js","../../src/js/_icons.js","../../src/js/_conversions.js","../../src/js/_datetime.js","../../src/js/_strings.js","../../src/js/components/_hud.js","../../src/js/components/_forecast.js","../../src/js/components/_details.js","../../src/js/_moonPhases.js","../../src/js/app.js","../../src/js/components/_errors.js"],"sourcesContent":["/**\n * Sanitise incoming API data\n *\n * @param {string} [sDirty='']\n * @returns {string} sanitised text\n */\nexport const fClean = function (sDirty = '') {\n    if (typeof sDirty === 'number') return sDirty\n    if (!sDirty) return\n\n    const temp = document.createElement('div')\n    temp.innerHTML = sDirty\n    return temp.innerText\n}\n","import { fClean } from './_helpers'\n\n/**\n * IP address based location API\n *\n * @returns {object} coordiantes object\n */\nexport const fIPapi = async function (sIpapiLocationApi) {\n    const pResp = await fetch(sIpapiLocationApi).then(function (pResp) {\n        if (pResp.ok) {\n            return pResp.json()\n        } else {\n            return Promise.reject(pResp)\n        }\n    })\n    return await pResp\n}\n\n/**\n * Assembles the formatted query string for CF API requests\n *\n * @param {string} urlBase\n * @param {obj} oLoc Response from oLocation API\n * @returns {string} Assembled url with query (cleaned)\n */\nexport const fAssembledQuery = function (urlBase, oLoc, _oSettings) {\n    if (!oLoc) return\n\n    let sApiQuery = `${urlBase}&lat=${oLoc.latitude}&lon=${oLoc.longitude}`\n\n    if (!oLoc.latitude || !oLoc.longitude) {\n        let sCity,\n            sState,\n            sCountry = ''\n\n        if ('city' in oLoc && oLoc.city) {\n            sCity = `&city=${oLoc.city}`\n        }\n        if ('state' in oLoc && oLoc.state) {\n            sState = `&state=${oLoc.state}`\n        }\n        if ('country' in oLoc && oLoc.country_code) {\n            sCountry = `&country=${oLoc.country_code}`\n        }\n\n        sApiQuery = `${urlBase}${sCity ?? ''}${sState ?? ''}${sCountry ?? ''}`\n    }\n\n    _oSettings.debug ? console.log('sApiQuery query:', fClean(sApiQuery)) : ''\n\n    return fClean(sApiQuery)\n}\n\n/**\n * Browser based location API\n *\n * @returns {object} coordiantes object\n */\nconst fGeoLocApi = async function () {\n    const oOptions = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n    }\n\n    const pResp = new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(\n            function (pResp) {\n                resolve(pResp.coords)\n            },\n            function (pResp) {\n                reject(pResp)\n            },\n            oOptions\n        )\n    })\n    return await pResp\n}\n\n/**\n * Gets the user location\n *\n * @param {string} [section='home']\n */\nexport const fGetLocation = async function (sIpapiLocationApi, _oSettings) {\n    if (navigator.geolocation) {\n        try {\n            _oSettings.debug\n                ? console.log(\n                      'fGetLocation: Checking geoLoccation API: fGeoLocApi.'\n                  )\n                : ''\n            return await fGeoLocApi()\n        } catch (e) {\n            _oSettings.debug\n                ? console.warn('fGetLocationL: failed using fGeoLocApi: ', e)\n                : ''\n            try {\n                console.log('5')\n                _oSettings.debug\n                    ? console.warn('Falling back to IP address lookup instead.')\n                    : ''\n                return await fIPapi(sIpapiLocationApi)\n            } catch (e) {\n                _oSettings.debug\n                    ? console.warn(\n                          'fGetLocation: failed sIpapiLocationApi: ',\n                          e\n                      )\n                    : ''\n            }\n        }\n    }\n}\n\n/**\n * Fetch the weather for a user's location.\n *\n * @param {object} oLoc\n * @returns {object} weather object\n */\nexport const fGetWeather = async function (oLoc, sWeatherApi, _oSettings) {\n    const pResp = await fetch(\n        fAssembledQuery(sWeatherApi, oLoc, _oSettings)\n    ).then(function (pResp) {\n        if (pResp.ok) {\n            return pResp.json()\n        } else {\n            return Promise.reject(pResp)\n        }\n    })\n    return await pResp\n}\n","/**\n * Generate a visual scale based on 5km\n *\n * @param {float} vis (expects km units)\n */\nexport const fSetVisabilityScale = function (vis) {\n    const distance = (parseFloat(vis) / 5) * 100\n\n    const nGraph = app.querySelector('.distance')\n    nGraph.style.setProperty('--distance', 100 - distance + '%')\n}\n\n/**\n * Assigns a named string based on temperatureÂ in C\n * 6 step scale for data-temp\n *\n * @param {float} nTemp\n * @returns {string}   string\n */\nexport const fTempDataPt = function (nTemp) {\n    if (typeof nTemp !== 'number') return 0\n\n    nTemp = parseFloat(nTemp)\n\n    let sTempScale = 'none'\n    switch (nTemp) {\n        case nTemp <= 0 ? nTemp : null:\n            sTempScale = 0\n            break\n        case nTemp >= 0 && nTemp < 10 ? nTemp : null:\n            sTempScale = 1\n            break\n        case nTemp >= 10 && nTemp < 22 ? nTemp : null:\n            sTempScale = 2\n            break\n        case nTemp >= 22 && nTemp < 27 ? nTemp : null:\n            sTempScale = 3\n            break\n        case nTemp >= 27 && nTemp < 34 ? nTemp : null:\n            sTempScale = 4\n            break\n        case nTemp >= 34 ? nTemp : null:\n            sTempScale = 5\n            break\n    }\n    return sTempScale\n}\n\n/**\n * Takes a UV float value and returns an int for CSS data-UV=\"*\" selectors.\n *\n * @param {float} nUV\n * @returns {int}  whole int value on  6 step scale\n */\nexport const fUvDataPt = function (nUV) {\n    if (!nUV) return\n    nUV = parseFloat(nUV)\n\n    let sUVclass = 'none'\n    switch (nUV) {\n        case nUV < 1 ? nUV : null:\n            sUVclass = '0'\n            break\n        case nUV >= 1 && nUV < 3 ? nUV : null:\n            sUVclass = '1'\n            break\n        case nUV >= 3 && nUV < 5 ? nUV : null:\n            sUVclass = '2'\n            break\n        case nUV >= 5 && nUV < 7 ? nUV : null:\n            sUVclass = '3'\n            break\n        case nUV >= 7 && nUV < 9 ? nUV : null:\n            sUVclass = '4'\n            break\n        case nUV >= 9 || nUV <= 10 ? nUV : null:\n            uvClass = 5\n            break\n    }\n    return sUVclass\n}\n","import { fClean } from './_helpers'\n\nexport const oWeather = {\n    200: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    201: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    202: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    230: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    231: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    232: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    233: ['wi-day-thunderstorm', 'wi-night-alt-thunderstorm'],\n    300: ['wi-day-rain', 'wi-night-alt-rain'],\n    301: ['wi-day-rain', 'wi-night-alt-rain'],\n    302: ['wi-day-rain', 'wi-night-alt-rain'],\n    500: ['wi-day-rain', 'wi-night-alt-rain'],\n    501: ['wi-day-rain', 'wi-night-alt-rain'],\n    502: ['wi-day-rain-wind', 'wi-night-alt-rain-wind'],\n    511: ['wi-day-sleet', 'wi-night-alt-sleet'],\n    520: ['wi-day-showers', 'wi-night-alt-showers'],\n    521: ['wi-day-showers', 'wi-night-alt-showers'],\n    522: ['wi-day-rain', 'wi-night-alt-rain'],\n    600: ['wi-day-snow', 'wi-night-alt-snow'],\n    602: ['wi-day-snow', 'wi-night-alt-snow'],\n    610: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n    611: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n    612: ['wi-day-snow-wind', 'wi-night-alt-snow-wind'],\n    622: ['wi-day-snow-thunderstorm', 'wi-night-alt-snow-thunderstorm'],\n    623: ['wi-day-snow', 'wi-night-alt-snow'],\n    700: ['wi-day-fog', 'wi-night-fog'],\n    711: ['wi-day-fog', 'wi-night-fog'],\n    721: ['wi-day-fog', 'wi-night-fog'],\n    731: ['wi-day-fog', 'wi-night-fog'],\n    741: ['wi-day-fog', 'wi-night-fog'],\n    751: ['wi-day-fog', 'wi-night-fog'],\n    800: ['wi-day-sunny', 'wi-night-clear'],\n    801: ['wi-day-cloudy', 'wi-night-alt-cloudy'],\n    802: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n    803: ['wi-day-cloudy-high', 'wi-night-partly-cloudy'],\n    804: ['wi-cloudy', 'wi-cloudy'],\n    900: ['wi-rain-mix', 'wi-rain-mix'],\n}\n\nexport const oCloudCover = {\n    0: ['wi-day-sunny', 'wi-night-clear'],\n    1: ['wi-day-cloudy-high', 'wi-night-alt-cloudy-high'],\n    2: ['wi-day-sunny-overcast', 'wi-night-partly-cloudy'],\n    3: ['wi-cloud', 'wi-cloud'],\n    4: ['wi-cloudy', 'wi-cloudy'],\n    5: ['dark-cloudy', 'dark-cloudy'],\n}\n\n/**\n * Returns the string name of the weather icon\n *\n * @param {object} oData Either the current, daily, or iHourly forecast weather object\n * @param {string || int} [iHour]\n * @returns string\n */\nexport const fGetWeatherIcon = function (oData, iHour) {\n    if (!oData) return\n\n    let iCode, sPod\n    if (!iHour && oData.hasOwnProperty('pod')) {\n        // Current weather object\n        sPod = fClean(oData.sPod) === 'd' ? 0 : 1\n        iCode = parseInt(fClean(oData.weather.code))\n    } else if ('hour' in oData) {\n        // Forcast weather object (hourly)\n        sPod = fClean(oData[iHour].sPod) === 'd' ? 0 : 1\n        iCode = parseInt(fClean(oData[iHour].weather.code))\n    } else {\n        // Forcast weather object (days)\n        sPod = 1\n        iCode = parseInt(fClean(oData.weather.code))\n    }\n    return oWeather[iCode][sPod]\n}\n\n/**\n * Select the cloud iCoverage icon based on percentage value\n *\n * @param {int} iCoverage A percentage figure 0-100\n * @param {string} sPod Point of Day\n * @returns {string} the string name of the icon\n */\nexport const fGetCloudCoverIcon = function (iCoverage, sPod = 'd') {\n    if (typeof iCoverage !== 'number') return\n\n    // set day or night icon set\n    sPod = sPod = 'd' ? 0 : 1\n\n    const icons = oCloudCover\n\n    iCoverage = parseInt(iCoverage)\n\n    let aIconData = ''\n\n    switch (iCoverage) {\n        case iCoverage >= 0 && iCoverage < 16 ? iCoverage : null:\n            aIconData = [icons[0][sPod], 0]\n            break\n        case iCoverage >= 16 && iCoverage < 32 ? iCoverage : null:\n            aIconData = [icons[1][sPod], 1]\n            break\n        case iCoverage >= 32 && iCoverage < 48 ? iCoverage : null:\n            aIconData = [icons[2][sPod], 2]\n            break\n        case iCoverage >= 48 && iCoverage < 65 ? iCoverage : null:\n            aIconData = [icons[3][sPod], 3]\n            break\n        case iCoverage >= 65 && iCoverage < 83 ? iCoverage : null:\n            aIconData = [icons[4][sPod], 4]\n            break\n        case iCoverage >= 83 && iCoverage <= 100 ? iCoverage : null:\n            aIconData = [icons[5][sPod], 5]\n            break\n    }\n    aIconData.push(\n        document.querySelector(`#svgs .svg-${aIconData[0]}`).outerHTML\n    )\n\n    return aIconData\n}\n\n/**\n * Takes a string based representation of a DOM element, and adds inline style and/or data-* attributes to it.\n *\n * @param {string} sEl\n * @param {object} props\n * @returns {string}\n *\n * The props object may contain a top level `style` propery for inline css string\n * and or a `data` object which will be mapped to data-* attributes on the element.\n *\n *  `<span class=\"inline-icon\">\n *    ${Icons.fSetStringElAttrs(oIcons.sWindDirection, {\n *        style: `transform: rotate(${sWindDeg}deg)`,\n *        class: 'some-class',\n *        data: { temp: '6' },\n *    })}\n *  </span>`\n */\n\nexport const fSetStringElAttrs = function (sEl, props = {}) {\n    if ('content' in document.createElement('template')) {\n        const nEl = document.createElement('div')\n        nEl.innerHTML = sEl.trim()\n        const nTarget = nEl.querySelector('div >:first-child')\n\n        if (props.hasOwnProperty('style')) {\n            nTarget.setAttribute('style', props.style)\n        }\n        if (props.hasOwnProperty('class')) {\n            nTarget.classList.add(props.class)\n        }\n        if (\n            props.hasOwnProperty('data') &&\n            Object.keys(props.data).length > 0\n        ) {\n            Object.keys(props.data).map((key) => {\n                nTarget.setAttribute(`data-${key}`, props.data[key])\n            })\n        }\n        return nEl.innerHTML\n    }\n    return ''\n}\n","/**\n * *NOTE: the API has params for both imperial and metric units, however,\n * we do the conversion ourselves so that we can switch without additional api calls.\n */\n\n/**\n * mm/hr to inch/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted measurement as string with units\n */\nexport const fPercip = function (nMeasure, _oSettings) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fPercip recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n    if (nMeasure === 0) {\n        return nMeasure\n    }\n\n    if (_oSettings.units === 'M') {\n        return `${parseFloat(nMeasure).toFixed(2)}&nbsp;mm/hr`\n    } else {\n        return `${(parseFloat(nMeasure) * 0.0393701).toFixed(2)}&nbsp;inch/hr`\n    }\n}\n\n/**\n * C to F conversion\n *\n * @param {float} nMeasure\n * @returns {string || number} converted tepm as string with units, or as a Float\n */\nexport const fTemp = function (nMeasure, _oSettings, withUnits = true) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fTemp recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n    if (typeof nMeasure !== 'number') return 0\n    if (_oSettings.units === 'M') {\n        let converted = parseFloat(nMeasure).toFixed(1)\n        return withUnits ? `${converted}Â°&nbsp;C` : converted\n    } else {\n        let converted = ((parseFloat(nMeasure) * 9) / 5 + 32).toFixed(1)\n        return withUnits ? `${converted}Â°&nbsp;F` : converted\n    }\n}\n\n/**\n * km/hr to mi/hr\n *\n * @param {float} nMeasure\n * @returns {string} converted wind speed as string with units\n */\nexport const fKmPerHour = function (nMeasure, _oSettings) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fKmPerHour recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n    if (typeof nMeasure !== 'number') return 0\n\n    if (_oSettings.units === 'M') {\n        return `${(parseFloat(nMeasure) * 3.6000059687997).toFixed(\n            2\n        )}&nbsp;km/hr`\n    } else {\n        return `${(parseFloat(nMeasure) * 2.23694).toFixed(2)}&nbsp;mi/hr`\n    }\n}\n\n/**\n * km to mi\n *\n * @param {float} nMeasure\n * @returns {string} converted distance as string with units\n */\nexport const fKm = function (nMeasure, _oSettings) {\n    if (typeof nMeasure !== 'number' && _oSettings.debug) {\n        console.warn(\n            `fKm recieved a non numeric value: ${nMeasure} typeof: ${typeof nMeasure}`\n        )\n    }\n\n    if (typeof nMeasure !== 'number') return 0\n    if (_oSettings.units === 'M') {\n        return `${parseFloat(nMeasure).toFixed(2)}&nbsp;km`\n    } else {\n        return `${(parseFloat(nMeasure) * 0.621371).toFixed(2)}&nbsp;miles`\n    }\n}\n","/**\n * Possible Weatherbit.io date responses via our Cloudflare Worker:\n *\n * 1) CURRENT.data[0].ob_time: \"2021-06-30 18:58\" <- the space will throw an errror on safari\n * 2) CURRENT.data[0].datetime: \"2021-06-30:19\" <- will not convert to valid date object\n * 3) DAILY.data[x].datetime: \"2021-06-30\"\n * 4) DAILY.data[x].valid_date: \"2021-06-30\"\n */\n\n/**\n * A helper to ensure that date strings from API are translated into the correct local time and not UTC\n * Dates without a time (as we have from the Weather.io API) may be converted to an invalid date by Chrome\n * https://css-tricks.com/everything-you-need-to-know-about-date-in-javascript/\n * API:\n *\n * TODO: A regex for different valid date patterns might be a more robust solution, however in this case we trust the API to be consistant.\n *\n * @param {string} sDate\n * @returns {string} date as string with time component\n */\nfunction fAddTimeToDateString(sDate) {\n    // If we have recieved ob_time, repalce the space with a 'T'\n    if (sDate.length >= 16) return sDate.replace(' ', 'T')\n\n    // Will produce a string that can be converted into a valid date object\n    const new_sDate = `${sDate}T00:00`\n    const oDate = new Date(new_sDate)\n\n    // test to see if we now have string which creates a valid date\n    if (typeof oDate.getMonth !== 'function') {\n        throw new Error(\n            `fAddTimeToDateString not provided a string that can be converted to a valid date: \"${sDate}:`\n        )\n    }\n\n    // return the new date string vaild for cases 2, 3, and 4)\n    return new_sDate\n}\n\n/**\n * 24H to 12H conversion based on _oSettings.units = I or M\n * https://stackoverflow.com/a/58878443/362445\n *\n * @param {string} sTime24\n * @param {object} _oSettings\n * @returns {string} converted time as string with units\n */\nexport const fTime = function (sTime24, _oSettings) {\n    if (!sTime24.includes(':') || !sTime24.length == '5') {\n        throw new Error('fTime not given a valid time string: HH:MM')\n    }\n\n    if (_oSettings.units === 'M') return sTime24\n    console.log('sTime24', sTime24)\n    const [sHours, minutes] = sTime24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1)\n    const period = +sHours < 12 ? 'AM' : 'PM'\n    const hours = +sHours % 12 || 12\n\n    return `${hours}:${minutes}&nbsp;${period}`\n}\n\n/**\n * UTC time provided by API into the local time of the users system.\n * If no date or time are provided, then the current datetime is returned\n *\n * @param {string} sDate (optional)\n * @param {object} _oSettings\n * @param {string} sTime24 (optional)\n * @returns {string} Time as string\n */\nexport const fGetLocalTime = function (sDate = '', _oSettings, sTime24 = '') {\n    let oDate, aTime\n    console.log('sDate', sDate)\n    if (sDate !== '') {\n        oDate = new Date(fAddTimeToDateString(sDate))\n    } else {\n        oDate = new Date()\n    }\n    if (sTime24 != '') {\n        aTime = sTime24.split(':')\n    } else {\n        aTime = [oDate.getUTCHours(), oDate.getUTCMinutes()]\n    }\n    const aDate = [\n        oDate.getUTCFullYear(),\n        oDate.getUTCMonth(),\n        oDate.getUTCDate(),\n        aTime[0],\n        aTime[1],\n    ]\n\n    const oDateUtc = new Date(Date.UTC(...aDate))\n\n    if (_oSettings.debug === true) {\n        console.log('fGetLocalTime provided sTime24: ', sTime24)\n        console.log(\n            'fGetLocalTime UTC converted time:',\n            `${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`\n        )\n    }\n    console.log(oDate)\n    return fTime(`${oDateUtc.getHours()}:${oDateUtc.getMinutes()}`, _oSettings)\n}\n\n/**\n * Format date string to abreviated weekday name\n *\n * @param {string} sDate, valid date string\n * @returns {string}\n */\nexport const fGetWeekday = function (sDate) {\n    const oDate = new Date(fAddTimeToDateString(sDate))\n\n    // test our oDate object\n    if (!oDate || typeof oDate.getMonth !== 'function') {\n        throw new Error('fGetWeekday provided invalid date')\n    }\n\n    return oDate.toLocaleString('default', { weekday: 'short' })\n}\n\n/**\n * Format date string to weekday ordinal number (string)\n *\n * @param {string} sDate\n * @returns string, weekday ordinal number\n */\nexport const fGetDayOrdinal = function (sDate) {\n    const oDate = new Date(fAddTimeToDateString(sDate))\n\n    // test our date object\n    if (!oDate || typeof oDate.getMonth !== 'function') {\n        throw new Error('fFormatDayOrdinal provided invalid date')\n    }\n\n    const sFormatedDate =\n        oDate.getDate() +\n        (oDate.getDate() % 10 == 1 && oDate.getDate() != 11\n            ? 'st'\n            : oDate.getDate() % 10 == 2 && oDate.getDate() != 12\n            ? 'nd'\n            : oDate.getDate() % 10 == 3 && oDate.getDate() != 13\n            ? 'rd'\n            : 'th')\n    return sFormatedDate\n}\n","import * as Convert from './_conversions'\nimport * as Dates from './_datetime'\nimport { fClean } from './_helpers'\n\nconst _oTextStrings = {\n    en: {\n        now: 'Currently: ',\n        aira_now: 'The weather is currently: ',\n        feels_like: 'Feels Like:',\n        uv: 'UV:',\n        cloud: 'Cloud:',\n        snow: 'Snow:',\n        percip: 'Rain:',\n        wind: 'Wind:',\n        aira_winds: 'Winds traveling at',\n        aira_winds_join: 'from the',\n        vis: 'Visibility:',\n        sun: 'Sun:',\n        moon: 'Moon:',\n    },\n}\n\n/**\n * Perform string replacement for strings in the HUD component.\n *\n * @param {string} string\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string} Formatted string\n */\nexport const fHUDstr = function (\n    string,\n    _oData,\n    _oSettings,\n    _oStrings = _oTextStrings\n) {\n    const oCURRENT = _oData.CURRENT.data[0]\n\n    if (!string) return ''\n    return (\n        string\n            // HUD\n            .replace('{{now}}', _oStrings.en.now)\n            .replace(\n                '{{aira_weather_description}}',\n                `${_oStrings.en.aira_now} ${fClean(\n                    oCURRENT.weather.description\n                )}`\n            )\n            .replace(\n                '{{weather_description}}',\n                fClean(oCURRENT.weather.description).toLowerCase()\n            )\n            .replace(\n                '{{temp}}',\n                Convert.fTemp(fClean(oCURRENT.temp), _oSettings)\n            )\n            .replace('{{city}}', fClean(oCURRENT.city_name))\n            .replace('{{country}}', fClean(oCURRENT.country_code))\n    )\n}\n\n/**\n * Perform string replacement for strings in the details component.\n *\n * @param {string} string\n * @param {object} _oData\n * @param {object} _oSettings\n * @returns {string} Formatted string\n */\nexport const fDetsStr = function (\n    string,\n    _oData,\n    _oSettings,\n    _oStrings = _oTextStrings\n) {\n    const oCURRENT = _oData.CURRENT.data[0]\n\n    if (!string) return ''\n    return (\n        string\n            // HUD\n            // Details\n            .replace('{{feels_like}}', _oStrings.en.feels_like)\n            .replace(\n                '{{app_temp}}',\n                Convert.fTemp(fClean(oCURRENT.app_temp), _oSettings)\n            )\n            .replace('{{uv}}', _oStrings.en.uv)\n            .replace('{{uv_index}}', fClean(oCURRENT.uv.toFixed(2)))\n\n            .replace('{{cloud}}', _oStrings.en.cloud)\n            .replace('{{cloud_percent}}', `${fClean(oCURRENT.clouds)}%`)\n            .replace('{{snow}}', _oStrings.en.snow)\n            .replace(\n                '{{snow_percip}}',\n                Convert.fPercip(fClean(oCURRENT.snow), _oSettings)\n            )\n            .replace('{{rain}}', _oStrings.en.percip)\n            .replace(\n                '{{rain_percip}}',\n                Convert.fPercip(fClean(oCURRENT.precip), _oSettings)\n            )\n            .replace('{{aira_winds}}', _oStrings.en.aira_winds)\n            .replace('{{aira_winds_join}}', _oStrings.en.aira_winds_join)\n\n            .replace('{{wind}}', _oStrings.en.wind)\n            .replace(\n                '{{wind_speed}}',\n                Convert.fKmPerHour(fClean(oCURRENT.wind_spd), _oSettings)\n            )\n            .replace('{{wind_direction}}', fClean(oCURRENT.wind_cdir))\n            .replace('{{vis}}', _oStrings.en.vis)\n            .replace(\n                '{{vis_distance}}',\n                Convert.fKm(fClean(oCURRENT.vis), _oSettings)\n            )\n            .replace('{{sun_rise_set}}', _oStrings.en.sun)\n            .replace(\n                '{{sun_rise}}',\n                Dates.fGetLocalTime(\n                    fClean(oCURRENT.ob_time),\n                    _oSettings,\n                    fClean(oCURRENT.sunrise)\n                )\n            )\n            .replace(\n                '{{sun_set}}',\n                Dates.fGetLocalTime(\n                    fClean(oCURRENT.ob_time),\n                    _oSettings,\n                    fClean(oCURRENT.sunset)\n                )\n            )\n            .replace('{{moon}}', _oStrings.en.moon)\n    )\n}\n","import { fGetWeatherIcon } from '../_icons'\nimport { fTempDataPt } from '../_scales'\nimport { fHUDstr } from '../_strings'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's header\n *\n * @param {array} _oData\n * @returns {string}\n */\nexport const fRenderHUD = function (_oData, _oSettings) {\n    _oSettings.log ? console.log('fRenderHUD: ', _oData) : ''\n\n    const oCURRENT = _oData.CURRENT.data[0]\n    const sIconName = fGetWeatherIcon(oCURRENT)\n\n    const template = `<header\n        id=\"hud\" class=\"\" data-temp=\"${fTempDataPt(oCURRENT.temp)}\">\n            <h3>\n                <img class=\"weather-icon\" alt=\"\" src=\"./svg/icons/weather/svg/${sIconName}.svg\" />\n                <span aria-hidden=\"true\">{{temp}}</span>\n                </h3>\n                <ul class=\"unstyled\">\n                <li aria-hidden=\"true\">{{now}} {{weather_description}}</li>\n                <li hidden>{{aira_weather_description}}</li>\n                <li>{{city}}, {{country}}</li>\n            </ul>\n        </header>\n        `\n    return fHUDstr(template, _oData, _oSettings)\n}\n","import * as Convert from '../_conversions'\nimport * as Dates from '../_datetime'\nimport * as Icons from '../_icons'\nimport * as Scales from '../_scales'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders individual upcoming forecast li elements\n *\n * @param {object} _oForecast\n * @returns {string}\n */\nconst fRenderForecastList = function (_oForecast, _oSettings) {\n    console.log('fRenderForcast: ', _oForecast)\n    console.log('_oSettings: ', _oSettings)\n\n    const days = Object.keys(_oForecast)\n    return days\n        .map(function (el) {\n            return `<li data-temp=\"${Scales.fTempDataPt(\n                fClean(_oForecast[el].temp),\n                _oSettings\n            )}\">\n                        <header datetime=\"${fClean(\n                            _oForecast[el].datetime\n                        )}\" aria-description=\"The forecast for\">${Dates.fGetWeekday(fClean(_oForecast[el].datetime))} ${Dates.fGetDayOrdinal(fClean(_oForecast[el].datetime))}</header>\n                        <img class=\"weather-icon\" alt=\"${fClean(\n                            _oForecast[el].weather.description\n                        )}\" src=\"./svg/icons/weather/svg/${Icons.fGetWeatherIcon(_oForecast[el])}.svg\" />\n                        <p class=\"forecast-description\" aria-hidden=\"true\">${fClean(\n                            _oForecast[el].weather.description.toLowerCase()\n                        )}</p>\n                         <span><stong>${Convert.fTemp(\n                             fClean(_oForecast[el].high_temp),\n                             _oSettings\n                         )}</stong></span>\n                          <span>${Convert.fTemp(\n                              fClean(_oForecast[el].low_temp),\n                              _oSettings\n                          )}</span>\n\n                    </li>`\n        })\n        .join('')\n}\n\n/**\n * Renders the app's upcoming forecast section\n *\n * @param {object} _oForecast\n * @returns {string}\n */\nexport const fRenderForecast = function (_oForecast, _oSettings) {\n    return `\n        <div id=\"forecast\" aria-description=\"The weather forecast for the next 16 days.\">\n            <ul class=\"unstyled\">\n                ${fRenderForecastList(_oForecast, _oSettings)}\n            </ul>\n        </div>\n        `\n}\n","import * as Convert from '../_conversions'\nimport * as Icons from '../_icons'\nimport * as Moon from '../_moonPhases'\nimport * as Scales from '../_scales'\nimport { fDetsStr } from '../_strings'\nimport { fClean } from '../_helpers'\n\n/**\n * Renders the app's details secection\n *\n * @param {array} data\n * @returns {string}\n */\nexport const fRenderDetails = function (_oData, _oSettings) {\n    const oCURRENT = _oData.CURRENT.data[0]\n    const sWindDirection = fClean(oCURRENT.wind_cdir_full)\n    const sWindDeg = fClean(oCURRENT.wind_dir)\n    const iconCloud = Icons.fGetCloudCoverIcon(oCURRENT.clouds)\n    const oMoon = Moon.fPhase(oCURRENT.obj_time, _oSettings)\n    const oIcons = _oSettings.icon\n\n    const template = `\n        <div id=\"details\">\n            <ul class=\"unstyled\">\n                <li class=\"feels-like\">\n                    <span class=\"left-col\">{{feels_like}} {{app_temp}}</span>\n                    ${Icons.fSetStringElAttrs(_oSettings.icon.sThermometer, {\n                        class: 'inline-icon',\n                        data: {\n                            temp: Scales.fTempDataPt(fClean(oCURRENT.app_temp)),\n                        },\n                    })}\n                </li>\n                ${\n                    oCURRENT.uv\n                        ? `<li class=\"uv-index\">\n                            <span class=\"left-col\">{{uv}} {{uv_index}}</span>\n                            ${Icons.fSetStringElAttrs(\n                                _oSettings.icon.sSunnyDay,\n                                {\n                                    class: 'inline-icon',\n                                    data: {\n                                        uv: Scales.fUvDataPt(\n                                            fClean(oCURRENT.uv),\n                                            _oSettings\n                                        ),\n                                    },\n                                }\n                            )}\n                          </li>`\n                        : ''\n                }\n                <li class=\"cloud-cover\">\n                    <span class=\"left-col\">{{cloud}} {{cloud_percent}}</span>\n                    ${iconCloud[2]}\n                </li>\n                ${\n                    oCURRENT.snow\n                        ? `<li>\n                            <span class=\"left-col\">{{snow}} {{snow_percip}}</span>\n                            ${oIcons.sSnow}\n                          </li>`\n                        : ''\n                }\n                <li class=\"precipitation\">\n                    <span class=\"left-col\">{{rain}} {{rain_percip}}</span>\n                    ${oIcons.sRaindrop}\n                </li>\n                <li class=\"windspeed\" aria-description=\"{{aira_winds}} \">\n                    <span class=\"left-col\">\n                        {{wind}} {{wind_speed}}<span aira-hidden>&nbsp;|&nbsp;</span><span hidden>{{aira_winds_join}}</span> {{wind_direction}}\n                    </span>\n                    <span class=\"inline-icon\">\n                        ${Icons.fSetStringElAttrs(oIcons.sWindDirection, {\n                            style: `transform: rotate(${fClean(\n                                oCURRENT.wind_dir\n                            )}deg)`,\n                        })}\n                        ${oIcons.sWind}\n                    </span>\n                </li>\n                <li class=\"visibility\">\n                    <div class=\"visibility-wrap\">\n                        <span class=\"left-col\">{{vis}} {{vis_distance}}</span>\n                        ${oIcons.sBinoculars}\n                    </div>\n                    <div class=\"visibility-graph\" aria-hidden=\"true\"><div class=\"distance\"></div></div>\n                </li>\n                <li class=\"sun-rise-set\">\n                    <span class=\"left-col\">{{sun_rise_set}} {{sun_rise}} | {{sun_set}}</span>\n                    ${oIcons.sSunrise}\n                </li>\n                <li class=\"moonphase\">\n                    <span class=\"left-col\">{{moon}} ${oMoon.name}</span>\n                    <img class=\"inline-icon moon\"\n                        alt=\"\"\n                        height=\"25\" width=\"25\"\n                        src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\"/>\n                </li>\n            </ul>\n        </div>`\n    return fDetsStr(template, _oData, _oSettings)\n}\n","/**\n * https://gist.github.com/endel/dfe6bb2fbe679781948c#gistcomment-2811037\n *\n * @param {Date object || date string} Date Object or String with valid formatting to make date object from.\n * @returns {object} Moon phase object\n */\nexport const fPhase = function (date, _oSettings) {\n    const Moon = {\n        phases: [\n            'new',\n            'waxing-crescent',\n            'first-quarter',\n            'waxing-gibbous',\n            'full',\n            'waning-gibbous',\n            'third-quarter',\n            'waning-crescent',\n        ],\n        phase: function (year, month, day) {\n            let c = 0\n            let e = 0\n            let jd = 0\n            let b = 0\n\n            if (month < 3) {\n                year--\n                month += 12\n            }\n\n            ++month\n            c = 365.25 * year\n            e = 30.6 * month\n            jd = c + e + day - 694039.09 // jd is total days elapsed\n            jd /= 29.5305882 // divide by the moon cycle\n            b = parseInt(jd) // int(jd) -> b, take integer part of jd\n            jd -= b // subtract integer part to leave fractional part of original jd\n            b = Math.round(jd * this.phases.length) // scale fraction from 0-8 and round\n\n            if (b >= 8) b = 0 // 0 and 8 are the same so turn 8 into 0\n            return { phase: b, name: Moon.phases[b] }\n        },\n    }\n\n    // if no date, create date based on current system date\n    date = date || new Date()\n\n    // if provided a date, try to make a new Date object\n    date = date instanceof String ? new Date(date) : date\n\n    // test our date object\n    if (!date || typeof date.getMonth !== 'function') {\n        _oSettings.debug\n            ? console.error(\n                  `fMoonPhase provided invalid date strings: year: ${year}, month: ${month}, day: ${day}`\n              )\n            : ''\n    }\n\n    const yyyy = date.getFullYear()\n    const mm = date.getMonth() + 1 // 0 indexed\n    const dd = date.getDate()\n\n    const oMoonPhase = Moon.phase(yyyy, mm, dd)\n\n    _oSettings.debug ? console.log('fMoonPhase result: ', oMoonPhase) : ''\n\n    return oMoonPhase\n}\n","import * as Queries from './_queries'\nimport * as Scales from './_scales'\n\nimport { fRenderHUD } from './components/_hud'\nimport { fRenderForecast } from './components/_forecast'\nimport { fRenderDetails } from './components/_details'\nimport { fErrorDisplay } from './components/_errors'\n\n/**\n * The Weather Service\n * @author bnjmnrsh@gmail.com\n *\n * @param {object} [_oSettings={}]\n */\n\nconst weatherApp = function (_oSettings = {}) {\n    const _oDefaults = {\n        target: '#app',\n        units: 'M',\n        debug: false,\n        dev: false,\n    }\n\n    // Merge settings with defaults\n    _oSettings = Object.assign(_oDefaults, _oSettings)\n\n    // API urls\n    const sIpapiLocationApi = 'https://ipapi.co/json/'\n    let sWeatherApi = `https://weatherserv.bnjmnrsh.workers.dev/?`\n\n    if (_oSettings.dev === true) {\n        sWeatherApi = `${sWeatherApi}&DEV=true`\n    }\n\n    // DOM Target\n    const nApp = document.querySelector(_oSettings.target)\n\n    // SVGs are staged in HTML for details section,\n    // the remainder of images are inlined(except Cloudcover & Moon, loaded dynamically)\n    const nIcons = document.querySelector('#svgs')\n    _oSettings.icon = {\n        // degrees/compass inline\n        sWind: nIcons.querySelector('.svg-wi-strong-wind').outerHTML,\n        sThermometer: nIcons.querySelector('.svg-wi-thermometer').outerHTML,\n        sWindDirection: nIcons.querySelector('.svg-wi-wind-deg').outerHTML,\n        sSnow: nIcons.querySelector('.svg-wi-snow').outerHTML,\n\n        // cloud lodaded dynamically\n        sRaindrop: nIcons.querySelector('.svg-wi-raindrop').outerHTML,\n        sBinoculars: nIcons.querySelector('.svg-binoculars').outerHTML,\n        sSunrise: nIcons.querySelector('.svg-wi-sunrise').outerHTML,\n        sSunset: nIcons.querySelector('.svg-wi-sunset').outerHTML,\n        sSunnyDay: nIcons.querySelector('.svg-wi-day-sunny').outerHTML,\n        // moon phases loaded as <img src=\"./svg/icons/moon/svg/${oMoon.phase}.svg\">\n    }\n\n    /**\n     * Build the UI\n     *\n     * @param {array} data\n     */\n    const fBuildUI = function (_oData) {\n        app.innerHTML =\n            fRenderHUD(_oData, _oSettings) +\n            fRenderDetails(_oData, _oSettings) +\n            fRenderForecast(_oData.DAILY.data, _oSettings)\n\n        // Adjust the visibility 'fogg' bar in the details section\n        Scales.fSetVisabilityScale(_oData.CURRENT.data[0].vis)\n    }\n\n    /**\n     * Init\n     */\n    const fInit = async function () {\n        try {\n            const loc = await Queries.fGetLocation(\n                sIpapiLocationApi,\n                _oSettings\n            )\n            const _oWeather = await Queries.fGetWeather(\n                loc,\n                sWeatherApi,\n                _oSettings\n            )\n\n            _oSettings.debug ? console.log('fGetLocation response:', loc) : ''\n            _oSettings.debug\n                ? console.log('fGetWeather response:', _oWeather)\n                : ''\n\n            fBuildUI(_oWeather)\n        } catch (e) {\n            console.error('init error: ', e)\n            nApp.innerHTML = fErrorDisplay(e)\n        }\n    }\n    fInit()\n}\n\n// with debugging and Imperial Units\nconst settings = {\n    units: 'M',\n    debug: true,\n    dev: true,\n}\n\nweatherApp(settings)\n","/**\n * Render errors to the user\n *\n * @param {obj} err\n * @returns\n */\nexport const fErrorDisplay = function (err) {\n    return `<div id=\"hud\">\n                <div id=\"ohnos\">\n                    <h3><span aria-hidden=\"true\">â¥.â¥<br /></span>Oh Nooos!</h3>\n                    <p class=\"sr-only\">There has been a crittical error:</p>\n                        <div>\n                            ${err.stack ? '<pre>' + err.stack + '<pre>' : ''}\n                            ${\n                                err.status\n                                    ? '<pre>' +\n                                      err.statusText +\n                                      ': ' +\n                                      err.status +\n                                      '<pre>'\n                                    : ''\n                            }\n                        </div>\n                    <img alt=\"\" src=\"./svg/icons/weather/svg/wi-alien.svg\"/>\n                </div>\n            </div>`\n}\n"],"names":["fClean","sDirty","temp","document","createElement","innerHTML","innerText","fGetLocation","async","sIpapiLocationApi","_oSettings","navigator","geolocation","debug","console","log","oOptions","enableHighAccuracy","timeout","maximumAge","pResp","Promise","resolve","reject","getCurrentPosition","coords","fGeoLocApi","e","warn","fetch","then","ok","json","fIPapi","fGetWeather","oLoc","sWeatherApi","urlBase","sApiQuery","latitude","longitude","sCity","sState","sCountry","city","state","country_code","fAssembledQuery","fTempDataPt","nTemp","sTempScale","parseFloat","fUvDataPt","nUV","sUVclass","uvClass","oWeather","200","201","202","230","231","232","233","300","301","302","500","501","502","511","520","521","522","600","602","610","611","612","622","623","700","711","721","731","741","751","800","801","802","803","804","900","oCloudCover","0","1","2","3","4","5","fGetWeatherIcon","oData","iHour","iCode","sPod","hasOwnProperty","parseInt","weather","code","fSetStringElAttrs","sEl","props","nEl","trim","nTarget","querySelector","setAttribute","style","classList","add","class","Object","keys","data","length","map","key","fPercip","nMeasure","units","toFixed","fTemp","withUnits","converted","fAddTimeToDateString","sDate","replace","new_sDate","Date","getMonth","Error","fGetLocalTime","sTime24","oDate","aTime","split","getUTCHours","getUTCMinutes","aDate","getUTCFullYear","getUTCMonth","getUTCDate","oDateUtc","UTC","getHours","getMinutes","includes","sHours","minutes","match","slice","fTime","_oTextStrings","en","now","aira_now","feels_like","uv","cloud","snow","percip","wind","aira_winds","aira_winds_join","vis","sun","moon","fDetsStr","string","_oData","_oStrings","oCURRENT","CURRENT","Convert.fTemp","app_temp","clouds","Convert.fPercip","precip","Convert.fKmPerHour","wind_spd","wind_cdir","Convert.fKm","Dates.fGetLocalTime","ob_time","sunrise","sunset","fRenderHUD","sIconName","description","toLowerCase","city_name","fHUDstr","fRenderForecastList","_oForecast","el","Scales.fTempDataPt","datetime","toLocaleString","weekday","Dates.fGetWeekday","getDate","Dates.fGetDayOrdinal","Icons.fGetWeatherIcon","high_temp","low_temp","join","fRenderDetails","wind_cdir_full","wind_dir","iconCloud","iCoverage","icons","aIconData","push","outerHTML","Icons.fGetCloudCoverIcon","oMoon","date","Moon","phases","phase","year","month","day","c","jd","b","Math","round","this","name","String","error","yyyy","getFullYear","mm","dd","oMoonPhase","Moon.fPhase","obj_time","oIcons","icon","template","Icons.fSetStringElAttrs","sThermometer","sSunnyDay","Scales.fUvDataPt","sSnow","sRaindrop","sWindDirection","sWind","sBinoculars","sSunrise","assign","target","dev","nApp","nIcons","sSunset","fBuildUI","app","fRenderForecast","DAILY","distance","setProperty","Scales.fSetVisabilityScale","loc","Queries.fGetLocation","_oWeather","Queries.fGetWeather","err","stack","status","statusText","fInit","weatherApp"],"mappings":"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"}